Search.setIndex({"alltitles": {"A concrete example": [[47, "a-concrete-example"], [48, "a-concrete-example"]], "A new analog emulator": [[423, "a-new-analog-emulator"]], "A new simulated QPU in myQLM": [[423, "a-new-simulated-qpu-in-myqlm"]], "API reference": [[62, null]], "Abstract and utility QPU classes": [[361, "abstract-and-utility-qpu-classes"]], "Abstract plugin": [[404, "abstract-plugin"]], "Adding plugins to your computation stack": [[422, "adding-plugins-to-your-computation-stack"]], "Additional features": [[53, "additional-features"]], "Adiabatic Quantum Optimization (AQO)": [[439, null]], "Advanced matching": [[57, "advanced-matching"]], "Advanced operations": [[12, "advanced-operations"]], "Advanced optimization": [[58, "advanced-optimization"]], "Algorithms": [[237, "algorithms"]], "All-in-one compiler": [[52, "all-in-one-compiler"]], "Allocating qubit and classical registers": [[12, "allocating-qubit-and-classical-registers"]], "Allocation": [[16, "allocation"], [16, "id1"]], "Analog Jobs": [[21, null]], "Analog QPUs and simulation modes": [[34, "id1"]], "Analog Quantum Simulators": [[361, "analog-quantum-simulators"]], "Analog computing": [[34, null]], "Analog programming": [[18, null]], "Ancillae management and compute scopes": [[15, null]], "Annealing programming": [[22, null]], "Applying quantum gate": [[12, "applying-quantum-gate"]], "Arithmetic expressions": [[16, "arithmetic-expressions"]], "Arithmetic routines": [[237, "arithmetic-routines"]], "Arity generator": [[10, "arity-generator"]], "Atomic and molecular studies": [[188, "atomic-and-molecular-studies"]], "Atos Quantum Assembler (AQASM)": [[17, null]], "Automated ancillae management": [[15, "automated-ancillae-management"]], "Automated batch generation": [[31, null]], "Automated rewriting": [[312, "automated-rewriting"]], "Available binders": [[425, "available-binders"]], "Background": [[18, "background"]], "Basic quantum algorithms": [[422, "basic-quantum-algorithms"]], "Batch generators in myQLM": [[423, "batch-generators-in-myqlm"]], "Behavior of the optimizer": [[58, "behavior-of-the-optimizer"]], "Bibliography": [[23, "bibliography"], [438, "bibliography"]], "Bidirectional Clifford re-normalization": [[53, "bidirectional-clifford-re-normalization"]], "Binding variables": [[11, "binding-variables"]], "Bosonic simulations": [[39, null]], "Building phase oracles": [[16, "building-phase-oracles"]], "Building schedules": [[19, null]], "C++ Low-level Statevector": [[362, "c-low-level-statevector"]], "CLinalg: C++ Linear-algebra-based simulator": [[43, "clinalg-c-linear-algebra-based-simulator"], [44, null]], "Circuit rewriting plugins": [[328, "circuit-rewriting-plugins"]], "Circuit synthesis plugins": [[328, "circuit-synthesis-plugins"]], "Cirq interoperability": [[428, null]], "Classes for the supported NP-Hard problems": [[285, "classes-for-the-supported-np-hard-problems"]], "Combinatorial Optimization Generators": [[222, "combinatorial-optimization-generators"]], "Combinatorial Optimization Generators Results": [[301, "combinatorial-optimization-generators-results"]], "Combinatorial Optimization Problems": [[422, "combinatorial-optimization-problems"]], "Combinatorial optimization": [[431, null]], "Common many-body Hamiltonians": [[188, "common-many-body-hamiltonians"]], "Compatibility Matrix": [[4, "compatibility-matrix"]], "Compilation time linking": [[17, "compilation-time-linking"]], "Compiling .aqasm files": [[17, "compiling-aqasm-files"]], "Compiling and rewriting quantum circuits": [[51, null]], "Compiling quantum jobs using plugins": [[52, null]], "Compressing single qubit gates": [[59, null]], "Compute/uncompute scopes": [[15, "compute-uncompute-scopes"]], "Conditionals on quantum integers": [[16, "conditionals-on-quantum-integers"]], "Connecting to a QPU": [[427, "connecting-to-a-qpu"]], "Connecting to a QPU/Backend": [[426, "connecting-to-a-qpu-backend"]], "Constrained Graph Problems": [[432, "constrained-graph-problems"]], "Constructing one or multiple Jobs (using Batch)": [[28, null]], "Contributing to myQLM": [[424, null]], "Creating analog Jobs": [[18, "creating-analog-jobs"]], "Creating and adding quantum gates to a circuit": [[10, null]], "Creating and manipulating Hamiltonians": [[448, null]], "Creating custom Quantum Annealing Jobs": [[297, "creating-custom-quantum-annealing-jobs"]], "Creating custom specifications": [[49, "creating-custom-specifications"]], "Creating observables": [[26, null]], "Creating variational circuits": [[11, null]], "Crossing lattice": [[440, null]], "Declaring custom patterns": [[59, "declaring-custom-patterns"]], "Defining a Hamiltonian": [[448, "defining-a-hamiltonian"]], "Defining patterns": [[312, "defining-patterns"]], "Defining quantum circuits / jobs using a Python function": [[423, "defining-quantum-circuits-jobs-using-a-python-function"]], "Demos": [[422, null], [447, "demos"]], "Dependant Packages": [[423, "dependant-packages"], [423, "id19"], [423, "id24"], [423, "id26"], [423, "id28"], [423, "id30"], [423, "id32"], [423, "id35"], [423, "id38"], [423, "id42"], [423, "id45"], [423, "id49"]], "Deprecated custom gates": [[10, "deprecated-custom-gates"]], "Deprecation warnings": [[423, "deprecation-warnings"]], "Designing and running variational algorithms in the QLM": [[422, "designing-and-running-variational-algorithms-in-the-qlm"]], "Device generators": [[172, "device-generators"]], "Differentiating jobs": [[50, "differentiating-jobs"]], "Entangling gates rewriting patterns": [[61, "entangling-gates-rewriting-patterns"]], "Evaluating expressions": [[16, "evaluating-expressions"]], "Example": [[61, "example"], [334, "example"], [448, "example"]], "Example of a grover algorithm": [[1, "example-of-a-grover-algorithm"]], "Example of an optimization: circuit execution time": [[58, "example-of-an-optimization-circuit-execution-time"]], "Example: Grover oracle for graph coloring": [[16, "example-grover-oracle-for-graph-coloring"]], "Examples": [[52, "examples"], [54, "examples"]], "Executing / Simulating quantum programs": [[27, null]], "Executing quantum programs": [[2, null]], "Exporting the circuit": [[12, "exporting-the-circuit"]], "Extending a QPU (by using Plugins)": [[46, null]], "Extending a QPU to support variational jobs": [[50, "extending-a-qpu-to-support-variational-jobs"]], "Fermionic Hamiltonian using one and two-electrons integrals": [[448, "fermionic-hamiltonian-using-one-and-two-electrons-integrals"]], "Fermionic Hamiltonians": [[448, "fermionic-hamiltonians"]], "Fermionic ansatz circuits": [[188, "module-qat.fermion.circuits"], [449, "fermionic-ansatz-circuits"]], "Fermionic simulations": [[40, null]], "Fermionic to spin representation": [[448, "fermionic-to-spin-representation"]], "Final transpilation and possible target gate sets": [[52, "final-transpilation-and-possible-target-gate-sets"]], "First steps with the QLM": [[422, "first-steps-with-the-qlm"]], "Fixes": [[423, "fixes"], [423, "id6"], [423, "id9"], [423, "id13"], [423, "id17"], [423, "id22"], [423, "id41"], [423, "id48"], [423, "id53"], [423, "id56"]], "Flagging patterns to remove": [[58, "flagging-patterns-to-remove"]], "Gate based computing": [[43, null]], "Gate expansion": [[61, "gate-expansion"]], "Gate set management": [[237, "gate-set-management"]], "Gate structures": [[237, "gate-structures"]], "Gate-based QPUs": [[361, "gate-based-qpus"]], "Gate-based programming": [[9, null]], "General Combinatorial Problems": [[25, null]], "Generating QAOA Ans\u00e4tze or QA Jobs": [[285, "generating-qaoa-ansatze-or-qa-jobs"]], "Generating the circuit": [[12, "generating-the-circuit"]], "Generator Utilities": [[222, "generator-utilities"]], "Generic combinatorial optimization": [[285, "generic-combinatorial-optimization"]], "Getting information from the QPU": [[49, null]], "Getting started": [[0, null]], "Graph Colouring Generator": [[446, null]], "Graph Partitioning": [[433, null]], "Graph Partitioning Generator": [[443, null]], "Hamiltonian as a list of coefficients and Observables": [[19, "hamiltonian-as-a-list-of-coefficients-and-observables"]], "Hamiltonian as one Observable": [[19, "hamiltonian-as-one-observable"]], "Hamiltonians constructors": [[188, "hamiltonians-constructors"]], "Hardware model and gates specifications": [[231, "hardware-model-and-gates-specifications"]], "Hardware specifications": [[110, "hardware-specifications"]], "Header": [[17, "header"]], "High-level Quantum Processing Unit": [[362, "high-level-quantum-processing-unit"]], "High-level optimization": [[58, null]], "Implementation of the example": [[58, "implementation-of-the-example"]], "Initial gate optimization": [[53, "initial-gate-optimization"]], "Initial transpilation": [[52, "initial-transpilation"]], "InitialMapping: a qubit placement optimization plugin": [[54, null]], "Inner workings": [[41, "inner-workings"]], "Install": [[4, "id3"]], "Install myQLM package": [[4, "install-myqlm-package"]], "Installing myQLM": [[4, null]], "Instructions": [[17, "instructions"]], "Interoperability": [[4, "interoperability"]], "Interoperability with annealing framework": [[453, null]], "Interoperability with gate-based framework": [[425, null]], "Introduction": [[57, "introduction"], [58, "introduction"]], "Involutions and trivial simplifications": [[61, "involutions-and-trivial-simplifications"]], "Ising Hamiltonians": [[23, null]], "Ising Observables": [[23, "ising-observables"]], "Iterating of a Circuit": [[116, "iterating-of-a-circuit"]], "Jump operators": [[37, null]], "K-Clique Generator": [[444, null]], "KClique": [[434, null]], "Known problems": [[423, "known-problems"]], "LazySynthesis: quantum circuit compilation": [[53, null]], "Libraries built upon Qaptiva": [[7, "libraries-built-upon-qaptiva"]], "Lifting Python functions into quantum gates": [[14, "lifting-python-functions-into-quantum-gates"]], "Linker and low level circuit manipulation": [[237, "linker-and-low-level-circuit-manipulation"]], "Linking at circuit extraction": [[14, "linking-at-circuit-extraction"]], "List of gates": [[17, "list-of-gates"]], "Logical expressions": [[16, "logical-expressions"]], "Low-level optimization": [[57, null]], "Main Fixes": [[423, "main-fixes"], [423, "id44"]], "Main Package": [[423, "main-package"], [423, "id1"], [423, "id3"], [423, "id7"], [423, "id10"], [423, "id14"], [423, "id18"], [423, "id23"], [423, "id25"], [423, "id27"], [423, "id29"], [423, "id31"], [423, "id34"], [423, "id37"]], "Make you own junction": [[48, null]], "Make your own QPU": [[42, null]], "Make your own plugin": [[47, null]], "Managing registers": [[237, "managing-registers"]], "Manipulating patterns": [[312, "manipulating-patterns"]], "Manipulating schedules": [[20, null]], "Mappings": [[54, "mappings"], [404, "mappings"]], "Mathematical utilities": [[372, "mathematical-utilities"]], "Matrix definition": [[10, "matrix-definition"]], "Max Cut": [[435, null]], "Max Cut Generator": [[442, null]], "Maximum Weighted Independent Set (MWIS)": [[440, "maximum-weighted-independent-set-mwis"]], "Method compile": [[47, "method-compile"]], "Method get_specs": [[42, "method-get-specs"]], "Method post_process": [[47, "method-post-process"]], "Method submit_job": [[42, "method-submit-job"]], "Metrics": [[372, "module-qat.quops.metrics"]], "Migrating code based on deprecated library qat.dqs": [[451, null]], "Misc. utilities": [[110, "misc-utilities"]], "MolecularHamiltonian": [[449, "molecularhamiltonian"]], "MoleculeInfo": [[449, "moleculeinfo"]], "Most useful Circuit methods": [[116, "most-useful-circuit-methods"]], "NP-hard problems": [[432, null]], "NP-hard problems generators": [[441, "np-hard-problems-generators"]], "Name of a gate:": [[60, "name-of-a-gate"]], "Naming quantum routines": [[14, null]], "Native gates, controls and daggers": [[10, "native-gates-controls-and-daggers"]], "New compilation plugins": [[423, "new-compilation-plugins"]], "New features": [[423, "new-features"], [423, "id51"], [423, "id54"], [423, "id57"]], "Nnizer: Swap Insertion Solver": [[55, null]], "Noiseless simulations": [[35, null]], "Noisy simulations": [[36, null]], "Number Partitioning": [[436, null]], "Objects for parsing a job result": [[110, "objects-for-parsing-a-job-result"]], "Objects for writing a job": [[110, "objects-for-writing-a-job"]], "Observable Job": [[30, null]], "Observable-related objects": [[110, "observable-related-objects"]], "Observables": [[26, "observables"]], "Observables operations": [[26, "observables-operations"]], "Open source part": [[5, "open-source-part"]], "OpenQASM Compiler": [[430, null]], "Operator basis": [[372, "operator-basis"]], "Operator extraction": [[404, "operator-extraction"]], "Oracles and quantum types": [[16, null]], "Other Packages": [[423, "other-packages"], [423, "id4"], [423, "id20"], [423, "id33"], [423, "id36"], [423, "id39"], [423, "id43"], [423, "id46"], [423, "id50"]], "Other Updated Packages": [[423, "other-updated-packages"], [423, "id12"], [423, "id16"]], "Other compilers": [[52, "other-compilers"]], "Other problems": [[432, "other-problems"]], "Overview: circuit optimization": [[422, "overview-circuit-optimization"]], "Parameters in pattern:": [[60, "parameters-in-pattern"]], "Pattern collections (to be used with PatternManager)": [[61, null]], "Patterns specific to the beginning/end of a circuit": [[57, "patterns-specific-to-the-beginning-end-of-a-circuit"]], "Plugin for fermionic systems": [[328, "plugin-for-fermionic-systems"]], "Plugin utilities": [[328, "plugin-utilities"]], "Plugins": [[450, null]], "Predefined devices": [[172, "predefined-devices"]], "Predefined hardware models": [[231, "predefined-hardware-models"]], "Predefined patterns": [[59, "predefined-patterns"]], "Predefined quantum channels": [[372, "predefined-quantum-channels"]], "Prerequisites": [[4, "prerequisites"]], "Problem generators": [[441, null]], "Programming tools": [[237, "programming-tools"]], "Programming with qat.lang": [[422, "programming-with-qat-lang"]], "ProjectQ interoperability": [[429, null]], "Proprietary part": [[5, "proprietary-part"]], "PyLinalg: Python Linear-algebra-based simulator": [[43, "pylinalg-python-linear-algebra-based-simulator"], [45, null]], "PyQuil interoperability": [[427, null]], "Pybind interface": [[362, "pybind-interface"]], "Python modules": [[62, "python-modules"]], "QPU Emulators": [[43, "id4"]], "Qiskit 2.0 interoperability with qat-qiskit": [[454, null]], "Qiskit interoperability": [[426, null]], "Quadratic Unconstrained Binary Optimization (QUBO)": [[24, null], [440, "quadratic-unconstrained-binary-optimization-qubo"]], "Quadratic problems: Ising and QUBO": [[285, "quadratic-problems-ising-and-qubo"]], "Quantum Approximate Optimization Algorithm (QAOA)": [[438, null]], "Quantum Channels": [[372, "quantum-channels"]], "Quantum Chemistry tools for VQE": [[449, "quantum-chemistry-tools-for-vqe"]], "Quantum Processing Unit": [[363, "quantum-processing-unit"]], "Quantum Processing Unit (QPU)": [[33, null]], "Quantum application (including Ans\u00e4tze and state preparation)": [[449, null]], "Quantum boolean and expressions": [[237, "quantum-boolean-and-expressions"]], "Quantum booleans, quantum conditionals, and quantum oracles": [[16, "quantum-booleans-quantum-conditionals-and-quantum-oracles"]], "Quantum conditionals and with statements": [[16, "quantum-conditionals-and-with-statements"]], "Quantum integers": [[16, "quantum-integers"], [237, "quantum-integers"]], "Quantum labraries and basic algorithms": [[237, "quantum-labraries-and-basic-algorithms"]], "Quantum phase estimation": [[188, "module-qat.fermion.phase_estimation"], [449, "quantum-phase-estimation"]], "Quantum programs": [[12, null]], "Quantum routines (and Oracles)": [[13, null]], "Quantum subspace expansion": [[188, "module-qat.fermion.chemistry.qse"], [449, "quantum-subspace-expansion"]], "Quantum types": [[237, "quantum-types"]], "Qubits and cbits": [[116, "qubits-and-cbits"]], "Qubits of a gate:": [[60, "qubits-of-a-gate"]], "Random generation methods": [[404, "random-generation-methods"]], "References": [[51, "references"], [55, "references"], [248, "references"], [250, "references"], [256, "references"], [260, "references"], [296, "references"]], "Release notes": [[423, null]], "Result of a quantum program": [[32, null]], "Rewriting quantum circuits": [[56, null]], "Rotation merging": [[61, "rotation-merging"]], "Running analog quantum simulations on myQLM": [[422, "running-analog-quantum-simulations-on-myqlm"]], "Running digital quantum simulations for spin and fermionic systems": [[422, "running-digital-quantum-simulations-for-spin-and-fermionic-systems"]], "Running variational algorithms": [[50, null]], "SQA computing": [[41, null]], "Sample Job": [[29, null]], "Setting a classical value": [[16, "setting-a-classical-value"]], "Simulated Annealing": [[361, "simulated-annealing"]], "Simulated Quantum Annealing Benchmarking and Performance": [[432, "simulated-quantum-annealing-benchmarking-and-performance"]], "Simulation of quantum circuits on the QLM: introduction": [[422, "simulation-of-quantum-circuits-on-the-qlm-introduction"]], "Single term observables": [[26, "single-term-observables"]], "Solving combinatorial problem on Rydberg atom quantum devices": [[423, "solving-combinatorial-problem-on-rydberg-atom-quantum-devices"]], "Some Hamiltonian constructors": [[448, "some-hamiltonian-constructors"]], "Specifying gate sets:": [[342, "specifying-gate-sets"]], "Spin Hamiltonians": [[448, "spin-hamiltonians"]], "Spin and fermionic Hamiltonian operations": [[448, "spin-and-fermionic-hamiltonian-operations"]], "Spin and fermionic systems": [[447, null]], "State preparatation and QRAM": [[237, "state-preparatation-and-qram"]], "Stochastic noise": [[38, null]], "Subcircuit definition": [[10, "subcircuit-definition"]], "Synthesis methods": [[404, "synthesis-methods"]], "Synthopline": [[422, "synthopline"]], "Table of Contents": [[448, "table-of-contents"], [449, "table-of-contents"]], "Targeting patterns through their index": [[57, "targeting-patterns-through-their-index"]], "Testing for several initializations of the parameters": [[50, "testing-for-several-initializations-of-the-parameters"]], "The base algorithm/plugin": [[53, "the-base-algorithm-plugin"]], "The diffusion": [[1, "the-diffusion"]], "The get_matrix() method": [[448, "the-get-matrix-method"]], "The oracle": [[1, "the-oracle"]], "The spin-fermion transforms": [[188, "module-qat.fermion.transforms"]], "The text format": [[17, "the-text-format"]], "Tools for fermionic computations (myQLM-fermion)": [[423, "tools-for-fermionic-computations-myqlm-fermion"]], "Translating quantum circuits": [[426, "translating-quantum-circuits"], [427, "translating-quantum-circuits"], [428, "translating-quantum-circuits"], [429, "translating-quantum-circuits"], [430, "translating-quantum-circuits"]], "Trivial commutations": [[61, "trivial-commutations"]], "Trotterization tools": [[449, "trotterization-tools"]], "Tutorials": [[422, "tutorials"]], "Unconstrained Graph Problems": [[432, "unconstrained-graph-problems"]], "Unitary Coupled-Cluster (UCC)": [[188, "unitary-coupled-cluster-ucc"]], "Updated Dependant Packages": [[423, "updated-dependant-packages"], [423, "id2"], [423, "id8"], [423, "id11"], [423, "id15"]], "Updated features": [[423, "updated-features"], [423, "id5"], [423, "id21"], [423, "id40"], [423, "id47"], [423, "id52"], [423, "id55"]], "User defined parametrized gates (AbstractGate)": [[10, "user-defined-parametrized-gates-abstractgate"]], "User guide": [[7, null]], "Using abstract variables": [[19, "using-abstract-variables"]], "Using an observable": [[26, "using-an-observable"]], "Utility functions": [[188, "utility-functions"]], "Utility methods": [[404, "utility-methods"]], "Variables and Parameters": [[110, "variables-and-parameters"]], "Variational Quantum Eigensolver (VQE)": [[449, "variational-quantum-eigensolver-vqe"]], "Variational algorithms with Qaptiva": [[3, null]], "Variational jobs": [[11, "variational-jobs"]], "Variational optimization plugins": [[328, "variational-optimization-plugins"]], "Vertex Cover": [[437, null]], "Vertex Cover Generator": [[445, null]], "What\u2019s new in myQLM 1.10.3": [[423, "what-s-new-in-myqlm-1-10-3"]], "What\u2019s new in myQLM 1.10.4": [[423, "what-s-new-in-myqlm-1-10-4"]], "What\u2019s new in myQLM 1.10.5": [[423, "what-s-new-in-myqlm-1-10-5"]], "What\u2019s new in myQLM 1.10.6": [[423, "what-s-new-in-myqlm-1-10-6"]], "What\u2019s new in myQLM 1.11.2": [[423, "what-s-new-in-myqlm-1-11-2"]], "What\u2019s new in myQLM 1.11.3": [[423, "what-s-new-in-myqlm-1-11-3"]], "What\u2019s new in myQLM 1.12.0": [[423, "what-s-new-in-myqlm-1-12-0"]], "What\u2019s new in myQLM 1.4.0": [[423, "what-s-new-in-myqlm-1-4-0"]], "What\u2019s new in myQLM 1.5.1": [[423, "what-s-new-in-myqlm-1-5-1"]], "What\u2019s new in myQLM 1.6.1": [[423, "what-s-new-in-myqlm-1-6-1"]], "What\u2019s new in myQLM 1.7.1": [[423, "what-s-new-in-myqlm-1-7-1"]], "What\u2019s new in myQLM 1.7.2": [[423, "what-s-new-in-myqlm-1-7-2"]], "What\u2019s new in myQLM 1.7.3": [[423, "what-s-new-in-myqlm-1-7-3"]], "What\u2019s new in myQLM 1.9.1": [[423, "what-s-new-in-myqlm-1-9-1"]], "What\u2019s new in myQLM 1.9.2": [[423, "what-s-new-in-myqlm-1-9-2"]], "What\u2019s new in myQLM 1.9.3": [[423, "what-s-new-in-myqlm-1-9-3"]], "What\u2019s new in myQLM 1.9.4": [[423, "what-s-new-in-myqlm-1-9-4"]], "What\u2019s new in myQLM 1.9.5": [[423, "what-s-new-in-myqlm-1-9-5"]], "What\u2019s new in myQLM 1.9.6": [[423, "what-s-new-in-myqlm-1-9-6"]], "What\u2019s new in myQLM 1.9.9": [[423, "what-s-new-in-myqlm-1-9-9"]], "Writing patterns": [[60, null]], "Writing quantum programs": [[1, null], [8, null]], "interoperability": [[422, "interoperability"]], "myQLM Installation on MacOS": [[6, null]], "myQLM Power Access": [[423, "myqlm-power-access"]], "myQLM license": [[5, null]], "myQLM \u2013 Quantum Python Package": [[452, null]], "qat": [[63, null]], "qat.comm": [[93, null]], "qat.comm.datamodel": [[94, null]], "qat.comm.datamodel.ttypes.GateDefinition": [[95, null]], "qat.comm.datamodel.ttypes.Op": [[96, null]], "qat.comm.exceptions": [[97, null]], "qat.comm.exceptions.ttypes.ErrorType": [[98, null]], "qat.comm.exceptions.ttypes.GeneratorException": [[99, null]], "qat.comm.exceptions.ttypes.PluginException": [[100, null]], "qat.comm.exceptions.ttypes.QPUException": [[101, null]], "qat.comm.resource": [[102, null]], "qat.comm.resource.ttypes.AllocationModel": [[103, null]], "qat.comm.resource.ttypes.Device": [[104, null]], "qat.comm.resource.ttypes.NodeType": [[105, null]], "qat.comm.resource.ttypes.ResourceModel": [[106, null]], "qat.comm.shared": [[107, null]], "qat.comm.shared.ttypes.IntermediateMeasurement": [[108, null]], "qat.comm.shared.ttypes.ProcessingType": [[109, null]], "qat.core": [[110, null]], "qat.core.Batch": [[114, null]], "qat.core.BatchResult": [[115, null]], "qat.core.Circuit": [[116, null]], "qat.core.HardwareSpecs": [[119, null]], "qat.core.Job": [[120, null]], "qat.core.Observable": [[160, null]], "qat.core.Parameter": [[161, null]], "qat.core.Result": [[163, null]], "qat.core.Sample": [[164, null]], "qat.core.Schedule": [[165, null]], "qat.core.Term": [[167, null]], "qat.core.Topology": [[168, null]], "qat.core.TopologyType": [[169, null]], "qat.core.Variable": [[170, null]], "qat.core.application": [[122, null]], "qat.core.application.Application": [[123, null]], "qat.core.application.RemoteApplication": [[124, null]], "qat.core.assertion.assert_plugin": [[112, null]], "qat.core.assertion.assert_qpu": [[113, null]], "qat.core.circuit_builder": [[125, null]], "qat.core.circuit_builder.builder.VariableNameNotAvailable": [[129, null]], "qat.core.circuit_builder.matrix_util.default_gate_set": [[126, null]], "qat.core.circuit_builder.matrix_util.get_param_generator": [[127, null]], "qat.core.circuit_builder.matrix_util.get_predef_generator": [[128, null]], "qat.core.console.display": [[117, null]], "qat.core.exceptions_utils": [[130, null]], "qat.core.exceptions_utils.exception_only": [[131, null]], "qat.core.exceptions_utils.generator_exception_only": [[132, null]], "qat.core.exceptions_utils.plugin_exception_only": [[133, null]], "qat.core.exceptions_utils.qpu_exception_only": [[134, null]], "qat.core.formula_eval.evaluate": [[118, null]], "qat.core.gate_set": [[135, null]], "qat.core.gate_set.GateSet": [[136, null]], "qat.core.gate_set.GateSignature": [[137, null]], "qat.core.gate_set.GateSyntaxRedefinition": [[138, null]], "qat.core.printer.plot_in_notebook": [[162, null]], "qat.core.qpu": [[139, null]], "qat.core.qpu.CommonQPU": [[140, null]], "qat.core.simutil.wavefunction": [[171, null]], "qat.core.spins": [[141, null]], "qat.core.spins.integer_to_spins": [[142, null]], "qat.core.spins.spins_to_integer": [[143, null]], "qat.core.util.load_state_vector_from_bin": [[121, null]], "qat.core.variables": [[144, null]], "qat.core.variables.ArithExpression": [[147, null]], "qat.core.variables.Symbol": [[158, null]], "qat.core.variables.abso": [[145, null]], "qat.core.variables.angle": [[146, null]], "qat.core.variables.atan2": [[148, null]], "qat.core.variables.cos": [[149, null]], "qat.core.variables.exp": [[150, null]], "qat.core.variables.get_item": [[151, null]], "qat.core.variables.heaviside": [[152, null]], "qat.core.variables.imag": [[153, null]], "qat.core.variables.ln": [[154, null]], "qat.core.variables.real": [[155, null]], "qat.core.variables.sin": [[156, null]], "qat.core.variables.sqrt": [[157, null]], "qat.core.variables.vmax": [[159, null]], "qat.core.wrappers.result.State": [[166, null]], "qat.core.wrappers.result.aggregate_data": [[111, null]], "qat.devices": [[172, null]], "qat.devices.AllToAll": [[173, null]], "qat.devices.GOOGLE_SYCAMORE": [[174, null]], "qat.devices.GridDevice": [[175, null]], "qat.devices.IBM_BURLINGTON": [[176, null]], "qat.devices.IBM_JOHANNESBURG": [[177, null]], "qat.devices.IBM_MELBOURNE": [[178, null]], "qat.devices.IBM_RUESCHLIKON": [[179, null]], "qat.devices.IBM_SINGAPORE": [[180, null]], "qat.devices.IBM_TOKYO": [[181, null]], "qat.devices.IBM_YORKTOWN": [[182, null]], "qat.devices.LineDevice": [[183, null]], "qat.devices.RIGETTI_AGAVE": [[184, null]], "qat.devices.RIGETTI_ASPEN": [[185, null]], "qat.devices.SquareGridDevice": [[186, null]], "qat.devices.ZUCHONGZHI": [[187, null]], "qat.fermion": [[188, null]], "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation": [[211, null]], "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion": [[189, null]], "qat.fermion.chemistry.ucc.compute_active_space_integrals": [[190, null]], "qat.fermion.chemistry.ucc.construct_ucc_ansatz": [[191, null]], "qat.fermion.chemistry.ucc.convert_to_h_integrals": [[192, null]], "qat.fermion.chemistry.ucc.get_cluster_ops": [[195, null]], "qat.fermion.chemistry.ucc.get_hf_ket": [[196, null]], "qat.fermion.chemistry.ucc.guess_init_params": [[197, null]], "qat.fermion.chemistry.ucc.select_active_orbitals": [[212, null]], "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis": [[214, null]], "qat.fermion.chemistry.wrapper.MolecularHamiltonian": [[208, null]], "qat.fermion.chemistry.wrapper.MoleculeInfo": [[209, null]], "qat.fermion.circuits.make_compressed_ldca_circ": [[199, null]], "qat.fermion.circuits.make_general_hwe_circ": [[201, null]], "qat.fermion.circuits.make_ldca_circ": [[203, null]], "qat.fermion.circuits.make_mr_circ": [[204, null]], "qat.fermion.circuits.make_mrep_circ": [[205, null]], "qat.fermion.circuits.make_shallow_circ": [[206, null]], "qat.fermion.hamiltonians.ElectronicStructureHamiltonian": [[193, null]], "qat.fermion.hamiltonians.FermionHamiltonian": [[194, null]], "qat.fermion.hamiltonians.SpinHamiltonian": [[213, null]], "qat.fermion.hamiltonians.make_anderson_model": [[198, null]], "qat.fermion.hamiltonians.make_embedded_model": [[200, null]], "qat.fermion.hamiltonians.make_hubbard_model": [[202, null]], "qat.fermion.phase_estimation.perform_phase_estimation": [[210, null]], "qat.fermion.transforms.transform_to_bk_basis": [[215, null]], "qat.fermion.transforms.transform_to_jw_basis": [[216, null]], "qat.fermion.transforms.transform_to_parity_basis": [[217, null]], "qat.fermion.trotterisation.make_trotterisation_routine": [[207, null]], "qat.fusion": [[218, null]], "qat.fusion.strategies.AdjacentStrategy": [[219, null]], "qat.fusion.strategies.EagerStrategy": [[220, null]], "qat.fusion.strategies.NaiveStrategy": [[221, null]], "qat.generators": [[222, null]], "qat.generators.AbstractGenerator": [[223, null]], "qat.generators.CombinatorialOptimizerGenerator": [[224, null]], "qat.generators.GraphColouringGenerator": [[225, null]], "qat.generators.GraphPartitioningGenerator": [[226, null]], "qat.generators.KCliqueGenerator": [[227, null]], "qat.generators.MaxCutGenerator": [[228, null]], "qat.generators.RemoteBatchGenerator": [[229, null]], "qat.generators.VertexCoverGenerator": [[230, null]], "qat.hardware": [[231, null]], "qat.hardware.DefaultGatesSpecification": [[232, null]], "qat.hardware.DefaultHardwareModel": [[233, null]], "qat.hardware.GatesSpecification": [[234, null]], "qat.hardware.HardwareModel": [[235, null]], "qat.hardware.make_depolarizing_hardware_model": [[236, null]], "qat.interop": [[64, null]], "qat.interop.cirq": [[65, null]], "qat.interop.cirq.cirq_to_qlm": [[66, null]], "qat.interop.cirq.qlm_to_cirq": [[67, null]], "qat.interop.openqasm": [[68, null]], "qat.interop.openqasm.OqasmParser": [[69, null]], "qat.interop.projectq": [[70, null]], "qat.interop.projectq.AqasmEngine": [[71, null]], "qat.interop.projectq.AqasmPrinter": [[72, null]], "qat.interop.pyquil": [[73, null]], "qat.interop.pyquil.PyquilQPU": [[75, null]], "qat.interop.pyquil.pyquil_to_qlm": [[74, null]], "qat.interop.pyquil.qlm_to_pyquil": [[76, null]], "qat.interop.qiskit": [[77, null]], "qat.interop.qiskit.AsyncBackendToQPU": [[78, null]], "qat.interop.qiskit.BackendToQPU": [[79, null]], "qat.interop.qiskit.QPUToBackend": [[84, null]], "qat.interop.qiskit.QiskitJob": [[81, null]], "qat.interop.qiskit.qiskit_to_qlm": [[80, null]], "qat.interop.qiskit.qlm_to_qiskit": [[83, null]], "qat.interop.qiskit.runtime.QiskitRuntimeQPU": [[82, null]], "qat.lang": [[237, null]], "qat.lang.AQASM.arithmetic": [[250, null]], "qat.lang.AQASM.arithmetic.add_const_mod": [[251, null]], "qat.lang.AQASM.arithmetic.add_mod": [[252, null]], "qat.lang.AQASM.arithmetic.modular_exp": [[253, null]], "qat.lang.AQASM.arithmetic.mult_const": [[254, null]], "qat.lang.AQASM.arithmetic.mult_const_mod": [[255, null]], "qat.lang.AQASM.bits.BoolFormula": [[240, null]], "qat.lang.AQASM.bits.CRegister": [[243, null]], "qat.lang.AQASM.bits.Cbit": [[242, null]], "qat.lang.AQASM.bits.QRegister": [[277, null]], "qat.lang.AQASM.bits.Qbit": [[270, null]], "qat.lang.AQASM.classarith": [[256, null]], "qat.lang.AQASM.classarith.add": [[257, null]], "qat.lang.AQASM.classarith.add_const": [[258, null]], "qat.lang.AQASM.classarith.cuccaro_add": [[259, null]], "qat.lang.AQASM.gates.Gate": [[244, null]], "qat.lang.AQASM.gates.ParamGate": [[266, null]], "qat.lang.AQASM.misc.generate_gate_set": [[245, null]], "qat.lang.AQASM.qbool.QBool": [[271, null]], "qat.lang.AQASM.qbool.QBoolArray": [[272, null]], "qat.lang.AQASM.qbool.QClause": [[273, null]], "qat.lang.AQASM.qftarith": [[260, null]], "qat.lang.AQASM.qftarith.QFT": [[265, null]], "qat.lang.AQASM.qftarith.add": [[261, null]], "qat.lang.AQASM.qftarith.add_const": [[262, null]], "qat.lang.AQASM.qftarith.mult": [[263, null]], "qat.lang.AQASM.qftarith.mult_const": [[264, null]], "qat.lang.AQASM.qint.QArithExp": [[269, null]], "qat.lang.AQASM.qint.QCompExp": [[274, null]], "qat.lang.AQASM.qint.QInt": [[276, null]], "qat.lang.AbstractGate": [[238, null]], "qat.lang.Program": [[268, null]], "qat.lang.QRoutine": [[279, null]], "qat.lang.algorithms.amplification.grover_diffusion": [[246, null]], "qat.lang.algorithms.amplification.householder": [[247, null]], "qat.lang.algorithms.amplification.uniform_distribution": [[281, null]], "qat.lang.algorithms.amplification_step": [[239, null]], "qat.lang.algorithms.phase_estimation": [[267, null]], "qat.lang.algorithms.quantum_counting": [[280, null]], "qat.lang.build_gate": [[241, null]], "qat.lang.linking.Linker": [[249, null]], "qat.lang.models.KPTree": [[248, null]], "qat.lang.qfunc": [[275, null]], "qat.lang.qrout": [[278, null]], "qat.nnize": [[282, null]], "qat.nnize.metric.DurationMetric": [[283, null]], "qat.nnize.metric.QuantumCostMetric": [[284, null]], "qat.opt": [[285, null]], "qat.opt.BILP": [[287, null]], "qat.opt.CombinatorialProblem": [[290, null]], "qat.opt.GraphColouring": [[291, null]], "qat.opt.GraphPartitioning": [[292, null]], "qat.opt.Ising": [[293, null]], "qat.opt.KClique": [[294, null]], "qat.opt.MWIS": [[306, null]], "qat.opt.MaxCut": [[295, null]], "qat.opt.MixingFactory": [[296, null]], "qat.opt.NumberPartitioning": [[307, null]], "qat.opt.QUBO": [[308, null]], "qat.opt.VertexCover": [[311, null]], "qat.opt.boolexpr.Clause": [[289, null]], "qat.opt.boolexpr.Var": [[310, null]], "qat.opt.circuit_generator.CircuitGenerator": [[288, null]], "qat.opt.mixing_factory": [[297, null]], "qat.opt.mixing_factory.IndependentAQO": [[298, null]], "qat.opt.mixing_factory.InitialStateBuilder": [[299, null]], "qat.opt.mixing_factory.SimpleInitialState": [[300, null]], "qat.opt.results": [[301, null]], "qat.opt.results.CombinatorialResult": [[302, null]], "qat.opt.results.GraphPartitioningResult": [[303, null]], "qat.opt.results.KCliqueResult": [[304, null]], "qat.opt.results.VertexCoverResult": [[305, null]], "qat.opt.schedule_generator.ScheduleGenerator": [[309, null]], "qat.pbo": [[312, null]], "qat.pbo.AbstractRegister": [[313, null]], "qat.pbo.GateName": [[314, null]], "qat.pbo.GraphCircuit": [[315, null]], "qat.pbo.PatternGroup": [[326, null]], "qat.pbo.VAR": [[327, null]], "qat.pbo.collections": [[317, null]], "qat.pbo.collections.collection_from_target": [[318, null]], "qat.pbo.decompositions": [[319, null]], "qat.pbo.decompositions.decompositions.get_euler_angles": [[320, null]], "qat.pbo.decompositions.ions_decomposition": [[321, null]], "qat.pbo.decompositions.u3_decomposition": [[322, null]], "qat.pbo.decompositions.xzx_decomposition": [[323, null]], "qat.pbo.decompositions.zxz_decomposition": [[324, null]], "qat.pbo.decompositions.zyz_decomposition": [[325, null]], "qat.pbo.kak.list_decompositions": [[316, null]], "qat.plugins": [[328, null]], "qat.plugins.AbstractPlugin": [[329, null]], "qat.plugins.AdaptVQEPlugin": [[330, null]], "qat.plugins.CircuitInliner": [[331, null]], "qat.plugins.CostFunctionPlugin": [[332, null]], "qat.plugins.Display": [[333, null]], "qat.plugins.FusionPlugin": [[334, null]], "qat.plugins.GateRewriter": [[335, null]], "qat.plugins.GradientDescentOptimizer": [[336, null]], "qat.plugins.InitialMapping": [[337, null]], "qat.plugins.Junction": [[338, null]], "qat.plugins.KAKCompression": [[339, null]], "qat.plugins.LazySynthesis": [[340, null]], "qat.plugins.MultipleLaunchesAnalyzer": [[341, null]], "qat.plugins.NISQCompiler": [[342, null]], "qat.plugins.Nnizer": [[343, null]], "qat.plugins.ObservableSplitter": [[344, null]], "qat.plugins.Optimizer": [[345, null]], "qat.plugins.PSOMinimizePlugin": [[347, null]], "qat.plugins.PatternManager": [[346, null]], "qat.plugins.QuameleonPlugin": [[348, null]], "qat.plugins.Remap": [[349, null]], "qat.plugins.RemotePlugin": [[350, null]], "qat.plugins.SPSAMinimizePlugin": [[353, null]], "qat.plugins.ScipyMinimizePlugin": [[351, null]], "qat.plugins.SeqOptim": [[352, null]], "qat.plugins.TransformObservable": [[354, null]], "qat.plugins.ZeroNoiseExtrapolator": [[355, null]], "qat.pylinalg": [[85, null]], "qat.pylinalg.simulator": [[86, null]], "qat.pylinalg.simulator.mat2nparray": [[87, null]], "qat.pylinalg.simulator.measure": [[88, null]], "qat.pylinalg.simulator.project": [[89, null]], "qat.pylinalg.simulator.raise_break": [[90, null]], "qat.pylinalg.simulator.reset": [[91, null]], "qat.pylinalg.simulator.simulate": [[92, null]], "qat.qiskit": [[356, null]], "qat.qiskit.Estimator": [[357, null]], "qat.qiskit.QaptivaService": [[358, null]], "qat.qiskit.Sampler": [[360, null]], "qat.qiskit.converters.qiskit_to_qlm": [[359, null]], "qat.qpus": [[361, null]], "qat.qpus.CLinalg": [[362, null]], "qat.qpus.ClassicalQPU": [[365, null]], "qat.qpus.PyLinalg": [[363, null]], "qat.qpus.QPUHandler": [[369, null]], "qat.qpus.QutipQPU": [[370, null]], "qat.qpus.RemoteQPU": [[371, null]], "qat.qpus.SimulatedAnnealing": [[364, null]], "qat.qpus.get_current_qpu": [[366, null]], "qat.qpus.get_default_qpu": [[367, null]], "qat.qpus.get_noisy_qpu": [[368, null]], "qat.quops": [[372, null]], "qat.quops.ChannelRepresentations": [[374, null]], "qat.quops.ParametricAmplitudeDamping": [[394, null]], "qat.quops.ParametricGateNoise": [[395, null]], "qat.quops.ParametricPureDephasing": [[396, null]], "qat.quops.ParametricQuantumChannel": [[397, null]], "qat.quops.QuantumChannel": [[399, null]], "qat.quops.QuantumChannelChi": [[400, null]], "qat.quops.QuantumChannelChoi": [[401, null]], "qat.quops.QuantumChannelKraus": [[402, null]], "qat.quops.QuantumChannelPTM": [[403, null]], "qat.quops.is_completely_positive": [[383, null]], "qat.quops.is_trace_preserving": [[384, null]], "qat.quops.is_trace_reducing": [[385, null]], "qat.quops.is_unital": [[386, null]], "qat.quops.make_avg_fid_equiv_depol_channel": [[387, null]], "qat.quops.make_depolarizing_channel": [[388, null]], "qat.quops.make_generalized_amplitude_damping": [[389, null]], "qat.quops.math_util.are_equal_up_to_phase": [[373, null]], "qat.quops.math_util.convert_density_mat_to_pauli_vec": [[375, null]], "qat.quops.math_util.convert_pauli_vec_to_density_mat": [[376, null]], "qat.quops.math_util.make_pauli_matrix_basis": [[390, null]], "qat.quops.math_util.make_standard_matrix_basis": [[391, null]], "qat.quops.math_util.make_standard_vector_basis": [[392, null]], "qat.quops.math_util.multikron": [[393, null]], "qat.quops.math_util.partial_trace": [[398, null]], "qat.quops.metrics.get_average_process_fidelity": [[377, null]], "qat.quops.metrics.get_diamond_norm": [[378, null]], "qat.quops.metrics.get_entanglement_process_fidelity": [[379, null]], "qat.quops.metrics.get_process_distance": [[380, null]], "qat.quops.metrics.get_state_fidelity": [[381, null]], "qat.quops.metrics.get_trace_distance": [[382, null]], "qat.synthopline": [[404, null]], "qat.synthopline.clifford_normalizer.CliffordNormalizer": [[405, null]], "qat.synthopline.co_diagonalization.codiagonalize_with_architecture": [[406, null]], "qat.synthopline.co_diagonalization.synthesize_stabilizer_state": [[420, null]], "qat.synthopline.generate_trotter_ansatz": [[413, null]], "qat.synthopline.initial_mapping.frequency_mapping": [[411, null]], "qat.synthopline.initial_mapping.greedy_mapping": [[414, null]], "qat.synthopline.interface.OperatorTableau": [[416, null]], "qat.synthopline.interface.WeylOperator": [[421, null]], "qat.synthopline.linear_operator_synthesis": [[415, null]], "qat.synthopline.linear_synthesis.extract_linear_operator": [[408, null]], "qat.synthopline.linear_synthesis.random_linear_operator": [[418, null]], "qat.synthopline.pauli_synth.generate_random_observable": [[412, null]], "qat.synthopline.phase_polynomial_synthesis": [[417, null]], "qat.synthopline.phase_polynomials.extract_phase_polynomial": [[410, null]], "qat.synthopline.phase_polynomials.random_phase_polynomial": [[419, null]], "qat.synthopline.util.conjugate_observable_tableau": [[407, null]], "qat.synthopline.util.extract_pauli_rotations": [[409, null]], "qat.vsolve.ansatz.AnsatzFactory": [[286, null]]}, "docnames": ["01_getting_started", "01_getting_started/02_write", "01_getting_started/03_execute", "01_getting_started/04_variational", "01_getting_started/:myqlm:01_install", "01_getting_started/:myqlm:license", "01_getting_started/:myqlm:macos", "02_user_guide", "02_user_guide/01_write", "02_user_guide/01_write/01_digital_circuit", "02_user_guide/01_write/01_digital_circuit/01_quantum_gates", "02_user_guide/01_write/01_digital_circuit/02_variational", "02_user_guide/01_write/01_digital_circuit/03_program", "02_user_guide/01_write/01_digital_circuit/04_routines", "02_user_guide/01_write/01_digital_circuit/04_routines/01_naming_routines", "02_user_guide/01_write/01_digital_circuit/04_routines/02_ancillae", "02_user_guide/01_write/01_digital_circuit/04_routines/03_oracles", "02_user_guide/01_write/01_digital_circuit/05_aqasm", "02_user_guide/01_write/02_analog_schedule", "02_user_guide/01_write/02_analog_schedule/01_building_schedules", "02_user_guide/01_write/02_analog_schedule/02_manip_schedules", "02_user_guide/01_write/02_analog_schedule/03_an_jobs", "02_user_guide/01_write/03_annealing_problems", "02_user_guide/01_write/03_annealing_problems/01_ising", "02_user_guide/01_write/03_annealing_problems/02_qubo", "02_user_guide/01_write/03_annealing_problems/03_comb_prob", "02_user_guide/01_write/03_observable", "02_user_guide/02_execute", "02_user_guide/02_execute/01_job", "02_user_guide/02_execute/01_job/01_sample_job", "02_user_guide/02_execute/01_job/02_observable_job", "02_user_guide/02_execute/01_job/03_automated_batch_generation", "02_user_guide/02_execute/02_result", "02_user_guide/02_execute/03_qpu", "02_user_guide/02_execute/03_qpu/02_analog", "02_user_guide/02_execute/03_qpu/02_analog/01_noiseless_an", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an/01_jump_ops", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an/02_stoch_noise", "02_user_guide/02_execute/03_qpu/02_analog/03_bosonic", "02_user_guide/02_execute/03_qpu/02_analog/04_fermionic", "02_user_guide/02_execute/03_qpu/03_annealing", "02_user_guide/02_execute/03_qpu/04_custom_qpu", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based/clinalg", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based/pylinalg", "02_user_guide/02_execute/04_plugin", "02_user_guide/02_execute/04_plugin/01_custom_plugin", "02_user_guide/02_execute/04_plugin/02_custom_junction", "02_user_guide/02_execute/04_plugin/03_hardware_specs", "02_user_guide/02_execute/05_variational", "02_user_guide/03_compile", "02_user_guide/03_compile/01_compilers", "02_user_guide/03_compile/01_compilers/01_lazy", "02_user_guide/03_compile/01_compilers/02_mapping", "02_user_guide/03_compile/01_compilers/03_nnize", "02_user_guide/03_compile/02_rewrite", "02_user_guide/03_compile/02_rewrite/01_low_level", "02_user_guide/03_compile/02_rewrite/02_high_level", "02_user_guide/03_compile/02_rewrite/03_kak", "02_user_guide/03_compile/02_rewrite/04_patterns", "02_user_guide/03_compile/02_rewrite/05_collections", "04_api_reference", "04_api_reference/module_qat", "04_api_reference/module_qat/:myqlm:module_interop", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq/cirq_to_qlm", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq/qlm_to_cirq", "04_api_reference/module_qat/:myqlm:module_interop/module_openqasm", "04_api_reference/module_qat/:myqlm:module_interop/module_openqasm/oqasmparser", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq/aqasmengine", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq/aqasmprinter", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/pyquil_to_qlm", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/pyquilqpu", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/qlm_to_pyquil", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/asyncbackendtoqpu", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/backendtoqpu", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskit_to_qlm", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskitjob", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskitruntimeqpu", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qlm_to_qiskit", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qputobackend", "04_api_reference/module_qat/:myqlm:module_pylinalg", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/mat2nparray", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/measure", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/project", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/raise_break", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/reset", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/simulate", "04_api_reference/module_qat/module_comm", "04_api_reference/module_qat/module_comm/module_datamodel", "04_api_reference/module_qat/module_comm/module_datamodel/gatedefinition", "04_api_reference/module_qat/module_comm/module_datamodel/op", "04_api_reference/module_qat/module_comm/module_exceptions", "04_api_reference/module_qat/module_comm/module_exceptions/errortype", "04_api_reference/module_qat/module_comm/module_exceptions/generatorexception", "04_api_reference/module_qat/module_comm/module_exceptions/pluginexception", "04_api_reference/module_qat/module_comm/module_exceptions/qpuexception", "04_api_reference/module_qat/module_comm/module_resource", "04_api_reference/module_qat/module_comm/module_resource/allocationmodel", "04_api_reference/module_qat/module_comm/module_resource/device", "04_api_reference/module_qat/module_comm/module_resource/nodetype", "04_api_reference/module_qat/module_comm/module_resource/resourcemodel", "04_api_reference/module_qat/module_comm/module_shared", "04_api_reference/module_qat/module_comm/module_shared/intermediatemeasurement", "04_api_reference/module_qat/module_comm/module_shared/processingtype", "04_api_reference/module_qat/module_core", "04_api_reference/module_qat/module_core/aggregate_data", "04_api_reference/module_qat/module_core/assert_plugin", "04_api_reference/module_qat/module_core/assert_qpu", "04_api_reference/module_qat/module_core/batch", "04_api_reference/module_qat/module_core/batchresult", "04_api_reference/module_qat/module_core/circuit", "04_api_reference/module_qat/module_core/display", "04_api_reference/module_qat/module_core/evaluate", "04_api_reference/module_qat/module_core/hardwarespecs", "04_api_reference/module_qat/module_core/job", "04_api_reference/module_qat/module_core/load_state_vector_from_bin", "04_api_reference/module_qat/module_core/module_application", "04_api_reference/module_qat/module_core/module_application/application", "04_api_reference/module_qat/module_core/module_application/remoteapplication", "04_api_reference/module_qat/module_core/module_circuit_builder", "04_api_reference/module_qat/module_core/module_circuit_builder/default_gate_set", "04_api_reference/module_qat/module_core/module_circuit_builder/get_param_generator", "04_api_reference/module_qat/module_core/module_circuit_builder/get_predef_generator", "04_api_reference/module_qat/module_core/module_circuit_builder/variablenamenotavailable", "04_api_reference/module_qat/module_core/module_exceptions_utils", "04_api_reference/module_qat/module_core/module_exceptions_utils/exception_only", "04_api_reference/module_qat/module_core/module_exceptions_utils/generator_exception_only", "04_api_reference/module_qat/module_core/module_exceptions_utils/plugin_exception_only", "04_api_reference/module_qat/module_core/module_exceptions_utils/qpu_exception_only", "04_api_reference/module_qat/module_core/module_gate_set", "04_api_reference/module_qat/module_core/module_gate_set/gateset", "04_api_reference/module_qat/module_core/module_gate_set/gatesignature", "04_api_reference/module_qat/module_core/module_gate_set/gatesyntaxredefinition", "04_api_reference/module_qat/module_core/module_qpu", "04_api_reference/module_qat/module_core/module_qpu/commonqpu", "04_api_reference/module_qat/module_core/module_spins", "04_api_reference/module_qat/module_core/module_spins/integer_to_spins", "04_api_reference/module_qat/module_core/module_spins/spins_to_integer", "04_api_reference/module_qat/module_core/module_variables", "04_api_reference/module_qat/module_core/module_variables/abso", "04_api_reference/module_qat/module_core/module_variables/angle", "04_api_reference/module_qat/module_core/module_variables/arithexpression", "04_api_reference/module_qat/module_core/module_variables/atan2", "04_api_reference/module_qat/module_core/module_variables/cos", "04_api_reference/module_qat/module_core/module_variables/exp", "04_api_reference/module_qat/module_core/module_variables/get_item", "04_api_reference/module_qat/module_core/module_variables/heaviside", "04_api_reference/module_qat/module_core/module_variables/imag", "04_api_reference/module_qat/module_core/module_variables/ln", "04_api_reference/module_qat/module_core/module_variables/real", "04_api_reference/module_qat/module_core/module_variables/sin", "04_api_reference/module_qat/module_core/module_variables/sqrt", "04_api_reference/module_qat/module_core/module_variables/symbol", "04_api_reference/module_qat/module_core/module_variables/vmax", "04_api_reference/module_qat/module_core/observable", "04_api_reference/module_qat/module_core/parameter", "04_api_reference/module_qat/module_core/plot_in_notebook", "04_api_reference/module_qat/module_core/result", "04_api_reference/module_qat/module_core/sample", "04_api_reference/module_qat/module_core/schedule", "04_api_reference/module_qat/module_core/state", "04_api_reference/module_qat/module_core/term", "04_api_reference/module_qat/module_core/topology", "04_api_reference/module_qat/module_core/topologytype", "04_api_reference/module_qat/module_core/variable", "04_api_reference/module_qat/module_core/wavefunction", "04_api_reference/module_qat/module_devices", "04_api_reference/module_qat/module_devices/alltoall", "04_api_reference/module_qat/module_devices/google_sycamore", "04_api_reference/module_qat/module_devices/griddevice", "04_api_reference/module_qat/module_devices/ibm_burlington", "04_api_reference/module_qat/module_devices/ibm_johannesburg", "04_api_reference/module_qat/module_devices/ibm_melbourne", "04_api_reference/module_qat/module_devices/ibm_rueschlikon", "04_api_reference/module_qat/module_devices/ibm_singapore", "04_api_reference/module_qat/module_devices/ibm_tokyo", "04_api_reference/module_qat/module_devices/ibm_yorktown", "04_api_reference/module_qat/module_devices/linedevice", "04_api_reference/module_qat/module_devices/rigetti_agave", "04_api_reference/module_qat/module_devices/rigetti_aspen", "04_api_reference/module_qat/module_devices/squaregriddevice", "04_api_reference/module_qat/module_devices/zuchongzhi", "04_api_reference/module_qat/module_fermion", "04_api_reference/module_qat/module_fermion/apply_quantum_subspace_expansion", "04_api_reference/module_qat/module_fermion/compute_active_space_integrals", "04_api_reference/module_qat/module_fermion/construct_ucc_ansatz", "04_api_reference/module_qat/module_fermion/convert_to_h_integrals", "04_api_reference/module_qat/module_fermion/electronicstructurehamiltonian", "04_api_reference/module_qat/module_fermion/fermionhamiltonian", "04_api_reference/module_qat/module_fermion/get_cluster_ops", "04_api_reference/module_qat/module_fermion/get_hf_ket", "04_api_reference/module_qat/module_fermion/guess_init_params", "04_api_reference/module_qat/module_fermion/make_anderson_model", "04_api_reference/module_qat/module_fermion/make_compressed_ldca_circ", "04_api_reference/module_qat/module_fermion/make_embedded_model", "04_api_reference/module_qat/module_fermion/make_general_hwe_circ", "04_api_reference/module_qat/module_fermion/make_hubbard_model", "04_api_reference/module_qat/module_fermion/make_ldca_circ", "04_api_reference/module_qat/module_fermion/make_mr_circ", "04_api_reference/module_qat/module_fermion/make_mrep_circ", "04_api_reference/module_qat/module_fermion/make_shallow_circ", "04_api_reference/module_qat/module_fermion/make_trotterisation_routine", "04_api_reference/module_qat/module_fermion/molecularhamiltonian", "04_api_reference/module_qat/module_fermion/moleculeinfo", "04_api_reference/module_qat/module_fermion/perform_phase_estimation", "04_api_reference/module_qat/module_fermion/perform_pyscf_computation", "04_api_reference/module_qat/module_fermion/select_active_orbitals", "04_api_reference/module_qat/module_fermion/spinhamiltonian", "04_api_reference/module_qat/module_fermion/transform_integrals_to_new_basis", "04_api_reference/module_qat/module_fermion/transform_to_bk_basis", "04_api_reference/module_qat/module_fermion/transform_to_jw_basis", "04_api_reference/module_qat/module_fermion/transform_to_parity_basis", "04_api_reference/module_qat/module_fusion", "04_api_reference/module_qat/module_fusion/adjacentstrategy", "04_api_reference/module_qat/module_fusion/eagerstrategy", "04_api_reference/module_qat/module_fusion/naivestrategy", "04_api_reference/module_qat/module_generators", "04_api_reference/module_qat/module_generators/abstractgenerator", "04_api_reference/module_qat/module_generators/combinatorialoptimizergenerator", "04_api_reference/module_qat/module_generators/graphcolouringgenerator", "04_api_reference/module_qat/module_generators/graphpartitioninggenerator", "04_api_reference/module_qat/module_generators/kcliquegenerator", "04_api_reference/module_qat/module_generators/maxcutgenerator", "04_api_reference/module_qat/module_generators/remotebatchgenerator", "04_api_reference/module_qat/module_generators/vertexcovergenerator", "04_api_reference/module_qat/module_hardware", "04_api_reference/module_qat/module_hardware/defaultgatesspecification", "04_api_reference/module_qat/module_hardware/defaulthardwaremodel", "04_api_reference/module_qat/module_hardware/gatesspecification", "04_api_reference/module_qat/module_hardware/hardwaremodel", "04_api_reference/module_qat/module_hardware/make_depolarizing_hardware_model", "04_api_reference/module_qat/module_lang", "04_api_reference/module_qat/module_lang/abstractgate", "04_api_reference/module_qat/module_lang/amplification_step", "04_api_reference/module_qat/module_lang/boolformula", "04_api_reference/module_qat/module_lang/build_gate", "04_api_reference/module_qat/module_lang/cbit", "04_api_reference/module_qat/module_lang/cregister", "04_api_reference/module_qat/module_lang/gate", "04_api_reference/module_qat/module_lang/generate_gate_set", "04_api_reference/module_qat/module_lang/grover_diffusion", "04_api_reference/module_qat/module_lang/householder", "04_api_reference/module_qat/module_lang/kptree", "04_api_reference/module_qat/module_lang/linker", "04_api_reference/module_qat/module_lang/module_arithmetic", "04_api_reference/module_qat/module_lang/module_arithmetic/add_const_mod", "04_api_reference/module_qat/module_lang/module_arithmetic/add_mod", "04_api_reference/module_qat/module_lang/module_arithmetic/modular_exp", "04_api_reference/module_qat/module_lang/module_arithmetic/mult_const", "04_api_reference/module_qat/module_lang/module_arithmetic/mult_const_mod", "04_api_reference/module_qat/module_lang/module_classarith", "04_api_reference/module_qat/module_lang/module_classarith/add", "04_api_reference/module_qat/module_lang/module_classarith/add_const", "04_api_reference/module_qat/module_lang/module_classarith/cuccaro_add", "04_api_reference/module_qat/module_lang/module_qftarith", "04_api_reference/module_qat/module_lang/module_qftarith/add", "04_api_reference/module_qat/module_lang/module_qftarith/add_const", "04_api_reference/module_qat/module_lang/module_qftarith/mult", "04_api_reference/module_qat/module_lang/module_qftarith/mult_const", "04_api_reference/module_qat/module_lang/module_qftarith/qft", "04_api_reference/module_qat/module_lang/paramgate", "04_api_reference/module_qat/module_lang/phase_estimation", "04_api_reference/module_qat/module_lang/program", "04_api_reference/module_qat/module_lang/qarithexp", "04_api_reference/module_qat/module_lang/qbit", "04_api_reference/module_qat/module_lang/qbool", "04_api_reference/module_qat/module_lang/qboolarray", "04_api_reference/module_qat/module_lang/qclause", "04_api_reference/module_qat/module_lang/qcompexp", "04_api_reference/module_qat/module_lang/qfunc", "04_api_reference/module_qat/module_lang/qint", "04_api_reference/module_qat/module_lang/qregister", "04_api_reference/module_qat/module_lang/qrout", "04_api_reference/module_qat/module_lang/qroutine", "04_api_reference/module_qat/module_lang/quantum_counting", "04_api_reference/module_qat/module_lang/uniform_distribution", "04_api_reference/module_qat/module_nnize", "04_api_reference/module_qat/module_nnize/durationmetric", "04_api_reference/module_qat/module_nnize/quantumcostmetric", "04_api_reference/module_qat/module_opt", "04_api_reference/module_qat/module_opt/ansatzfactory", "04_api_reference/module_qat/module_opt/bilp", "04_api_reference/module_qat/module_opt/circuitgenerator", "04_api_reference/module_qat/module_opt/clause", "04_api_reference/module_qat/module_opt/combinatorialproblem", "04_api_reference/module_qat/module_opt/graphcolouring", "04_api_reference/module_qat/module_opt/graphpartitioning", "04_api_reference/module_qat/module_opt/ising", "04_api_reference/module_qat/module_opt/kclique", "04_api_reference/module_qat/module_opt/maxcut", "04_api_reference/module_qat/module_opt/mixingfactory", "04_api_reference/module_qat/module_opt/module_mixing_factory", "04_api_reference/module_qat/module_opt/module_mixing_factory/independentaqo", "04_api_reference/module_qat/module_opt/module_mixing_factory/initialstatebuilder", "04_api_reference/module_qat/module_opt/module_mixing_factory/simpleinitialstate", "04_api_reference/module_qat/module_opt/module_results", "04_api_reference/module_qat/module_opt/module_results/combinatorialresult", "04_api_reference/module_qat/module_opt/module_results/graphpartitioningresult", "04_api_reference/module_qat/module_opt/module_results/kcliqueresult", "04_api_reference/module_qat/module_opt/module_results/vertexcoverresult", "04_api_reference/module_qat/module_opt/mwis", "04_api_reference/module_qat/module_opt/numberpartitioning", "04_api_reference/module_qat/module_opt/qubo", "04_api_reference/module_qat/module_opt/schedulegenerator", "04_api_reference/module_qat/module_opt/var", "04_api_reference/module_qat/module_opt/vertexcover", "04_api_reference/module_qat/module_pbo", "04_api_reference/module_qat/module_pbo/abstractregister", "04_api_reference/module_qat/module_pbo/gatename", "04_api_reference/module_qat/module_pbo/graphcircuit", "04_api_reference/module_qat/module_pbo/list_decompositions", "04_api_reference/module_qat/module_pbo/module_collections", "04_api_reference/module_qat/module_pbo/module_collections/collection_from_target", "04_api_reference/module_qat/module_pbo/module_decomposition", "04_api_reference/module_qat/module_pbo/module_decomposition/get_euler_angles", "04_api_reference/module_qat/module_pbo/module_decomposition/ions_decomposition", "04_api_reference/module_qat/module_pbo/module_decomposition/u3_decomposition", "04_api_reference/module_qat/module_pbo/module_decomposition/xzx_decomposition", "04_api_reference/module_qat/module_pbo/module_decomposition/zxz_decomposition", "04_api_reference/module_qat/module_pbo/module_decomposition/zyz_decomposition", "04_api_reference/module_qat/module_pbo/patterngroup", "04_api_reference/module_qat/module_pbo/var", "04_api_reference/module_qat/module_plugins", "04_api_reference/module_qat/module_plugins/abstractplugin", "04_api_reference/module_qat/module_plugins/adaptvqeplugin", "04_api_reference/module_qat/module_plugins/circuitinliner", "04_api_reference/module_qat/module_plugins/costfunctionplugin", "04_api_reference/module_qat/module_plugins/display", "04_api_reference/module_qat/module_plugins/fusionplugin", "04_api_reference/module_qat/module_plugins/gaterewriter", "04_api_reference/module_qat/module_plugins/gradientdescentoptimizer", "04_api_reference/module_qat/module_plugins/initialmapping", "04_api_reference/module_qat/module_plugins/junction", "04_api_reference/module_qat/module_plugins/kakcompression", "04_api_reference/module_qat/module_plugins/lazysynthesis", "04_api_reference/module_qat/module_plugins/multiplelaunchesanalyzer", "04_api_reference/module_qat/module_plugins/nisqcompiler", "04_api_reference/module_qat/module_plugins/nnizer", "04_api_reference/module_qat/module_plugins/observablesplitter", "04_api_reference/module_qat/module_plugins/optimizer", "04_api_reference/module_qat/module_plugins/patternmanager", "04_api_reference/module_qat/module_plugins/psominimizeplugin", "04_api_reference/module_qat/module_plugins/quameleonplugin", "04_api_reference/module_qat/module_plugins/remap", "04_api_reference/module_qat/module_plugins/remoteplugin", "04_api_reference/module_qat/module_plugins/scipyminimizeplugin", "04_api_reference/module_qat/module_plugins/seqoptim", "04_api_reference/module_qat/module_plugins/spsaminimizeplugin", "04_api_reference/module_qat/module_plugins/transformobservable", "04_api_reference/module_qat/module_plugins/zeronoiseextrapolator", "04_api_reference/module_qat/module_qiskit", "04_api_reference/module_qat/module_qiskit/estimator", "04_api_reference/module_qat/module_qiskit/qaptivaservice", "04_api_reference/module_qat/module_qiskit/qiskit_to_qlm", "04_api_reference/module_qat/module_qiskit/sampler", "04_api_reference/module_qat/module_qpus", "04_api_reference/module_qat/module_qpus/:myqlm:clinalg", "04_api_reference/module_qat/module_qpus/:myqlm:pylinalg", "04_api_reference/module_qat/module_qpus/:myqlm:simulatedannealing", "04_api_reference/module_qat/module_qpus/classicalqpu", "04_api_reference/module_qat/module_qpus/get_current_qpu", "04_api_reference/module_qat/module_qpus/get_default_qpu", "04_api_reference/module_qat/module_qpus/get_noisy_qpu", "04_api_reference/module_qat/module_qpus/qpuhandler", "04_api_reference/module_qat/module_qpus/qutipqpu", "04_api_reference/module_qat/module_qpus/remoteqpu", "04_api_reference/module_qat/module_quops", "04_api_reference/module_qat/module_quops/are_equal_up_to_phase", "04_api_reference/module_qat/module_quops/channelrepresentations", "04_api_reference/module_qat/module_quops/convert_density_mat_to_pauli_vec", "04_api_reference/module_qat/module_quops/convert_pauli_vec_to_density_mat", "04_api_reference/module_qat/module_quops/get_average_process_fidelity", "04_api_reference/module_qat/module_quops/get_diamond_norm", "04_api_reference/module_qat/module_quops/get_entanglement_process_fidelity", "04_api_reference/module_qat/module_quops/get_process_distance", "04_api_reference/module_qat/module_quops/get_state_fidelity", "04_api_reference/module_qat/module_quops/get_trace_distance", "04_api_reference/module_qat/module_quops/is_completely_positive", "04_api_reference/module_qat/module_quops/is_trace_preserving", "04_api_reference/module_qat/module_quops/is_trace_reducing", "04_api_reference/module_qat/module_quops/is_unital", "04_api_reference/module_qat/module_quops/make_avg_fid_equiv_depol_channel", "04_api_reference/module_qat/module_quops/make_depolarizing_channel", "04_api_reference/module_qat/module_quops/make_generalized_amplitude_damping", "04_api_reference/module_qat/module_quops/make_pauli_matrix_basis", "04_api_reference/module_qat/module_quops/make_standard_matrix_basis", "04_api_reference/module_qat/module_quops/make_standard_vector_basis", "04_api_reference/module_qat/module_quops/multikron", "04_api_reference/module_qat/module_quops/parametricamplitudedamping", "04_api_reference/module_qat/module_quops/parametricgatenoise", "04_api_reference/module_qat/module_quops/parametricpuredephasing", "04_api_reference/module_qat/module_quops/parametricquantumchannel", "04_api_reference/module_qat/module_quops/partial_trace", "04_api_reference/module_qat/module_quops/quantumchannel", "04_api_reference/module_qat/module_quops/quantumchannelchi", "04_api_reference/module_qat/module_quops/quantumchannelchoi", "04_api_reference/module_qat/module_quops/quantumchannelkraus", "04_api_reference/module_qat/module_quops/quantumchannelptm", "04_api_reference/module_qat/module_synthopline", "04_api_reference/module_qat/module_synthopline/cliffordnormalizer", "04_api_reference/module_qat/module_synthopline/codiagonalize_with_architecture", "04_api_reference/module_qat/module_synthopline/conjugate_observable_tableau", "04_api_reference/module_qat/module_synthopline/extract_linear_operator", "04_api_reference/module_qat/module_synthopline/extract_pauli_rotations", "04_api_reference/module_qat/module_synthopline/extract_phase_polynomial", "04_api_reference/module_qat/module_synthopline/frequency_mapping", "04_api_reference/module_qat/module_synthopline/generate_random_observable", "04_api_reference/module_qat/module_synthopline/generate_trotter_ansatz", "04_api_reference/module_qat/module_synthopline/greedy_mapping", "04_api_reference/module_qat/module_synthopline/linear_operator_synthesis", "04_api_reference/module_qat/module_synthopline/operatortableau", "04_api_reference/module_qat/module_synthopline/phase_polynomial_synthesis", "04_api_reference/module_qat/module_synthopline/random_linear_operator", "04_api_reference/module_qat/module_synthopline/random_phase_polynomial", "04_api_reference/module_qat/module_synthopline/synthesize_stabilizer_state", "04_api_reference/module_qat/module_synthopline/weyloperator", "05_demos", "07_release_notes", ":myqlm:06_support", ":myqlm:interoperability", ":myqlm:interoperability/01_qiskit", ":myqlm:interoperability/02_pyquil", ":myqlm:interoperability/03_cirq", ":myqlm:interoperability/04_projectq", ":myqlm:interoperability/05_openqasm", "combinatorial_optim_applic", "combinatorial_optim_applic/01_np_probs_for_annealing", "combinatorial_optim_applic/01_np_probs_for_annealing/graph_partitioning_ann_prob", "combinatorial_optim_applic/01_np_probs_for_annealing/kclique_ann_prob", "combinatorial_optim_applic/01_np_probs_for_annealing/max_cut_ann_prob", "combinatorial_optim_applic/01_np_probs_for_annealing/number_partitioning_ann_prob", "combinatorial_optim_applic/01_np_probs_for_annealing/vertex_cover_ann_prob", "combinatorial_optim_applic/02_qaoa", "combinatorial_optim_applic/03_aqo", "combinatorial_optim_applic/04_crossing_lattice", "combinatorial_optim_applic/05_np_problem_generators", "combinatorial_optim_applic/05_np_problem_generators/01_max_cut_generator", "combinatorial_optim_applic/05_np_problem_generators/02_graph_partitioning_generator", "combinatorial_optim_applic/05_np_problem_generators/03_kclique_generator", "combinatorial_optim_applic/05_np_problem_generators/04_vertex_cover_generator", "combinatorial_optim_applic/05_np_problem_generators/05_graph_colouring_generator", "fermion", "fermion/01_hamiltonians", "fermion/02_algorithms", "fermion/03_plugins", "fermion/04_migrating", "index", "interoperability_annealing", "qiskit_interoperability"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["01_getting_started.rst", "01_getting_started/02_write.rst", "01_getting_started/03_execute.rst", "01_getting_started/04_variational.rst", "01_getting_started/:myqlm:01_install.rst", "01_getting_started/:myqlm:license.rst", "01_getting_started/:myqlm:macos.rst", "02_user_guide.rst", "02_user_guide/01_write.rst", "02_user_guide/01_write/01_digital_circuit.rst", "02_user_guide/01_write/01_digital_circuit/01_quantum_gates.rst", "02_user_guide/01_write/01_digital_circuit/02_variational.rst", "02_user_guide/01_write/01_digital_circuit/03_program.rst", "02_user_guide/01_write/01_digital_circuit/04_routines.rst", "02_user_guide/01_write/01_digital_circuit/04_routines/01_naming_routines.rst", "02_user_guide/01_write/01_digital_circuit/04_routines/02_ancillae.rst", "02_user_guide/01_write/01_digital_circuit/04_routines/03_oracles.rst", "02_user_guide/01_write/01_digital_circuit/05_aqasm.rst", "02_user_guide/01_write/02_analog_schedule.rst", "02_user_guide/01_write/02_analog_schedule/01_building_schedules.rst", "02_user_guide/01_write/02_analog_schedule/02_manip_schedules.rst", "02_user_guide/01_write/02_analog_schedule/03_an_jobs.rst", "02_user_guide/01_write/03_annealing_problems.rst", "02_user_guide/01_write/03_annealing_problems/01_ising.rst", "02_user_guide/01_write/03_annealing_problems/02_qubo.rst", "02_user_guide/01_write/03_annealing_problems/03_comb_prob.rst", "02_user_guide/01_write/03_observable.rst", "02_user_guide/02_execute.rst", "02_user_guide/02_execute/01_job.rst", "02_user_guide/02_execute/01_job/01_sample_job.rst", "02_user_guide/02_execute/01_job/02_observable_job.rst", "02_user_guide/02_execute/01_job/03_automated_batch_generation.rst", "02_user_guide/02_execute/02_result.rst", "02_user_guide/02_execute/03_qpu.rst", "02_user_guide/02_execute/03_qpu/02_analog.rst", "02_user_guide/02_execute/03_qpu/02_analog/01_noiseless_an.rst", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an.rst", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an/01_jump_ops.rst", "02_user_guide/02_execute/03_qpu/02_analog/02_noisy_an/02_stoch_noise.rst", "02_user_guide/02_execute/03_qpu/02_analog/03_bosonic.rst", "02_user_guide/02_execute/03_qpu/02_analog/04_fermionic.rst", "02_user_guide/02_execute/03_qpu/03_annealing.rst", "02_user_guide/02_execute/03_qpu/04_custom_qpu.rst", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based.rst", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based/clinalg.rst", "02_user_guide/02_execute/03_qpu/:myqlm:01_gate_based/pylinalg.rst", "02_user_guide/02_execute/04_plugin.rst", "02_user_guide/02_execute/04_plugin/01_custom_plugin.rst", "02_user_guide/02_execute/04_plugin/02_custom_junction.rst", "02_user_guide/02_execute/04_plugin/03_hardware_specs.rst", "02_user_guide/02_execute/05_variational.rst", "02_user_guide/03_compile.rst", "02_user_guide/03_compile/01_compilers.rst", "02_user_guide/03_compile/01_compilers/01_lazy.rst", "02_user_guide/03_compile/01_compilers/02_mapping.rst", "02_user_guide/03_compile/01_compilers/03_nnize.rst", "02_user_guide/03_compile/02_rewrite.rst", "02_user_guide/03_compile/02_rewrite/01_low_level.rst", "02_user_guide/03_compile/02_rewrite/02_high_level.rst", "02_user_guide/03_compile/02_rewrite/03_kak.rst", "02_user_guide/03_compile/02_rewrite/04_patterns.rst", "02_user_guide/03_compile/02_rewrite/05_collections.rst", "04_api_reference.rst", "04_api_reference/module_qat.rst", "04_api_reference/module_qat/:myqlm:module_interop.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq/cirq_to_qlm.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_cirq/qlm_to_cirq.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_openqasm.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_openqasm/oqasmparser.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq/aqasmengine.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_projectq/aqasmprinter.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/pyquil_to_qlm.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/pyquilqpu.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_pyquil/qlm_to_pyquil.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/asyncbackendtoqpu.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/backendtoqpu.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskit_to_qlm.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskitjob.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qiskitruntimeqpu.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qlm_to_qiskit.rst", "04_api_reference/module_qat/:myqlm:module_interop/module_qiskit/qputobackend.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/mat2nparray.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/measure.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/project.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/raise_break.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/reset.rst", "04_api_reference/module_qat/:myqlm:module_pylinalg/module_simulator/simulate.rst", "04_api_reference/module_qat/module_comm.rst", "04_api_reference/module_qat/module_comm/module_datamodel.rst", "04_api_reference/module_qat/module_comm/module_datamodel/gatedefinition.rst", "04_api_reference/module_qat/module_comm/module_datamodel/op.rst", "04_api_reference/module_qat/module_comm/module_exceptions.rst", "04_api_reference/module_qat/module_comm/module_exceptions/errortype.rst", "04_api_reference/module_qat/module_comm/module_exceptions/generatorexception.rst", "04_api_reference/module_qat/module_comm/module_exceptions/pluginexception.rst", "04_api_reference/module_qat/module_comm/module_exceptions/qpuexception.rst", "04_api_reference/module_qat/module_comm/module_resource.rst", "04_api_reference/module_qat/module_comm/module_resource/allocationmodel.rst", "04_api_reference/module_qat/module_comm/module_resource/device.rst", "04_api_reference/module_qat/module_comm/module_resource/nodetype.rst", "04_api_reference/module_qat/module_comm/module_resource/resourcemodel.rst", "04_api_reference/module_qat/module_comm/module_shared.rst", "04_api_reference/module_qat/module_comm/module_shared/intermediatemeasurement.rst", "04_api_reference/module_qat/module_comm/module_shared/processingtype.rst", "04_api_reference/module_qat/module_core.rst", "04_api_reference/module_qat/module_core/aggregate_data.rst", "04_api_reference/module_qat/module_core/assert_plugin.rst", "04_api_reference/module_qat/module_core/assert_qpu.rst", "04_api_reference/module_qat/module_core/batch.rst", "04_api_reference/module_qat/module_core/batchresult.rst", "04_api_reference/module_qat/module_core/circuit.rst", "04_api_reference/module_qat/module_core/display.rst", "04_api_reference/module_qat/module_core/evaluate.rst", "04_api_reference/module_qat/module_core/hardwarespecs.rst", "04_api_reference/module_qat/module_core/job.rst", "04_api_reference/module_qat/module_core/load_state_vector_from_bin.rst", "04_api_reference/module_qat/module_core/module_application.rst", "04_api_reference/module_qat/module_core/module_application/application.rst", "04_api_reference/module_qat/module_core/module_application/remoteapplication.rst", "04_api_reference/module_qat/module_core/module_circuit_builder.rst", "04_api_reference/module_qat/module_core/module_circuit_builder/default_gate_set.rst", "04_api_reference/module_qat/module_core/module_circuit_builder/get_param_generator.rst", "04_api_reference/module_qat/module_core/module_circuit_builder/get_predef_generator.rst", "04_api_reference/module_qat/module_core/module_circuit_builder/variablenamenotavailable.rst", "04_api_reference/module_qat/module_core/module_exceptions_utils.rst", "04_api_reference/module_qat/module_core/module_exceptions_utils/exception_only.rst", "04_api_reference/module_qat/module_core/module_exceptions_utils/generator_exception_only.rst", "04_api_reference/module_qat/module_core/module_exceptions_utils/plugin_exception_only.rst", "04_api_reference/module_qat/module_core/module_exceptions_utils/qpu_exception_only.rst", "04_api_reference/module_qat/module_core/module_gate_set.rst", "04_api_reference/module_qat/module_core/module_gate_set/gateset.rst", "04_api_reference/module_qat/module_core/module_gate_set/gatesignature.rst", "04_api_reference/module_qat/module_core/module_gate_set/gatesyntaxredefinition.rst", "04_api_reference/module_qat/module_core/module_qpu.rst", "04_api_reference/module_qat/module_core/module_qpu/commonqpu.rst", "04_api_reference/module_qat/module_core/module_spins.rst", "04_api_reference/module_qat/module_core/module_spins/integer_to_spins.rst", "04_api_reference/module_qat/module_core/module_spins/spins_to_integer.rst", "04_api_reference/module_qat/module_core/module_variables.rst", "04_api_reference/module_qat/module_core/module_variables/abso.rst", "04_api_reference/module_qat/module_core/module_variables/angle.rst", "04_api_reference/module_qat/module_core/module_variables/arithexpression.rst", "04_api_reference/module_qat/module_core/module_variables/atan2.rst", "04_api_reference/module_qat/module_core/module_variables/cos.rst", "04_api_reference/module_qat/module_core/module_variables/exp.rst", "04_api_reference/module_qat/module_core/module_variables/get_item.rst", "04_api_reference/module_qat/module_core/module_variables/heaviside.rst", "04_api_reference/module_qat/module_core/module_variables/imag.rst", "04_api_reference/module_qat/module_core/module_variables/ln.rst", "04_api_reference/module_qat/module_core/module_variables/real.rst", "04_api_reference/module_qat/module_core/module_variables/sin.rst", "04_api_reference/module_qat/module_core/module_variables/sqrt.rst", "04_api_reference/module_qat/module_core/module_variables/symbol.rst", "04_api_reference/module_qat/module_core/module_variables/vmax.rst", "04_api_reference/module_qat/module_core/observable.rst", "04_api_reference/module_qat/module_core/parameter.rst", "04_api_reference/module_qat/module_core/plot_in_notebook.rst", "04_api_reference/module_qat/module_core/result.rst", "04_api_reference/module_qat/module_core/sample.rst", "04_api_reference/module_qat/module_core/schedule.rst", "04_api_reference/module_qat/module_core/state.rst", "04_api_reference/module_qat/module_core/term.rst", "04_api_reference/module_qat/module_core/topology.rst", "04_api_reference/module_qat/module_core/topologytype.rst", "04_api_reference/module_qat/module_core/variable.rst", "04_api_reference/module_qat/module_core/wavefunction.rst", "04_api_reference/module_qat/module_devices.rst", "04_api_reference/module_qat/module_devices/alltoall.rst", "04_api_reference/module_qat/module_devices/google_sycamore.rst", "04_api_reference/module_qat/module_devices/griddevice.rst", "04_api_reference/module_qat/module_devices/ibm_burlington.rst", "04_api_reference/module_qat/module_devices/ibm_johannesburg.rst", "04_api_reference/module_qat/module_devices/ibm_melbourne.rst", "04_api_reference/module_qat/module_devices/ibm_rueschlikon.rst", "04_api_reference/module_qat/module_devices/ibm_singapore.rst", "04_api_reference/module_qat/module_devices/ibm_tokyo.rst", "04_api_reference/module_qat/module_devices/ibm_yorktown.rst", "04_api_reference/module_qat/module_devices/linedevice.rst", "04_api_reference/module_qat/module_devices/rigetti_agave.rst", "04_api_reference/module_qat/module_devices/rigetti_aspen.rst", "04_api_reference/module_qat/module_devices/squaregriddevice.rst", "04_api_reference/module_qat/module_devices/zuchongzhi.rst", "04_api_reference/module_qat/module_fermion.rst", "04_api_reference/module_qat/module_fermion/apply_quantum_subspace_expansion.rst", "04_api_reference/module_qat/module_fermion/compute_active_space_integrals.rst", "04_api_reference/module_qat/module_fermion/construct_ucc_ansatz.rst", "04_api_reference/module_qat/module_fermion/convert_to_h_integrals.rst", "04_api_reference/module_qat/module_fermion/electronicstructurehamiltonian.rst", "04_api_reference/module_qat/module_fermion/fermionhamiltonian.rst", "04_api_reference/module_qat/module_fermion/get_cluster_ops.rst", "04_api_reference/module_qat/module_fermion/get_hf_ket.rst", "04_api_reference/module_qat/module_fermion/guess_init_params.rst", "04_api_reference/module_qat/module_fermion/make_anderson_model.rst", "04_api_reference/module_qat/module_fermion/make_compressed_ldca_circ.rst", "04_api_reference/module_qat/module_fermion/make_embedded_model.rst", "04_api_reference/module_qat/module_fermion/make_general_hwe_circ.rst", "04_api_reference/module_qat/module_fermion/make_hubbard_model.rst", "04_api_reference/module_qat/module_fermion/make_ldca_circ.rst", "04_api_reference/module_qat/module_fermion/make_mr_circ.rst", "04_api_reference/module_qat/module_fermion/make_mrep_circ.rst", "04_api_reference/module_qat/module_fermion/make_shallow_circ.rst", "04_api_reference/module_qat/module_fermion/make_trotterisation_routine.rst", "04_api_reference/module_qat/module_fermion/molecularhamiltonian.rst", "04_api_reference/module_qat/module_fermion/moleculeinfo.rst", "04_api_reference/module_qat/module_fermion/perform_phase_estimation.rst", "04_api_reference/module_qat/module_fermion/perform_pyscf_computation.rst", "04_api_reference/module_qat/module_fermion/select_active_orbitals.rst", "04_api_reference/module_qat/module_fermion/spinhamiltonian.rst", "04_api_reference/module_qat/module_fermion/transform_integrals_to_new_basis.rst", "04_api_reference/module_qat/module_fermion/transform_to_bk_basis.rst", "04_api_reference/module_qat/module_fermion/transform_to_jw_basis.rst", "04_api_reference/module_qat/module_fermion/transform_to_parity_basis.rst", "04_api_reference/module_qat/module_fusion.rst", "04_api_reference/module_qat/module_fusion/adjacentstrategy.rst", "04_api_reference/module_qat/module_fusion/eagerstrategy.rst", "04_api_reference/module_qat/module_fusion/naivestrategy.rst", "04_api_reference/module_qat/module_generators.rst", "04_api_reference/module_qat/module_generators/abstractgenerator.rst", "04_api_reference/module_qat/module_generators/combinatorialoptimizergenerator.rst", "04_api_reference/module_qat/module_generators/graphcolouringgenerator.rst", "04_api_reference/module_qat/module_generators/graphpartitioninggenerator.rst", "04_api_reference/module_qat/module_generators/kcliquegenerator.rst", "04_api_reference/module_qat/module_generators/maxcutgenerator.rst", "04_api_reference/module_qat/module_generators/remotebatchgenerator.rst", "04_api_reference/module_qat/module_generators/vertexcovergenerator.rst", "04_api_reference/module_qat/module_hardware.rst", "04_api_reference/module_qat/module_hardware/defaultgatesspecification.rst", "04_api_reference/module_qat/module_hardware/defaulthardwaremodel.rst", "04_api_reference/module_qat/module_hardware/gatesspecification.rst", "04_api_reference/module_qat/module_hardware/hardwaremodel.rst", "04_api_reference/module_qat/module_hardware/make_depolarizing_hardware_model.rst", "04_api_reference/module_qat/module_lang.rst", "04_api_reference/module_qat/module_lang/abstractgate.rst", "04_api_reference/module_qat/module_lang/amplification_step.rst", "04_api_reference/module_qat/module_lang/boolformula.rst", "04_api_reference/module_qat/module_lang/build_gate.rst", "04_api_reference/module_qat/module_lang/cbit.rst", "04_api_reference/module_qat/module_lang/cregister.rst", "04_api_reference/module_qat/module_lang/gate.rst", "04_api_reference/module_qat/module_lang/generate_gate_set.rst", "04_api_reference/module_qat/module_lang/grover_diffusion.rst", "04_api_reference/module_qat/module_lang/householder.rst", "04_api_reference/module_qat/module_lang/kptree.rst", "04_api_reference/module_qat/module_lang/linker.rst", "04_api_reference/module_qat/module_lang/module_arithmetic.rst", "04_api_reference/module_qat/module_lang/module_arithmetic/add_const_mod.rst", "04_api_reference/module_qat/module_lang/module_arithmetic/add_mod.rst", "04_api_reference/module_qat/module_lang/module_arithmetic/modular_exp.rst", "04_api_reference/module_qat/module_lang/module_arithmetic/mult_const.rst", "04_api_reference/module_qat/module_lang/module_arithmetic/mult_const_mod.rst", "04_api_reference/module_qat/module_lang/module_classarith.rst", "04_api_reference/module_qat/module_lang/module_classarith/add.rst", "04_api_reference/module_qat/module_lang/module_classarith/add_const.rst", "04_api_reference/module_qat/module_lang/module_classarith/cuccaro_add.rst", "04_api_reference/module_qat/module_lang/module_qftarith.rst", "04_api_reference/module_qat/module_lang/module_qftarith/add.rst", "04_api_reference/module_qat/module_lang/module_qftarith/add_const.rst", "04_api_reference/module_qat/module_lang/module_qftarith/mult.rst", "04_api_reference/module_qat/module_lang/module_qftarith/mult_const.rst", "04_api_reference/module_qat/module_lang/module_qftarith/qft.rst", "04_api_reference/module_qat/module_lang/paramgate.rst", "04_api_reference/module_qat/module_lang/phase_estimation.rst", "04_api_reference/module_qat/module_lang/program.rst", "04_api_reference/module_qat/module_lang/qarithexp.rst", "04_api_reference/module_qat/module_lang/qbit.rst", "04_api_reference/module_qat/module_lang/qbool.rst", "04_api_reference/module_qat/module_lang/qboolarray.rst", "04_api_reference/module_qat/module_lang/qclause.rst", "04_api_reference/module_qat/module_lang/qcompexp.rst", "04_api_reference/module_qat/module_lang/qfunc.rst", "04_api_reference/module_qat/module_lang/qint.rst", "04_api_reference/module_qat/module_lang/qregister.rst", "04_api_reference/module_qat/module_lang/qrout.rst", "04_api_reference/module_qat/module_lang/qroutine.rst", "04_api_reference/module_qat/module_lang/quantum_counting.rst", "04_api_reference/module_qat/module_lang/uniform_distribution.rst", "04_api_reference/module_qat/module_nnize.rst", "04_api_reference/module_qat/module_nnize/durationmetric.rst", "04_api_reference/module_qat/module_nnize/quantumcostmetric.rst", "04_api_reference/module_qat/module_opt.rst", "04_api_reference/module_qat/module_opt/ansatzfactory.rst", "04_api_reference/module_qat/module_opt/bilp.rst", "04_api_reference/module_qat/module_opt/circuitgenerator.rst", "04_api_reference/module_qat/module_opt/clause.rst", "04_api_reference/module_qat/module_opt/combinatorialproblem.rst", "04_api_reference/module_qat/module_opt/graphcolouring.rst", "04_api_reference/module_qat/module_opt/graphpartitioning.rst", "04_api_reference/module_qat/module_opt/ising.rst", "04_api_reference/module_qat/module_opt/kclique.rst", "04_api_reference/module_qat/module_opt/maxcut.rst", "04_api_reference/module_qat/module_opt/mixingfactory.rst", "04_api_reference/module_qat/module_opt/module_mixing_factory.rst", "04_api_reference/module_qat/module_opt/module_mixing_factory/independentaqo.rst", "04_api_reference/module_qat/module_opt/module_mixing_factory/initialstatebuilder.rst", "04_api_reference/module_qat/module_opt/module_mixing_factory/simpleinitialstate.rst", "04_api_reference/module_qat/module_opt/module_results.rst", "04_api_reference/module_qat/module_opt/module_results/combinatorialresult.rst", "04_api_reference/module_qat/module_opt/module_results/graphpartitioningresult.rst", "04_api_reference/module_qat/module_opt/module_results/kcliqueresult.rst", "04_api_reference/module_qat/module_opt/module_results/vertexcoverresult.rst", "04_api_reference/module_qat/module_opt/mwis.rst", "04_api_reference/module_qat/module_opt/numberpartitioning.rst", "04_api_reference/module_qat/module_opt/qubo.rst", "04_api_reference/module_qat/module_opt/schedulegenerator.rst", "04_api_reference/module_qat/module_opt/var.rst", "04_api_reference/module_qat/module_opt/vertexcover.rst", "04_api_reference/module_qat/module_pbo.rst", "04_api_reference/module_qat/module_pbo/abstractregister.rst", "04_api_reference/module_qat/module_pbo/gatename.rst", "04_api_reference/module_qat/module_pbo/graphcircuit.rst", "04_api_reference/module_qat/module_pbo/list_decompositions.rst", "04_api_reference/module_qat/module_pbo/module_collections.rst", "04_api_reference/module_qat/module_pbo/module_collections/collection_from_target.rst", "04_api_reference/module_qat/module_pbo/module_decomposition.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/get_euler_angles.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/ions_decomposition.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/u3_decomposition.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/xzx_decomposition.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/zxz_decomposition.rst", "04_api_reference/module_qat/module_pbo/module_decomposition/zyz_decomposition.rst", "04_api_reference/module_qat/module_pbo/patterngroup.rst", "04_api_reference/module_qat/module_pbo/var.rst", "04_api_reference/module_qat/module_plugins.rst", "04_api_reference/module_qat/module_plugins/abstractplugin.rst", "04_api_reference/module_qat/module_plugins/adaptvqeplugin.rst", "04_api_reference/module_qat/module_plugins/circuitinliner.rst", "04_api_reference/module_qat/module_plugins/costfunctionplugin.rst", "04_api_reference/module_qat/module_plugins/display.rst", "04_api_reference/module_qat/module_plugins/fusionplugin.rst", "04_api_reference/module_qat/module_plugins/gaterewriter.rst", "04_api_reference/module_qat/module_plugins/gradientdescentoptimizer.rst", "04_api_reference/module_qat/module_plugins/initialmapping.rst", "04_api_reference/module_qat/module_plugins/junction.rst", "04_api_reference/module_qat/module_plugins/kakcompression.rst", "04_api_reference/module_qat/module_plugins/lazysynthesis.rst", "04_api_reference/module_qat/module_plugins/multiplelaunchesanalyzer.rst", "04_api_reference/module_qat/module_plugins/nisqcompiler.rst", "04_api_reference/module_qat/module_plugins/nnizer.rst", "04_api_reference/module_qat/module_plugins/observablesplitter.rst", "04_api_reference/module_qat/module_plugins/optimizer.rst", "04_api_reference/module_qat/module_plugins/patternmanager.rst", "04_api_reference/module_qat/module_plugins/psominimizeplugin.rst", "04_api_reference/module_qat/module_plugins/quameleonplugin.rst", "04_api_reference/module_qat/module_plugins/remap.rst", "04_api_reference/module_qat/module_plugins/remoteplugin.rst", "04_api_reference/module_qat/module_plugins/scipyminimizeplugin.rst", "04_api_reference/module_qat/module_plugins/seqoptim.rst", "04_api_reference/module_qat/module_plugins/spsaminimizeplugin.rst", "04_api_reference/module_qat/module_plugins/transformobservable.rst", "04_api_reference/module_qat/module_plugins/zeronoiseextrapolator.rst", "04_api_reference/module_qat/module_qiskit.rst", "04_api_reference/module_qat/module_qiskit/estimator.rst", "04_api_reference/module_qat/module_qiskit/qaptivaservice.rst", "04_api_reference/module_qat/module_qiskit/qiskit_to_qlm.rst", "04_api_reference/module_qat/module_qiskit/sampler.rst", "04_api_reference/module_qat/module_qpus.rst", "04_api_reference/module_qat/module_qpus/:myqlm:clinalg.rst", "04_api_reference/module_qat/module_qpus/:myqlm:pylinalg.rst", "04_api_reference/module_qat/module_qpus/:myqlm:simulatedannealing.rst", "04_api_reference/module_qat/module_qpus/classicalqpu.rst", "04_api_reference/module_qat/module_qpus/get_current_qpu.rst", "04_api_reference/module_qat/module_qpus/get_default_qpu.rst", "04_api_reference/module_qat/module_qpus/get_noisy_qpu.rst", "04_api_reference/module_qat/module_qpus/qpuhandler.rst", "04_api_reference/module_qat/module_qpus/qutipqpu.rst", "04_api_reference/module_qat/module_qpus/remoteqpu.rst", "04_api_reference/module_qat/module_quops.rst", "04_api_reference/module_qat/module_quops/are_equal_up_to_phase.rst", "04_api_reference/module_qat/module_quops/channelrepresentations.rst", "04_api_reference/module_qat/module_quops/convert_density_mat_to_pauli_vec.rst", "04_api_reference/module_qat/module_quops/convert_pauli_vec_to_density_mat.rst", "04_api_reference/module_qat/module_quops/get_average_process_fidelity.rst", "04_api_reference/module_qat/module_quops/get_diamond_norm.rst", "04_api_reference/module_qat/module_quops/get_entanglement_process_fidelity.rst", "04_api_reference/module_qat/module_quops/get_process_distance.rst", "04_api_reference/module_qat/module_quops/get_state_fidelity.rst", "04_api_reference/module_qat/module_quops/get_trace_distance.rst", "04_api_reference/module_qat/module_quops/is_completely_positive.rst", "04_api_reference/module_qat/module_quops/is_trace_preserving.rst", "04_api_reference/module_qat/module_quops/is_trace_reducing.rst", "04_api_reference/module_qat/module_quops/is_unital.rst", "04_api_reference/module_qat/module_quops/make_avg_fid_equiv_depol_channel.rst", "04_api_reference/module_qat/module_quops/make_depolarizing_channel.rst", "04_api_reference/module_qat/module_quops/make_generalized_amplitude_damping.rst", "04_api_reference/module_qat/module_quops/make_pauli_matrix_basis.rst", "04_api_reference/module_qat/module_quops/make_standard_matrix_basis.rst", "04_api_reference/module_qat/module_quops/make_standard_vector_basis.rst", "04_api_reference/module_qat/module_quops/multikron.rst", "04_api_reference/module_qat/module_quops/parametricamplitudedamping.rst", "04_api_reference/module_qat/module_quops/parametricgatenoise.rst", "04_api_reference/module_qat/module_quops/parametricpuredephasing.rst", "04_api_reference/module_qat/module_quops/parametricquantumchannel.rst", "04_api_reference/module_qat/module_quops/partial_trace.rst", "04_api_reference/module_qat/module_quops/quantumchannel.rst", "04_api_reference/module_qat/module_quops/quantumchannelchi.rst", "04_api_reference/module_qat/module_quops/quantumchannelchoi.rst", "04_api_reference/module_qat/module_quops/quantumchannelkraus.rst", "04_api_reference/module_qat/module_quops/quantumchannelptm.rst", "04_api_reference/module_qat/module_synthopline.rst", "04_api_reference/module_qat/module_synthopline/cliffordnormalizer.rst", "04_api_reference/module_qat/module_synthopline/codiagonalize_with_architecture.rst", "04_api_reference/module_qat/module_synthopline/conjugate_observable_tableau.rst", "04_api_reference/module_qat/module_synthopline/extract_linear_operator.rst", "04_api_reference/module_qat/module_synthopline/extract_pauli_rotations.rst", "04_api_reference/module_qat/module_synthopline/extract_phase_polynomial.rst", "04_api_reference/module_qat/module_synthopline/frequency_mapping.rst", "04_api_reference/module_qat/module_synthopline/generate_random_observable.rst", "04_api_reference/module_qat/module_synthopline/generate_trotter_ansatz.rst", "04_api_reference/module_qat/module_synthopline/greedy_mapping.rst", "04_api_reference/module_qat/module_synthopline/linear_operator_synthesis.rst", "04_api_reference/module_qat/module_synthopline/operatortableau.rst", "04_api_reference/module_qat/module_synthopline/phase_polynomial_synthesis.rst", "04_api_reference/module_qat/module_synthopline/random_linear_operator.rst", "04_api_reference/module_qat/module_synthopline/random_phase_polynomial.rst", "04_api_reference/module_qat/module_synthopline/synthesize_stabilizer_state.rst", "04_api_reference/module_qat/module_synthopline/weyloperator.rst", "05_demos.rst", "07_release_notes.rst", ":myqlm:06_support.rst", ":myqlm:interoperability.rst", ":myqlm:interoperability/01_qiskit.rst", ":myqlm:interoperability/02_pyquil.rst", ":myqlm:interoperability/03_cirq.rst", ":myqlm:interoperability/04_projectq.rst", ":myqlm:interoperability/05_openqasm.rst", "combinatorial_optim_applic.rst", "combinatorial_optim_applic/01_np_probs_for_annealing.rst", "combinatorial_optim_applic/01_np_probs_for_annealing/graph_partitioning_ann_prob.rst", "combinatorial_optim_applic/01_np_probs_for_annealing/kclique_ann_prob.rst", "combinatorial_optim_applic/01_np_probs_for_annealing/max_cut_ann_prob.rst", "combinatorial_optim_applic/01_np_probs_for_annealing/number_partitioning_ann_prob.rst", "combinatorial_optim_applic/01_np_probs_for_annealing/vertex_cover_ann_prob.rst", "combinatorial_optim_applic/02_qaoa.rst", "combinatorial_optim_applic/03_aqo.rst", "combinatorial_optim_applic/04_crossing_lattice.rst", "combinatorial_optim_applic/05_np_problem_generators.rst", "combinatorial_optim_applic/05_np_problem_generators/01_max_cut_generator.rst", "combinatorial_optim_applic/05_np_problem_generators/02_graph_partitioning_generator.rst", "combinatorial_optim_applic/05_np_problem_generators/03_kclique_generator.rst", "combinatorial_optim_applic/05_np_problem_generators/04_vertex_cover_generator.rst", "combinatorial_optim_applic/05_np_problem_generators/05_graph_colouring_generator.rst", "fermion.rst", "fermion/01_hamiltonians.rst", "fermion/02_algorithms.rst", "fermion/03_plugins.rst", "fermion/04_migrating.rst", "index.rst", "interoperability_annealing.rst", "qiskit_interoperability.rst"], "indexentries": {"abstractgate (class in qat.lang)": [[238, "qat.lang.AbstractGate", false]], "abstractgenerator (class in qat.generators)": [[223, "qat.generators.AbstractGenerator", false]], "abstractplugin (class in qat.plugins)": [[329, "qat.plugins.AbstractPlugin", false]], "abstractregister (class in qat.pbo)": [[313, "qat.pbo.AbstractRegister", false]], "adaptvqeplugin (class in qat.plugins)": [[330, "qat.plugins.AdaptVQEPlugin", false]], "add() (in module qat.lang.aqasm.classarith)": [[257, "qat.lang.AQASM.classarith.add", false]], "add() (in module qat.lang.aqasm.qftarith)": [[261, "qat.lang.AQASM.qftarith.add", false]], "add_abstract_gate() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.add_abstract_gate", false]], "add_abstract_gate() (qat.plugins.patternmanager method)": [[346, "qat.plugins.PatternManager.add_abstract_gate", false]], "add_clause() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.add_clause", false]], "add_const() (in module qat.lang.aqasm.classarith)": [[258, "qat.lang.AQASM.classarith.add_const", false]], "add_const() (in module qat.lang.aqasm.qftarith)": [[262, "qat.lang.AQASM.qftarith.add_const", false]], "add_const_mod() (in module qat.lang.aqasm.arithmetic)": [[251, "qat.lang.AQASM.arithmetic.add_const_mod", false]], "add_edge() (qat.core.topology method)": [[168, "qat.core.Topology.add_edge", false]], "add_function() (qat.pbo.var class method)": [[327, "qat.pbo.VAR.add_function", false]], "add_mod() (in module qat.lang.aqasm.arithmetic)": [[252, "qat.lang.AQASM.arithmetic.add_mod", false]], "add_pattern() (qat.pbo.patterngroup method)": [[326, "qat.pbo.PatternGroup.add_pattern", false]], "add_prohibited_value() (qat.pbo.var method)": [[327, "qat.pbo.VAR.add_prohibited_value", false]], "add_sample() (qat.core.result method)": [[163, "qat.core.Result.add_sample", false]], "add_signature() (qat.core.gate_set.gateset method)": [[136, "qat.core.gate_set.GateSet.add_signature", false]], "add_signature() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.add_signature", false]], "adjacentstrategy (class in qat.fusion.strategies)": [[219, "qat.fusion.strategies.AdjacentStrategy", false]], "aggregate_data() (in module qat.core.wrappers.result)": [[111, "qat.core.wrappers.result.aggregate_data", false]], "alltoall (class in qat.devices)": [[173, "qat.devices.AllToAll", false]], "amplification_step() (in module qat.lang.algorithms)": [[239, "qat.lang.algorithms.amplification_step", false]], "amplitude (qat.core.sample property)": [[164, "qat.core.Sample.amplitude", false]], "and_clause() (qat.opt.boolexpr.clause static method)": [[289, "qat.opt.boolexpr.Clause.and_clause", false]], "ansatzfactory (class in qat.vsolve.ansatz)": [[286, "qat.vsolve.ansatz.AnsatzFactory", false]], "append() (qat.core.batchresult method)": [[115, "qat.core.BatchResult.append", false]], "application (class in qat.core.application)": [[123, "qat.core.application.Application", false]], "apply() (qat.lang.program method)": [[268, "qat.lang.Program.apply", false]], "apply() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.apply", false]], "apply_quantum_subspace_expansion() (in module qat.fermion.chemistry.qse)": [[189, "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion", false]], "apply_resource_consumption_limits() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.apply_resource_consumption_limits", false]], "apply_to() (qat.quops.quantumchannelchi method)": [[400, "qat.quops.QuantumChannelChi.apply_to", false]], "apply_to() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.apply_to", false]], "apply_to() (qat.quops.quantumchannelptm method)": [[403, "qat.quops.QuantumChannelPTM.apply_to", false]], "apply_to_vector() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.apply_to_vector", false]], "aqasmengine (class in qat.interop.projectq)": [[71, "qat.interop.projectq.AqasmEngine", false]], "aqasmprinter (class in qat.interop.projectq)": [[72, "qat.interop.projectq.AqasmPrinter", false]], "aqo_job() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.aqo_job", false]], "aqo_job() (qat.opt.ising method)": [[293, "qat.opt.Ising.aqo_job", false]], "aqo_job() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.aqo_job", false]], "aqo_job() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.aqo_job", false]], "aqo_job() (qat.opt.schedule_generator.schedulegenerator method)": [[309, "qat.opt.schedule_generator.ScheduleGenerator.aqo_job", false]], "are_equal_up_to_phase() (in module qat.quops.math_util)": [[373, "qat.quops.math_util.are_equal_up_to_phase", false]], "arithexpression (class in qat.core.variables)": [[147, "qat.core.variables.ArithExpression", false]], "arity (qat.quops.quantumchannelchi attribute)": [[400, "qat.quops.QuantumChannelChi.arity", false]], "arity (qat.quops.quantumchannelchoi attribute)": [[401, "qat.quops.QuantumChannelChoi.arity", false]], "arity (qat.quops.quantumchannelptm attribute)": [[403, "qat.quops.QuantumChannelPTM.arity", false]], "as_graph() (qat.core.hardwarespecs method)": [[119, "qat.core.HardwareSpecs.as_graph", false]], "as_quameleon() (qat.core.hardwarespecs method)": [[119, "qat.core.HardwareSpecs.as_quameleon", false]], "assert_plugin() (in module qat.core.assertion)": [[112, "qat.core.assertion.assert_plugin", false]], "assert_qpu() (in module qat.core.assertion)": [[113, "qat.core.assertion.assert_qpu", false]], "asyncbackendtoqpu (class in qat.interop.qiskit)": [[78, "qat.interop.qiskit.AsyncBackendToQPU", false]], "backend() (qat.qiskit.qaptivaservice method)": [[358, "qat.qiskit.QaptivaService.backend", false]], "backends() (qat.qiskit.qaptivaservice method)": [[358, "qat.qiskit.QaptivaService.backends", false]], "backendtoqpu (class in qat.interop.qiskit)": [[79, "qat.interop.qiskit.BackendToQPU", false]], "batch (class in qat.core)": [[114, "qat.core.Batch", false]], "batchresult (class in qat.core)": [[115, "qat.core.BatchResult", false]], "bilp (class in qat.opt)": [[287, "qat.opt.BILP", false]], "bind_variable() (qat.core.circuit method)": [[116, "qat.core.Circuit.bind_variable", false]], "bind_variables() (qat.core.circuit method)": [[116, "qat.core.Circuit.bind_variables", false]], "bind_variables() (qat.lang.aqasm.gates.paramgate method)": [[266, "qat.lang.AQASM.gates.ParamGate.bind_variables", false]], "bit_flip() (qat.opt.mixingfactory static method)": [[296, "qat.opt.MixingFactory.bit_flip", false]], "bit_move() (qat.opt.mixingfactory static method)": [[296, "qat.opt.MixingFactory.bit_move", false]], "bitstring (qat.core.wrappers.result.state property)": [[166, "qat.core.wrappers.result.State.bitstring", false]], "boolformula (class in qat.lang.aqasm.bits)": [[240, "qat.lang.AQASM.bits.BoolFormula", false]], "build_gate() (in module qat.lang)": [[241, "qat.lang.build_gate", false]], "built-in function": [[145, "qat.core.variables.abso", false], [146, "qat.core.variables.angle", false], [148, "qat.core.variables.atan2", false], [149, "qat.core.variables.cos", false], [150, "qat.core.variables.exp", false], [151, "qat.core.variables.get_item", false], [152, "qat.core.variables.heaviside", false], [153, "qat.core.variables.imag", false], [154, "qat.core.variables.ln", false], [155, "qat.core.variables.real", false], [156, "qat.core.variables.sin", false], [157, "qat.core.variables.sqrt", false], [159, "qat.core.variables.vmax", false]], "calloc() (qat.lang.program method)": [[268, "qat.lang.Program.calloc", false]], "cancel() (qat.interop.qiskit.qiskitjob method)": [[81, "qat.interop.qiskit.QiskitJob.cancel", false]], "cast() (qat.lang.aqasm.qbool.qbool method)": [[271, "qat.lang.AQASM.qbool.QBool.cast", false]], "cast() (qat.lang.aqasm.qbool.qboolarray method)": [[272, "qat.lang.AQASM.qbool.QBoolArray.cast", false]], "cast() (qat.lang.aqasm.qint.qint method)": [[276, "qat.lang.AQASM.qint.QInt.cast", false]], "cast_to() (qat.lang.aqasm.qbool.qbool method)": [[271, "qat.lang.AQASM.qbool.QBool.cast_to", false]], "cbit (class in qat.lang.aqasm.bits)": [[242, "qat.lang.AQASM.bits.Cbit", false]], "cbreak() (qat.lang.program method)": [[268, "qat.lang.Program.cbreak", false]], "cc_apply() (qat.lang.program method)": [[268, "qat.lang.Program.cc_apply", false]], "channelrepresentations (class in qat.quops)": [[374, "qat.quops.ChannelRepresentations", false]], "circuit (class in qat.core)": [[116, "qat.core.Circuit", false]], "circuitgenerator (class in qat.opt.circuit_generator)": [[288, "qat.opt.circuit_generator.CircuitGenerator", false]], "circuitinliner (class in qat.plugins)": [[331, "qat.plugins.CircuitInliner", false]], "cirq_to_qlm() (in module qat.interop.cirq)": [[66, "qat.interop.cirq.cirq_to_qlm", false]], "classicalqpu (class in qat.qpus)": [[365, "qat.qpus.ClassicalQPU", false]], "clause (class in qat.opt.boolexpr)": [[289, "qat.opt.boolexpr.Clause", false]], "cleanup_jump_operators() (qat.hardware.defaulthardwaremodel method)": [[233, "qat.hardware.DefaultHardwareModel.cleanup_jump_operators", false]], "cleanup_jump_operators() (qat.hardware.hardwaremodel method)": [[235, "qat.hardware.HardwareModel.cleanup_jump_operators", false]], "clear_gate_set() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.clear_gate_set", false]], "cliffordnormalizer (class in qat.synthopline.clifford_normalizer)": [[405, "qat.synthopline.clifford_normalizer.CliffordNormalizer", false]], "clinalg (class in qat.qpus)": [[362, "qat.qpus.CLinalg", false]], "clique (qat.opt.results.kcliqueresult property)": [[304, "qat.opt.results.KCliqueResult.clique", false]], "cnot_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.cnot_left", false]], "cnot_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.cnot_right", false]], "codiagonalize_with_architecture() (in module qat.synthopline.co_diagonalization)": [[406, "qat.synthopline.co_diagonalization.codiagonalize_with_architecture", false]], "coeff (qat.core.term attribute)": [[167, "qat.core.Term.coeff", false]], "collection_from_target() (in module qat.pbo.collections)": [[318, "qat.pbo.collections.collection_from_target", false]], "combinatorialoptimizergenerator (class in qat.generators)": [[224, "qat.generators.CombinatorialOptimizerGenerator", false]], "combinatorialproblem (class in qat.opt)": [[290, "qat.opt.CombinatorialProblem", false]], "combinatorialresult (class in qat.opt.results)": [[302, "qat.opt.results.CombinatorialResult", false]], "comment() (qat.lang.program method)": [[268, "qat.lang.Program.comment", false]], "commonqpu (class in qat.core.qpu)": [[140, "qat.core.qpu.CommonQPU", false]], "compile() (qat.core.circuit method)": [[116, "qat.core.Circuit.compile", false]], "compile() (qat.core.job method)": [[120, "qat.core.Job.compile", false]], "compile() (qat.interop.openqasm.oqasmparser method)": [[69, "qat.interop.openqasm.OqasmParser.compile", false]], "compile() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.compile", false]], "compile() (qat.plugins.abstractplugin method)": [[329, "qat.plugins.AbstractPlugin.compile", false]], "compile() (qat.plugins.adaptvqeplugin method)": [[330, "qat.plugins.AdaptVQEPlugin.compile", false]], "compile() (qat.plugins.circuitinliner method)": [[331, "qat.plugins.CircuitInliner.compile", false]], "compile() (qat.plugins.costfunctionplugin method)": [[332, "qat.plugins.CostFunctionPlugin.compile", false]], "compile() (qat.plugins.display method)": [[333, "qat.plugins.Display.compile", false]], "compile() (qat.plugins.fusionplugin method)": [[334, "qat.plugins.FusionPlugin.compile", false]], "compile() (qat.plugins.gaterewriter method)": [[335, "qat.plugins.GateRewriter.compile", false]], "compile() (qat.plugins.gradientdescentoptimizer method)": [[336, "qat.plugins.GradientDescentOptimizer.compile", false]], "compile() (qat.plugins.initialmapping method)": [[337, "qat.plugins.InitialMapping.compile", false]], "compile() (qat.plugins.kakcompression method)": [[339, "qat.plugins.KAKCompression.compile", false]], "compile() (qat.plugins.lazysynthesis method)": [[340, "qat.plugins.LazySynthesis.compile", false]], "compile() (qat.plugins.multiplelaunchesanalyzer method)": [[341, "qat.plugins.MultipleLaunchesAnalyzer.compile", false]], "compile() (qat.plugins.nisqcompiler method)": [[342, "qat.plugins.NISQCompiler.compile", false]], "compile() (qat.plugins.nnizer method)": [[343, "qat.plugins.Nnizer.compile", false]], "compile() (qat.plugins.observablesplitter method)": [[344, "qat.plugins.ObservableSplitter.compile", false]], "compile() (qat.plugins.patternmanager method)": [[346, "qat.plugins.PatternManager.compile", false]], "compile() (qat.plugins.psominimizeplugin method)": [[347, "qat.plugins.PSOMinimizePlugin.compile", false]], "compile() (qat.plugins.quameleonplugin method)": [[348, "qat.plugins.QuameleonPlugin.compile", false]], "compile() (qat.plugins.remap method)": [[349, "qat.plugins.Remap.compile", false]], "compile() (qat.plugins.remoteplugin method)": [[350, "qat.plugins.RemotePlugin.compile", false]], "compile() (qat.plugins.scipyminimizeplugin method)": [[351, "qat.plugins.ScipyMinimizePlugin.compile", false]], "compile() (qat.plugins.seqoptim method)": [[352, "qat.plugins.SeqOptim.compile", false]], "compile() (qat.plugins.spsaminimizeplugin method)": [[353, "qat.plugins.SPSAMinimizePlugin.compile", false]], "compile() (qat.plugins.transformobservable method)": [[354, "qat.plugins.TransformObservable.compile", false]], "compile() (qat.plugins.zeronoiseextrapolator method)": [[355, "qat.plugins.ZeroNoiseExtrapolator.compile", false]], "compile_circuit() (qat.synthopline.clifford_normalizer.cliffordnormalizer method)": [[405, "qat.synthopline.clifford_normalizer.CliffordNormalizer.compile_circuit", false]], "compute() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.compute", false]], "compute_active_space_integrals() (in module qat.fermion.chemistry.ucc)": [[190, "qat.fermion.chemistry.ucc.compute_active_space_integrals", false]], "conjugate() (qat.lang.program method)": [[268, "qat.lang.Program.conjugate", false]], "conjugate_observable_tableau() (in module qat.synthopline.util)": [[407, "qat.synthopline.util.conjugate_observable_tableau", false]], "conjugate_with() (qat.synthopline.interface.weyloperator method)": [[421, "qat.synthopline.interface.WeylOperator.conjugate_with", false]], "constant_coeff (qat.core.observable attribute)": [[160, "qat.core.Observable.constant_coeff", false]], "constant_coeff (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.constant_coeff", false]], "constant_coeff (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.constant_coeff", false]], "constant_coeff (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.constant_coeff", false]], "constant_coeff (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.constant_coeff", false]], "constant_coeff (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.constant_coeff", false]], "construct_ucc_ansatz() (in module qat.fermion.chemistry.ucc)": [[191, "qat.fermion.chemistry.ucc.construct_ucc_ansatz", false]], "convert_density_mat_to_pauli_vec() (in module qat.quops.math_util)": [[375, "qat.quops.math_util.convert_density_mat_to_pauli_vec", false]], "convert_pauli_vec_to_density_mat() (in module qat.quops.math_util)": [[376, "qat.quops.math_util.convert_pauli_vec_to_density_mat", false]], "convert_to_h_integrals() (in module qat.fermion.chemistry.ucc)": [[192, "qat.fermion.chemistry.ucc.convert_to_h_integrals", false]], "copy() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.copy", false]], "copy() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.copy", false]], "copy() (qat.fermion.hamiltonians.spinhamiltonian method)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.copy", false]], "copy() (qat.pbo.var class method)": [[327, "qat.pbo.VAR.copy", false]], "costfunctionplugin (class in qat.plugins)": [[332, "qat.plugins.CostFunctionPlugin", false]], "count() (qat.core.circuit method)": [[116, "qat.core.Circuit.count", false]], "count_pattern() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.count_pattern", false]], "cover (qat.opt.results.vertexcoverresult property)": [[305, "qat.opt.results.VertexCoverResult.cover", false]], "cregister (class in qat.lang.aqasm.bits)": [[243, "qat.lang.AQASM.bits.CRegister", false]], "cuccaro_add() (in module qat.lang.aqasm.classarith)": [[259, "qat.lang.AQASM.classarith.cuccaro_add", false]], "cz_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.cz_left", false]], "cz_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.cz_right", false]], "dag() (qat.core.circuit method)": [[116, "qat.core.Circuit.dag", false]], "dag() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.dag", false]], "dag() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.dag", false]], "dag() (qat.fermion.hamiltonians.spinhamiltonian method)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.dag", false]], "dag() (qat.lang.aqasm.gates.paramgate method)": [[266, "qat.lang.AQASM.gates.ParamGate.dag", false]], "decode_rydberg() (qat.opt.combinatorialproblem class method)": [[290, "qat.opt.CombinatorialProblem.decode_rydberg", false]], "decode_rydberg() (qat.opt.ising class method)": [[293, "qat.opt.Ising.decode_rydberg", false]], "decode_rydberg() (qat.opt.mwis class method)": [[306, "qat.opt.MWIS.decode_rydberg", false]], "decode_rydberg() (qat.opt.qubo class method)": [[308, "qat.opt.QUBO.decode_rydberg", false]], "decode_rydberg_meta_data() (qat.opt.combinatorialproblem static method)": [[290, "qat.opt.CombinatorialProblem.decode_rydberg_meta_data", false]], "decode_rydberg_meta_data() (qat.opt.ising static method)": [[293, "qat.opt.Ising.decode_rydberg_meta_data", false]], "decode_rydberg_meta_data() (qat.opt.mwis static method)": [[306, "qat.opt.MWIS.decode_rydberg_meta_data", false]], "decode_rydberg_meta_data() (qat.opt.qubo static method)": [[308, "qat.opt.QUBO.decode_rydberg_meta_data", false]], "default_gate_set() (in module qat.core.circuit_builder.matrix_util)": [[126, "qat.core.circuit_builder.matrix_util.default_gate_set", false]], "defaultgatesspecification (class in qat.hardware)": [[232, "qat.hardware.DefaultGatesSpecification", false]], "defaulthardwaremodel (class in qat.hardware)": [[233, "qat.hardware.DefaultHardwareModel", false]], "depth() (qat.core.circuit method)": [[116, "qat.core.Circuit.depth", false]], "differentiate() (qat.core.job method)": [[120, "qat.core.Job.differentiate", false]], "differentiate() (qat.core.variable method)": [[170, "qat.core.Variable.differentiate", false]], "differentiate() (qat.core.variables.arithexpression method)": [[147, "qat.core.variables.ArithExpression.differentiate", false]], "dim (qat.synthopline.interface.operatortableau property)": [[416, "qat.synthopline.interface.OperatorTableau.dim", false]], "display (class in qat.plugins)": [[333, "qat.plugins.Display", false]], "display() (in module qat.core.console)": [[117, "qat.core.console.display", false]], "display() (qat.core.circuit method)": [[116, "qat.core.Circuit.display", false]], "display() (qat.core.result method)": [[163, "qat.core.Result.display", false]], "display() (qat.lang.aqasm.gates.paramgate method)": [[266, "qat.lang.AQASM.gates.ParamGate.display", false]], "display() (qat.lang.program method)": [[268, "qat.lang.Program.display", false]], "display() (qat.opt.results.graphpartitioningresult method)": [[303, "qat.opt.results.GraphPartitioningResult.display", false]], "display() (qat.opt.results.kcliqueresult method)": [[304, "qat.opt.results.KCliqueResult.display", false]], "display() (qat.opt.results.vertexcoverresult method)": [[305, "qat.opt.results.VertexCoverResult.display", false]], "do_post_processing() (qat.plugins.abstractplugin method)": [[329, "qat.plugins.AbstractPlugin.do_post_processing", false]], "dump() (qat.core.batch method)": [[114, "qat.core.Batch.dump", false]], "dump() (qat.core.batchresult method)": [[115, "qat.core.BatchResult.dump", false]], "dump() (qat.core.circuit method)": [[116, "qat.core.Circuit.dump", false]], "dump() (qat.core.hardwarespecs method)": [[119, "qat.core.HardwareSpecs.dump", false]], "dump() (qat.core.job method)": [[120, "qat.core.Job.dump", false]], "dump() (qat.core.observable method)": [[160, "qat.core.Observable.dump", false]], "dump() (qat.core.result method)": [[163, "qat.core.Result.dump", false]], "dump() (qat.core.schedule method)": [[165, "qat.core.Schedule.dump", false]], "dump() (qat.core.topology method)": [[168, "qat.core.Topology.dump", false]], "dump() (qat.interop.qiskit.qiskitjob method)": [[81, "qat.interop.qiskit.QiskitJob.dump", false]], "dump() (qat.opt.ising method)": [[293, "qat.opt.Ising.dump", false]], "dump() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.dump", false]], "durationmetric (class in qat.nnize.metrics)": [[283, "qat.nnize.metrics.DurationMetric", false]], "eagerstrategy (class in qat.fusion.strategies)": [[220, "qat.fusion.strategies.EagerStrategy", false]], "electronicstructurehamiltonian (class in qat.fermion.hamiltonians)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian", false]], "empty() (qat.core.circuit static method)": [[116, "qat.core.Circuit.empty", false]], "estimate_resources_for_batch() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.estimate_resources_for_batch", false]], "estimator (class in qat.qiskit)": [[357, "qat.qiskit.Estimator", false]], "eval() (qat.core.circuit method)": [[116, "qat.core.Circuit.eval", false]], "eval() (qat.core.job method)": [[120, "qat.core.Job.eval", false]], "eval() (qat.pbo.var method)": [[327, "qat.pbo.VAR.eval", false]], "evaluate() (in module qat.core.formula_eval)": [[118, "qat.core.formula_eval.evaluate", false]], "evaluate() (qat.lang.aqasm.qbool.qbool method)": [[271, "qat.lang.AQASM.qbool.QBool.evaluate", false]], "evaluate() (qat.lang.aqasm.qbool.qboolarray method)": [[272, "qat.lang.AQASM.qbool.QBoolArray.evaluate", false]], "evaluate() (qat.lang.aqasm.qbool.qclause method)": [[273, "qat.lang.AQASM.qbool.QClause.evaluate", false]], "evaluate() (qat.lang.aqasm.qint.qarithexp method)": [[269, "qat.lang.AQASM.qint.QArithExp.evaluate", false]], "evaluate() (qat.lang.aqasm.qint.qcompexp method)": [[274, "qat.lang.AQASM.qint.QCompExp.evaluate", false]], "evaluate() (qat.lang.aqasm.qint.qint method)": [[276, "qat.lang.AQASM.qint.QInt.evaluate", false]], "evaluate() (qat.opt.boolexpr.clause method)": [[289, "qat.opt.boolexpr.Clause.evaluate", false]], "evaluate() (qat.opt.boolexpr.var method)": [[310, "qat.opt.boolexpr.Var.evaluate", false]], "evaluate() (qat.plugins.optimizer method)": [[345, "qat.plugins.Optimizer.evaluate", false]], "exception_only (class in qat.core.exceptions_utils)": [[131, "qat.core.exceptions_utils.exception_only", false]], "execute() (qat.core.application.application method)": [[123, "qat.core.application.Application.execute", false]], "execute() (qat.plugins.junction method)": [[338, "qat.plugins.Junction.execute", false]], "export() (qat.lang.program method)": [[268, "qat.lang.Program.export", false]], "extend() (qat.core.batchresult method)": [[115, "qat.core.BatchResult.extend", false]], "extract_j_and_h_from_obs() (in module qat.simulated_annealing.service)": [[364, "qat.simulated_annealing.service.extract_j_and_h_from_obs", false]], "extract_linear_operator() (in module qat.synthopline.linear_synthesis)": [[408, "qat.synthopline.linear_synthesis.extract_linear_operator", false]], "extract_pauli_rotations() (in module qat.synthopline.util)": [[409, "qat.synthopline.util.extract_pauli_rotations", false]], "extract_phase_polynomial() (in module qat.synthopline.phase_polynomials)": [[410, "qat.synthopline.phase_polynomials.extract_phase_polynomial", false]], "fermionhamiltonian (class in qat.fermion.hamiltonians)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian", false]], "file_extension (qat.core.batch property)": [[114, "qat.core.Batch.file_extension", false]], "file_extension (qat.core.batchresult property)": [[115, "qat.core.BatchResult.file_extension", false]], "file_extension (qat.core.circuit property)": [[116, "qat.core.Circuit.file_extension", false]], "file_extension (qat.core.hardwarespecs property)": [[119, "qat.core.HardwareSpecs.file_extension", false]], "file_extension (qat.core.job property)": [[120, "qat.core.Job.file_extension", false]], "file_extension (qat.core.result property)": [[163, "qat.core.Result.file_extension", false]], "file_extension (qat.core.topology property)": [[168, "qat.core.Topology.file_extension", false]], "fill_matrices() (qat.core.circuit method)": [[116, "qat.core.Circuit.fill_matrices", false]], "find_pattern() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.find_pattern", false]], "free_ancillae() (qat.lang.program method)": [[268, "qat.lang.Program.free_ancillae", false]], "free_ancillae() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.free_ancillae", false]], "frequency_mapping() (in module qat.synthopline.initial_mapping)": [[411, "qat.synthopline.initial_mapping.frequency_mapping", false]], "from_bytes() (qat.core.batch class method)": [[114, "qat.core.Batch.from_bytes", false]], "from_bytes() (qat.core.circuit class method)": [[116, "qat.core.Circuit.from_bytes", false]], "from_bytes() (qat.core.job class method)": [[120, "qat.core.Job.from_bytes", false]], "from_bytes() (qat.core.result class method)": [[163, "qat.core.Result.from_bytes", false]], "from_bytes() (qat.core.sample class method)": [[164, "qat.core.Sample.from_bytes", false]], "from_bytes() (qat.core.topology class method)": [[168, "qat.core.Topology.from_bytes", false]], "from_nx() (qat.core.topology static method)": [[168, "qat.core.Topology.from_nx", false]], "from_string() (qat.core.variables.arithexpression static method)": [[147, "qat.core.variables.ArithExpression.from_string", false]], "from_thrift() (qat.core.batch class method)": [[114, "qat.core.Batch.from_thrift", false]], "from_thrift() (qat.core.batchresult class method)": [[115, "qat.core.BatchResult.from_thrift", false]], "from_thrift() (qat.core.circuit class method)": [[116, "qat.core.Circuit.from_thrift", false]], "from_thrift() (qat.core.hardwarespecs class method)": [[119, "qat.core.HardwareSpecs.from_thrift", false]], "from_thrift() (qat.core.job class method)": [[120, "qat.core.Job.from_thrift", false]], "from_thrift() (qat.core.result class method)": [[163, "qat.core.Result.from_thrift", false]], "from_thrift() (qat.core.sample class method)": [[164, "qat.core.Sample.from_thrift", false]], "from_thrift() (qat.core.topology class method)": [[168, "qat.core.Topology.from_thrift", false]], "from_thrift() (qat.opt.ising class method)": [[293, "qat.opt.Ising.from_thrift", false]], "from_thrift() (qat.opt.mwis class method)": [[306, "qat.opt.MWIS.from_thrift", false]], "func (qat.core.parameter property)": [[161, "qat.core.Parameter.func", false]], "fusionplugin (class in qat.plugins)": [[334, "qat.plugins.FusionPlugin", false]], "gate (class in qat.lang.aqasm.gates)": [[244, "qat.lang.AQASM.gates.Gate", false]], "gate_noise (qat.hardware.defaulthardwaremodel attribute)": [[233, "qat.hardware.DefaultHardwareModel.gate_noise", false]], "gate_noise (qat.hardware.hardwaremodel attribute)": [[235, "qat.hardware.HardwareModel.gate_noise", false]], "gate_set (qat.core.circuit property)": [[116, "qat.core.Circuit.gate_set", false]], "gate_times (qat.hardware.defaultgatesspecification attribute)": [[232, "qat.hardware.DefaultGatesSpecification.gate_times", false]], "gate_times (qat.hardware.gatesspecification attribute)": [[234, "qat.hardware.GatesSpecification.gate_times", false]], "gatename (class in qat.pbo)": [[314, "qat.pbo.GateName", false]], "gaterewriter (class in qat.plugins)": [[335, "qat.plugins.GateRewriter", false]], "gates_specification (qat.hardware.defaulthardwaremodel attribute)": [[233, "qat.hardware.DefaultHardwareModel.gates_specification", false]], "gates_specification (qat.hardware.hardwaremodel attribute)": [[235, "qat.hardware.HardwareModel.gates_specification", false]], "gateset (class in qat.core.gate_set)": [[136, "qat.core.gate_set.GateSet", false]], "gatesignature (class in qat.core.gate_set)": [[137, "qat.core.gate_set.GateSignature", false]], "gatesspecification (class in qat.hardware)": [[234, "qat.hardware.GatesSpecification", false]], "gatesyntaxredefinition (class in qat.core.gate_set)": [[138, "qat.core.gate_set.GateSyntaxRedefinition", false]], "generate() (qat.generators.abstractgenerator method)": [[223, "qat.generators.AbstractGenerator.generate", false]], "generate() (qat.generators.combinatorialoptimizergenerator method)": [[224, "qat.generators.CombinatorialOptimizerGenerator.generate", false]], "generate() (qat.generators.graphcolouringgenerator method)": [[225, "qat.generators.GraphColouringGenerator.generate", false]], "generate() (qat.generators.graphpartitioninggenerator method)": [[226, "qat.generators.GraphPartitioningGenerator.generate", false]], "generate() (qat.generators.kcliquegenerator method)": [[227, "qat.generators.KCliqueGenerator.generate", false]], "generate() (qat.generators.maxcutgenerator method)": [[228, "qat.generators.MaxCutGenerator.generate", false]], "generate() (qat.generators.remotebatchgenerator method)": [[229, "qat.generators.RemoteBatchGenerator.generate", false]], "generate() (qat.generators.vertexcovergenerator method)": [[230, "qat.generators.VertexCoverGenerator.generate", false]], "generate_gate_set() (in module qat.lang.aqasm.misc)": [[245, "qat.lang.AQASM.misc.generate_gate_set", false]], "generate_noise() (qat.core.parameter method)": [[161, "qat.core.Parameter.generate_noise", false]], "generate_random_observable() (in module qat.synthopline.pauli_synth)": [[412, "qat.synthopline.pauli_synth.generate_random_observable", false]], "generate_trotter_ansatz() (in module qat.synthopline)": [[413, "qat.synthopline.generate_trotter_ansatz", false]], "generator_exception_only() (in module qat.core.exceptions_utils)": [[132, "qat.core.exceptions_utils.generator_exception_only", false]], "get_average_process_fidelity() (in module qat.quops.metrics)": [[377, "qat.quops.metrics.get_average_process_fidelity", false]], "get_best_index() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.get_best_index", false]], "get_best_index() (qat.nnize.metrics.quantumcostmetric method)": [[284, "qat.nnize.metrics.QuantumCostMetric.get_best_index", false]], "get_best_parameters() (qat.opt.bilp method)": [[287, "qat.opt.BILP.get_best_parameters", false]], "get_best_parameters() (qat.opt.graphcolouring method)": [[291, "qat.opt.GraphColouring.get_best_parameters", false]], "get_best_parameters() (qat.opt.graphpartitioning method)": [[292, "qat.opt.GraphPartitioning.get_best_parameters", false]], "get_best_parameters() (qat.opt.ising method)": [[293, "qat.opt.Ising.get_best_parameters", false]], "get_best_parameters() (qat.opt.kclique method)": [[294, "qat.opt.KClique.get_best_parameters", false]], "get_best_parameters() (qat.opt.maxcut method)": [[295, "qat.opt.MaxCut.get_best_parameters", false]], "get_best_parameters() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.get_best_parameters", false]], "get_best_parameters() (qat.opt.numberpartitioning method)": [[307, "qat.opt.NumberPartitioning.get_best_parameters", false]], "get_best_parameters() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.get_best_parameters", false]], "get_best_parameters() (qat.opt.vertexcover method)": [[311, "qat.opt.VertexCover.get_best_parameters", false]], "get_circuit() (qat.core.gate_set.gatesignature method)": [[137, "qat.core.gate_set.GateSignature.get_circuit", false]], "get_cluster_ops() (in module qat.fermion.chemistry.ucc)": [[195, "qat.fermion.chemistry.ucc.get_cluster_ops", false]], "get_current_qpu() (in module qat.qpus)": [[366, "qat.qpus.get_current_qpu", false]], "get_default_qpu() (in module qat.qpus)": [[367, "qat.qpus.get_default_qpu", false]], "get_diamond_norm() (in module qat.quops.metrics)": [[378, "qat.quops.metrics.get_diamond_norm", false]], "get_electronic_hamiltonian() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.get_electronic_hamiltonian", false]], "get_entanglement_process_fidelity() (in module qat.quops.metrics)": [[379, "qat.quops.metrics.get_entanglement_process_fidelity", false]], "get_euler_angles() (in module qat.pbo.decompositions.decompositions)": [[320, "qat.pbo.decompositions.decompositions.get_euler_angles", false]], "get_free_ancillae() (qat.lang.program method)": [[268, "qat.lang.Program.get_free_ancillae", false]], "get_free_ancillae() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.get_free_ancillae", false]], "get_gate_time() (qat.hardware.defaultgatesspecification method)": [[232, "qat.hardware.DefaultGatesSpecification.get_gate_time", false]], "get_gate_time() (qat.hardware.gatesspecification method)": [[234, "qat.hardware.GatesSpecification.get_gate_time", false]], "get_hf_ket() (in module qat.fermion.chemistry.ucc)": [[196, "qat.fermion.chemistry.ucc.get_hf_ket", false]], "get_j_h_and_offset() (qat.opt.ising method)": [[293, "qat.opt.Ising.get_j_h_and_offset", false]], "get_j_h_and_offset() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.get_j_h_and_offset", false]], "get_matrix() (qat.core.gate_set.gatesignature method)": [[137, "qat.core.gate_set.GateSignature.get_matrix", false]], "get_matrix() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.get_matrix", false]], "get_matrix() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.get_matrix", false]], "get_matrix() (qat.fermion.hamiltonians.spinhamiltonian method)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.get_matrix", false]], "get_noise() (qat.core.parameter method)": [[161, "qat.core.Parameter.get_noise", false]], "get_noisy_qpu() (in module qat.qpus)": [[368, "qat.qpus.get_noisy_qpu", false]], "get_observable() (qat.opt.circuit_generator.circuitgenerator method)": [[288, "qat.opt.circuit_generator.CircuitGenerator.get_observable", false]], "get_observable() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.get_observable", false]], "get_observable() (qat.opt.ising method)": [[293, "qat.opt.Ising.get_observable", false]], "get_observable() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.get_observable", false]], "get_observable() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.get_observable", false]], "get_observable() (qat.opt.schedule_generator.schedulegenerator method)": [[309, "qat.opt.schedule_generator.ScheduleGenerator.get_observable", false]], "get_param_generator() (in module qat.core.circuit_builder.matrix_util)": [[127, "qat.core.circuit_builder.matrix_util.get_param_generator", false]], "get_predef_generator() (in module qat.core.circuit_builder.matrix_util)": [[128, "qat.core.circuit_builder.matrix_util.get_predef_generator", false]], "get_process_distance() (in module qat.quops.metrics)": [[380, "qat.quops.metrics.get_process_distance", false]], "get_q_and_offset() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.get_q_and_offset", false]], "get_quantum_channel() (qat.hardware.defaultgatesspecification method)": [[232, "qat.hardware.DefaultGatesSpecification.get_quantum_channel", false]], "get_quantum_channel() (qat.hardware.gatesspecification method)": [[234, "qat.hardware.GatesSpecification.get_quantum_channel", false]], "get_routine() (qat.lang.models.kptree method)": [[248, "qat.lang.models.KPTree.get_routine", false]], "get_specs() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.get_specs", false]], "get_state_fidelity() (in module qat.quops.metrics)": [[381, "qat.quops.metrics.get_state_fidelity", false]], "get_terms_obs() (qat.opt.boolexpr.clause method)": [[289, "qat.opt.boolexpr.Clause.get_terms_obs", false]], "get_terms_obs() (qat.opt.boolexpr.var method)": [[310, "qat.opt.boolexpr.Var.get_terms_obs", false]], "get_trace_distance() (in module qat.quops.metrics)": [[382, "qat.quops.metrics.get_trace_distance", false]], "get_variables() (qat.core.batch method)": [[114, "qat.core.Batch.get_variables", false]], "get_variables() (qat.core.circuit method)": [[116, "qat.core.Circuit.get_variables", false]], "get_variables() (qat.core.job method)": [[120, "qat.core.Job.get_variables", false]], "get_variables() (qat.core.schedule method)": [[165, "qat.core.Schedule.get_variables", false]], "get_variables() (qat.core.variable method)": [[170, "qat.core.Variable.get_variables", false]], "get_variables() (qat.core.variables.arithexpression method)": [[147, "qat.core.variables.ArithExpression.get_variables", false]], "get_variables() (qat.lang.aqasm.gates.paramgate method)": [[266, "qat.lang.AQASM.gates.ParamGate.get_variables", false]], "get_variables() (qat.opt.boolexpr.clause method)": [[289, "qat.opt.boolexpr.Clause.get_variables", false]], "get_variables() (qat.opt.boolexpr.var method)": [[310, "qat.opt.boolexpr.Var.get_variables", false]], "gradient() (qat.core.job method)": [[120, "qat.core.Job.gradient", false]], "gradientdescentoptimizer (class in qat.plugins)": [[336, "qat.plugins.GradientDescentOptimizer", false]], "graph (qat.opt.mwis attribute)": [[306, "qat.opt.MWIS.graph", false]], "graphcircuit (class in qat.pbo)": [[315, "qat.pbo.GraphCircuit", false]], "graphcolouring (class in qat.opt)": [[291, "qat.opt.GraphColouring", false]], "graphcolouringgenerator (class in qat.generators)": [[225, "qat.generators.GraphColouringGenerator", false]], "graphpartitioning (class in qat.opt)": [[292, "qat.opt.GraphPartitioning", false]], "graphpartitioninggenerator (class in qat.generators)": [[226, "qat.generators.GraphPartitioningGenerator", false]], "graphpartitioningresult (class in qat.opt.results)": [[303, "qat.opt.results.GraphPartitioningResult", false]], "greedy_mapping() (in module qat.synthopline.initial_mapping)": [[414, "qat.synthopline.initial_mapping.greedy_mapping", false]], "griddevice (class in qat.devices)": [[175, "qat.devices.GridDevice", false]], "grover_diffusion() (in module qat.lang.algorithms.amplification)": [[246, "qat.lang.algorithms.amplification.grover_diffusion", false]], "guess_init_params() (in module qat.fermion.chemistry.ucc)": [[197, "qat.fermion.chemistry.ucc.guess_init_params", false]], "h_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.h_left", false]], "h_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.h_right", false]], "hamiltonian (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.hamiltonian", false]], "hardwaremodel (class in qat.hardware)": [[235, "qat.hardware.HardwareModel", false]], "hardwarespecs (class in qat.core)": [[119, "qat.core.HardwareSpecs", false]], "householder() (in module qat.lang.algorithms.amplification)": [[247, "qat.lang.algorithms.amplification.householder", false]], "hpq (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpq", false]], "hpqrs (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpqrs", false]], "idle_noise (qat.hardware.defaulthardwaremodel attribute)": [[233, "qat.hardware.DefaultHardwareModel.idle_noise", false]], "idle_noise (qat.hardware.hardwaremodel attribute)": [[235, "qat.hardware.HardwareModel.idle_noise", false]], "independentaqo (class in qat.opt.mixing_factory)": [[298, "qat.opt.mixing_factory.IndependentAQO", false]], "index (qat.opt.boolexpr.var attribute)": [[310, "qat.opt.boolexpr.Var.index", false]], "init() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.init", false]], "init() (qat.nnize.metrics.quantumcostmetric method)": [[284, "qat.nnize.metrics.QuantumCostMetric.init", false]], "initialmapping (class in qat.plugins)": [[337, "qat.plugins.InitialMapping", false]], "initialstatebuilder (class in qat.opt.mixing_factory)": [[299, "qat.opt.mixing_factory.InitialStateBuilder", false]], "inject_initial_state() (qat.opt.mixing_factory.independentaqo method)": [[298, "qat.opt.mixing_factory.IndependentAQO.inject_initial_state", false]], "inject_initial_state() (qat.opt.mixing_factory.initialstatebuilder method)": [[299, "qat.opt.mixing_factory.InitialStateBuilder.inject_initial_state", false]], "inject_initial_state() (qat.opt.mixing_factory.simpleinitialstate method)": [[300, "qat.opt.mixing_factory.SimpleInitialState.inject_initial_state", false]], "insert_gate() (qat.core.circuit method)": [[116, "qat.core.Circuit.insert_gate", false]], "int (qat.core.wrappers.result.state property)": [[166, "qat.core.wrappers.result.State.int", false]], "integer_to_spins() (in module qat.core.spins)": [[142, "qat.core.spins.integer_to_spins", false]], "intermediatemeasurement (class in qat.comm.shared.ttypes)": [[108, "qat.comm.shared.ttypes.IntermediateMeasurement", false]], "inverse() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.inverse", false]], "ions_decomposition() (in module qat.pbo.decompositions)": [[321, "qat.pbo.decompositions.ions_decomposition", false]], "is_completely_positive() (in module qat.quops)": [[383, "qat.quops.is_completely_positive", false]], "is_noiseless (qat.hardware.defaultgatesspecification attribute)": [[232, "qat.hardware.DefaultGatesSpecification.is_noiseless", false]], "is_noiseless (qat.hardware.gatesspecification attribute)": [[234, "qat.hardware.GatesSpecification.is_noiseless", false]], "is_trace_preserving() (in module qat.quops)": [[384, "qat.quops.is_trace_preserving", false]], "is_trace_reducing() (in module qat.quops)": [[385, "qat.quops.is_trace_reducing", false]], "is_unital() (in module qat.quops)": [[386, "qat.quops.is_unital", false]], "ising (class in qat.opt)": [[293, "qat.opt.Ising", false]], "ising (qat.core.observable attribute)": [[160, "qat.core.Observable.ising", false]], "iterate_simple() (qat.core.circuit method)": [[116, "qat.core.Circuit.iterate_simple", false]], "j_coupling_matrix (qat.opt.ising property)": [[293, "qat.opt.Ising.j_coupling_matrix", false]], "j_coupling_matrix (qat.opt.mwis property)": [[306, "qat.opt.MWIS.j_coupling_matrix", false]], "job (class in qat.core)": [[120, "qat.core.Job", false]], "job_id() (qat.interop.qiskit.qiskitjob method)": [[81, "qat.interop.qiskit.QiskitJob.job_id", false]], "jump_operators (qat.hardware.defaulthardwaremodel attribute)": [[233, "qat.hardware.DefaultHardwareModel.jump_operators", false]], "jump_operators (qat.hardware.hardwaremodel attribute)": [[235, "qat.hardware.HardwareModel.jump_operators", false]], "junction (class in qat.plugins)": [[338, "qat.plugins.Junction", false]], "kakcompression (class in qat.plugins)": [[339, "qat.plugins.KAKCompression", false]], "kclique (class in qat.opt)": [[294, "qat.opt.KClique", false]], "kcliquegenerator (class in qat.generators)": [[227, "qat.generators.KCliqueGenerator", false]], "kcliqueresult (class in qat.opt.results)": [[304, "qat.opt.results.KCliqueResult", false]], "kptree (class in qat.lang.models)": [[248, "qat.lang.models.KPTree", false]], "kraus_operators (qat.quops.quantumchannelkraus attribute)": [[402, "qat.quops.QuantumChannelKraus.kraus_operators", false]], "kraus_rank() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.kraus_rank", false]], "lazysynthesis (class in qat.plugins)": [[340, "qat.plugins.LazySynthesis", false]], "len() (qat.pbo.abstractregister method)": [[313, "qat.pbo.AbstractRegister.len", false]], "linear_operator_synthesis() (in module qat.synthopline)": [[415, "qat.synthopline.linear_operator_synthesis", false]], "linedevice (class in qat.devices)": [[183, "qat.devices.LineDevice", false]], "link() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.link", false]], "link_gates() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.link_gates", false]], "link_matrices() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.link_matrices", false]], "linker (class in qat.lang.linking)": [[249, "qat.lang.linking.Linker", false]], "list_decompositions() (in module qat.pbo.kak)": [[316, "qat.pbo.kak.list_decompositions", false]], "load() (qat.core.batch class method)": [[114, "qat.core.Batch.load", false]], "load() (qat.core.batchresult class method)": [[115, "qat.core.BatchResult.load", false]], "load() (qat.core.circuit class method)": [[116, "qat.core.Circuit.load", false]], "load() (qat.core.hardwarespecs class method)": [[119, "qat.core.HardwareSpecs.load", false]], "load() (qat.core.job class method)": [[120, "qat.core.Job.load", false]], "load() (qat.core.observable class method)": [[160, "qat.core.Observable.load", false]], "load() (qat.core.result class method)": [[163, "qat.core.Result.load", false]], "load() (qat.core.schedule class method)": [[165, "qat.core.Schedule.load", false]], "load() (qat.core.topology class method)": [[168, "qat.core.Topology.load", false]], "load() (qat.opt.ising class method)": [[293, "qat.opt.Ising.load", false]], "load() (qat.opt.mwis class method)": [[306, "qat.opt.MWIS.load", false]], "load_circuit() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.load_circuit", false]], "load_state_vector_from_bin() (in module qat.core.util)": [[121, "qat.core.util.load_state_vector_from_bin", false]], "logic() (qat.lang.program method)": [[268, "qat.lang.Program.logic", false]], "lsb_int (qat.core.wrappers.result.state property)": [[166, "qat.core.wrappers.result.State.lsb_int", false]], "magnetic_field_h (qat.opt.ising property)": [[293, "qat.opt.Ising.magnetic_field_h", false]], "magnetic_field_h (qat.opt.mwis property)": [[306, "qat.opt.MWIS.magnetic_field_h", false]], "make_anderson_model() (in module qat.fermion.hamiltonians)": [[198, "qat.fermion.hamiltonians.make_anderson_model", false]], "make_avg_fid_equiv_depol_channel() (in module qat.quops)": [[387, "qat.quops.make_avg_fid_equiv_depol_channel", false]], "make_compressed_ldca_circ() (in module qat.fermion.circuits)": [[199, "qat.fermion.circuits.make_compressed_ldca_circ", false]], "make_depolarizing_channel() (in module qat.quops)": [[388, "qat.quops.make_depolarizing_channel", false]], "make_depolarizing_hardware_model() (in module qat.hardware)": [[236, "qat.hardware.make_depolarizing_hardware_model", false]], "make_embedded_model() (in module qat.fermion.hamiltonians)": [[200, "qat.fermion.hamiltonians.make_embedded_model", false]], "make_general_hwe_circ() (in module qat.fermion.circuits)": [[201, "qat.fermion.circuits.make_general_hwe_circ", false]], "make_generalized_amplitude_damping() (in module qat.quops)": [[389, "qat.quops.make_generalized_amplitude_damping", false]], "make_hubbard_model() (in module qat.fermion.hamiltonians)": [[202, "qat.fermion.hamiltonians.make_hubbard_model", false]], "make_ldca_circ() (in module qat.fermion.circuits)": [[203, "qat.fermion.circuits.make_ldca_circ", false]], "make_mr_circ() (in module qat.fermion.circuits)": [[204, "qat.fermion.circuits.make_mr_circ", false]], "make_mrep_circ() (in module qat.fermion.circuits)": [[205, "qat.fermion.circuits.make_mrep_circ", false]], "make_pauli_matrix_basis() (in module qat.quops.math_util)": [[390, "qat.quops.math_util.make_pauli_matrix_basis", false]], "make_shallow_circ() (in module qat.fermion.circuits)": [[206, "qat.fermion.circuits.make_shallow_circ", false]], "make_standard_matrix_basis() (in module qat.quops.math_util)": [[391, "qat.quops.math_util.make_standard_matrix_basis", false]], "make_standard_vector_basis() (in module qat.quops.math_util)": [[392, "qat.quops.math_util.make_standard_vector_basis", false]], "make_trotterisation_routine() (in module qat.fermion.trotterisation)": [[207, "qat.fermion.trotterisation.make_trotterisation_routine", false]], "mat2nparray() (in module qat.pylinalg.simulator)": [[87, "qat.pylinalg.simulator.mat2nparray", false]], "matrix (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.matrix", false]], "matrix (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.matrix", false]], "matrix (qat.quops.quantumchannelchi attribute)": [[400, "qat.quops.QuantumChannelChi.matrix", false]], "matrix (qat.quops.quantumchannelchoi attribute)": [[401, "qat.quops.QuantumChannelChoi.matrix", false]], "matrix (qat.quops.quantumchannelptm property)": [[403, "qat.quops.QuantumChannelPTM.matrix", false]], "matrix_basis (qat.quops.quantumchannelchi attribute)": [[400, "qat.quops.QuantumChannelChi.matrix_basis", false]], "maxcut (class in qat.opt)": [[295, "qat.opt.MaxCut", false]], "maxcutgenerator (class in qat.generators)": [[228, "qat.generators.MaxCutGenerator", false]], "meas (qat.hardware.defaultgatesspecification attribute)": [[232, "qat.hardware.DefaultGatesSpecification.meas", false]], "meas (qat.hardware.gatesspecification attribute)": [[234, "qat.hardware.GatesSpecification.meas", false]], "measure() (in module qat.pylinalg.simulator)": [[88, "qat.pylinalg.simulator.measure", false]], "measure() (qat.lang.program method)": [[268, "qat.lang.Program.measure", false]], "minimize_idle_time() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.minimize_idle_time", false]], "minimize_overall_time() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.minimize_overall_time", false]], "mixingfactory (class in qat.opt)": [[296, "qat.opt.MixingFactory", false]], "modular_exp() (in module qat.lang.aqasm.arithmetic)": [[253, "qat.lang.AQASM.arithmetic.modular_exp", false]], "module": [[63, "module-qat", false], [64, "module-qat.interop", false], [65, "module-qat.interop.cirq", false], [68, "module-qat.interop.openqasm", false], [70, "module-qat.interop.projectq", false], [73, "module-qat.interop.pyquil", false], [77, "module-qat.interop.qiskit", false], [85, "module-qat.pylinalg", false], [86, "module-qat.pylinalg.simulator", false], [93, "module-qat.comm", false], [94, "module-qat.comm.datamodel", false], [97, "module-qat.comm.exceptions", false], [102, "module-qat.comm.resource", false], [107, "module-qat.comm.shared", false], [110, "module-qat.core", false], [122, "module-qat.core.application", false], [125, "module-qat.core.circuit_builder", false], [130, "module-qat.core.exceptions_utils", false], [135, "module-qat.core.gate_set", false], [139, "module-qat.core.qpu", false], [141, "module-qat.core.spins", false], [144, "module-qat.core.variables", false], [172, "module-qat.devices", false], [188, "module-qat.fermion", false], [188, "module-qat.fermion.chemistry", false], [188, "module-qat.fermion.chemistry.qse", false], [188, "module-qat.fermion.chemistry.ucc", false], [188, "module-qat.fermion.circuits", false], [188, "module-qat.fermion.hamiltonians", false], [188, "module-qat.fermion.phase_estimation", false], [188, "module-qat.fermion.transforms", false], [218, "module-qat.fusion", false], [222, "module-qat.generators", false], [231, "module-qat.hardware", false], [237, "module-qat.lang", false], [237, "module-qat.lang.algorithms", false], [250, "module-qat.lang.AQASM.arithmetic", false], [256, "module-qat.lang.AQASM.classarith", false], [260, "module-qat.lang.AQASM.qftarith", false], [282, "module-qat.nnize", false], [285, "module-qat.opt", false], [297, "module-qat.opt.mixing_factory", false], [301, "module-qat.opt.results", false], [312, "module-qat.pbo", false], [317, "module-qat.pbo.collections", false], [319, "module-qat.pbo.decompositions", false], [328, "module-qat.plugins", false], [356, "module-qat.qiskit", false], [361, "module-qat.qpus", false], [372, "module-qat.quops", false], [372, "module-qat.quops.metrics", false], [404, "module-qat.synthopline", false]], "molecularhamiltonian (class in qat.fermion.chemistry.wrapper)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian", false]], "moleculeinfo (class in qat.fermion.chemistry.wrapper)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo", false]], "mult() (in module qat.lang.aqasm.qftarith)": [[263, "qat.lang.AQASM.qftarith.mult", false]], "mult_const() (in module qat.lang.aqasm.arithmetic)": [[254, "qat.lang.AQASM.arithmetic.mult_const", false]], "mult_const() (in module qat.lang.aqasm.qftarith)": [[264, "qat.lang.AQASM.qftarith.mult_const", false]], "mult_const_mod() (in module qat.lang.aqasm.arithmetic)": [[255, "qat.lang.AQASM.arithmetic.mult_const_mod", false]], "multikron() (in module qat.quops.math_util)": [[393, "qat.quops.math_util.multikron", false]], "multiplelaunchesanalyzer (class in qat.plugins)": [[341, "qat.plugins.MultipleLaunchesAnalyzer", false]], "multiply_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.multiply_right", false]], "mwis (class in qat.opt)": [[306, "qat.opt.MWIS", false]], "n_electrons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.n_electrons", false]], "naivestrategy (class in qat.fusion.strategies)": [[221, "qat.fusion.strategies.NaiveStrategy", false]], "name (qat.quops.parametricamplitudedamping attribute)": [[394, "qat.quops.ParametricAmplitudeDamping.name", false]], "name (qat.quops.parametricpuredephasing attribute)": [[396, "qat.quops.ParametricPureDephasing.name", false]], "name (qat.quops.quantumchannelchi attribute)": [[400, "qat.quops.QuantumChannelChi.name", false]], "name (qat.quops.quantumchannelchoi attribute)": [[401, "qat.quops.QuantumChannelChoi.name", false]], "name (qat.quops.quantumchannelkraus attribute)": [[402, "qat.quops.QuantumChannelKraus.name", false]], "name (qat.quops.quantumchannelptm attribute)": [[403, "qat.quops.QuantumChannelPTM.name", false]], "nbctrls (qat.quops.quantumchannelkraus attribute)": [[402, "qat.quops.QuantumChannelKraus.nbctrls", false]], "nbqbits (qat.core.hardwarespecs property)": [[119, "qat.core.HardwareSpecs.nbqbits", false]], "nbqbits (qat.core.observable attribute)": [[160, "qat.core.Observable.nbqbits", false]], "nbqbits (qat.core.topology property)": [[168, "qat.core.Topology.nbqbits", false]], "nbqbits (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.nbqbits", false]], "nbqbits (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.nbqbits", false]], "neg_clause() (qat.opt.boolexpr.clause static method)": [[289, "qat.opt.boolexpr.Clause.neg_clause", false]], "new_group() (qat.plugins.patternmanager method)": [[346, "qat.plugins.PatternManager.new_group", false]], "new_var() (qat.lang.program method)": [[268, "qat.lang.Program.new_var", false]], "new_var() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.new_var", false]], "new_vars() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.new_vars", false]], "new_wires() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.new_wires", false]], "nisqcompiler (class in qat.plugins)": [[342, "qat.plugins.NISQCompiler", false]], "nnizer (class in qat.plugins)": [[343, "qat.plugins.Nnizer", false]], "nodetype (class in qat.comm.resource.ttypes)": [[105, "qat.comm.resource.ttypes.NodeType", false]], "noons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.noons", false]], "normal_order (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.normal_order", false]], "nqbits (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.nqbits", false]], "nqbits (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.nqbits", false]], "numberpartitioning (class in qat.opt)": [[307, "qat.opt.NumberPartitioning", false]], "observable (class in qat.core)": [[160, "qat.core.Observable", false]], "observablesplitter (class in qat.plugins)": [[344, "qat.plugins.ObservableSplitter", false]], "one_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.one_body_integrals", false]], "one_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.one_body_integrals", false]], "op (class in qat.comm.datamodel.ttypes)": [[96, "qat.comm.datamodel.ttypes.Op", false]], "op (qat.core.term attribute)": [[167, "qat.core.Term.op", false]], "operatortableau (class in qat.synthopline.interface)": [[416, "qat.synthopline.interface.OperatorTableau", false]], "optimize() (qat.plugins.optimizer method)": [[345, "qat.plugins.Optimizer.optimize", false]], "optimizer (class in qat.plugins)": [[345, "qat.plugins.Optimizer", false]], "oqasmparser (class in qat.interop.openqasm)": [[69, "qat.interop.openqasm.OqasmParser", false]], "or_clause() (qat.opt.boolexpr.clause static method)": [[289, "qat.opt.boolexpr.Clause.or_clause", false]], "orbital_energies (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.orbital_energies", false]], "parameter (class in qat.core)": [[161, "qat.core.Parameter", false]], "parameter_map (qat.core.job property)": [[120, "qat.core.Job.parameter_map", false]], "parameter_map (qat.core.result property)": [[163, "qat.core.Result.parameter_map", false]], "parametricamplitudedamping (class in qat.quops)": [[394, "qat.quops.ParametricAmplitudeDamping", false]], "parametricgatenoise (class in qat.quops)": [[395, "qat.quops.ParametricGateNoise", false]], "parametricpuredephasing (class in qat.quops)": [[396, "qat.quops.ParametricPureDephasing", false]], "parametricquantumchannel (class in qat.quops)": [[397, "qat.quops.ParametricQuantumChannel", false]], "paramgate (class in qat.lang.aqasm.gates)": [[266, "qat.lang.AQASM.gates.ParamGate", false]], "params_specification (qat.hardware.defaulthardwaremodel attribute)": [[233, "qat.hardware.DefaultHardwareModel.params_specification", false]], "params_specification (qat.hardware.hardwaremodel attribute)": [[235, "qat.hardware.HardwareModel.params_specification", false]], "parse_result() (qat.opt.graphcolouring method)": [[291, "qat.opt.GraphColouring.parse_result", false]], "parse_result() (qat.opt.graphpartitioning method)": [[292, "qat.opt.GraphPartitioning.parse_result", false]], "parse_result() (qat.opt.kclique method)": [[294, "qat.opt.KClique.parse_result", false]], "parse_result() (qat.opt.maxcut method)": [[295, "qat.opt.MaxCut.parse_result", false]], "parse_result() (qat.opt.vertexcover method)": [[311, "qat.opt.VertexCover.parse_result", false]], "partial_trace() (in module qat.quops.math_util)": [[398, "qat.quops.math_util.partial_trace", false]], "pattern_to_remove() (qat.pbo.patterngroup method)": [[326, "qat.pbo.PatternGroup.pattern_to_remove", false]], "patterngroup (class in qat.pbo)": [[326, "qat.pbo.PatternGroup", false]], "patternmanager (class in qat.plugins)": [[346, "qat.plugins.PatternManager", false]], "perform_phase_estimation (class in qat.fermion.phase_estimation)": [[210, "qat.fermion.phase_estimation.perform_phase_estimation", false]], "perform_pyscf_computation() (in module qat.fermion.chemistry.pyscf_tools)": [[211, "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation", false]], "phase() (qat.lang.aqasm.qbool.qbool method)": [[271, "qat.lang.AQASM.qbool.QBool.phase", false]], "phase() (qat.lang.aqasm.qbool.qclause method)": [[273, "qat.lang.AQASM.qbool.QClause.phase", false]], "phase() (qat.lang.aqasm.qint.qcompexp method)": [[274, "qat.lang.AQASM.qint.QCompExp.phase", false]], "phase_estimation() (in module qat.lang.algorithms)": [[267, "qat.lang.algorithms.phase_estimation", false]], "phase_polynomial_synthesis() (in module qat.synthopline)": [[417, "qat.synthopline.phase_polynomial_synthesis", false]], "plot() (qat.core.result method)": [[163, "qat.core.Result.plot", false]], "plot_in_notebook() (in module qat.core.printer)": [[162, "qat.core.printer.plot_in_notebook", false]], "plugin_exception_only() (in module qat.core.exceptions_utils)": [[133, "qat.core.exceptions_utils.plugin_exception_only", false]], "pop_prohibited_value() (qat.pbo.var method)": [[327, "qat.pbo.VAR.pop_prohibited_value", false]], "post_process() (qat.generators.combinatorialoptimizergenerator method)": [[224, "qat.generators.CombinatorialOptimizerGenerator.post_process", false]], "post_process() (qat.generators.remotebatchgenerator method)": [[229, "qat.generators.RemoteBatchGenerator.post_process", false]], "post_process() (qat.plugins.abstractplugin method)": [[329, "qat.plugins.AbstractPlugin.post_process", false]], "pretty_print() (qat.core.variables.arithexpression method)": [[147, "qat.core.variables.ArithExpression.pretty_print", false]], "prob() (qat.quops.parametricamplitudedamping method)": [[394, "qat.quops.ParametricAmplitudeDamping.prob", false]], "prob() (qat.quops.parametricpuredephasing method)": [[396, "qat.quops.ParametricPureDephasing.prob", false]], "processingtype (class in qat.comm.shared.ttypes)": [[109, "qat.comm.shared.ttypes.ProcessingType", false]], "produce_j_h_and_offset() (in module qat.opt.graph_partitioning)": [[292, "qat.opt.graph_partitioning.produce_j_h_and_offset", false]], "produce_j_h_and_offset() (in module qat.opt.max_cut)": [[295, "qat.opt.max_cut.produce_j_h_and_offset", false]], "produce_j_h_and_offset() (in module qat.opt.number_partitioning)": [[307, "qat.opt.number_partitioning.produce_j_h_and_offset", false]], "produce_q_and_offset() (in module qat.opt.binary_linear_integer_programming)": [[287, "qat.opt.binary_linear_integer_programming.produce_q_and_offset", false]], "produce_q_and_offset() (in module qat.opt.graph_colouring)": [[291, "qat.opt.graph_colouring.produce_q_and_offset", false]], "produce_q_and_offset() (in module qat.opt.k_clique)": [[294, "qat.opt.k_clique.produce_q_and_offset", false]], "produce_q_and_offset() (in module qat.opt.vertex_cover)": [[311, "qat.opt.vertex_cover.produce_q_and_offset", false]], "program (class in qat.lang)": [[268, "qat.lang.Program", false]], "project() (in module qat.pylinalg.simulator)": [[89, "qat.pylinalg.simulator.project", false]], "projectq_to_qlm() (qat.interop.projectq.aqasmengine method)": [[71, "qat.interop.projectq.AqasmEngine.projectq_to_qlm", false]], "psd (qat.core.parameter property)": [[161, "qat.core.Parameter.psd", false]], "psi_0 (qat.core.job property)": [[120, "qat.core.Job.psi_0", false]], "psominimizeplugin (class in qat.plugins)": [[347, "qat.plugins.PSOMinimizePlugin", false]], "ptilde() (qat.quops.parametricpuredephasing method)": [[396, "qat.quops.ParametricPureDephasing.ptilde", false]], "ptm (qat.quops.quantumchannelptm property)": [[403, "qat.quops.QuantumChannelPTM.ptm", false]], "pylinalg (class in qat.qpus)": [[363, "qat.qpus.PyLinalg", false]], "pyquil_to_qlm() (in module qat.interop.pyquil)": [[74, "qat.interop.pyquil.pyquil_to_qlm", false]], "pyquilqpu (class in qat.interop.pyquil)": [[75, "qat.interop.pyquil.PyquilQPU", false]], "q_matrix (qat.opt.qubo property)": [[308, "qat.opt.QUBO.q_matrix", false]], "qalloc() (qat.lang.program method)": [[268, "qat.lang.Program.qalloc", false]], "qaoa_circuit() (qat.vsolve.ansatz.ansatzfactory static method)": [[286, "qat.vsolve.ansatz.AnsatzFactory.qaoa_circuit", false]], "qaoa_job() (qat.opt.circuit_generator.circuitgenerator method)": [[288, "qat.opt.circuit_generator.CircuitGenerator.qaoa_job", false]], "qaoa_job() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.qaoa_job", false]], "qaoa_job() (qat.opt.ising method)": [[293, "qat.opt.Ising.qaoa_job", false]], "qaoa_job() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.qaoa_job", false]], "qaoa_job() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.qaoa_job", false]], "qaptivaservice (class in qat.qiskit)": [[358, "qat.qiskit.QaptivaService", false]], "qarithexp (class in qat.lang.aqasm.qint)": [[269, "qat.lang.AQASM.qint.QArithExp", false]], "qat": [[63, "module-qat", false]], "qat.comm": [[93, "module-qat.comm", false]], "qat.comm.datamodel": [[94, "module-qat.comm.datamodel", false]], "qat.comm.datamodel.ttypes.gatedefinition (built-in class)": [[95, "qat.comm.datamodel.ttypes.GateDefinition", false]], "qat.comm.exceptions": [[97, "module-qat.comm.exceptions", false]], "qat.comm.exceptions.ttypes.errortype (built-in class)": [[98, "qat.comm.exceptions.ttypes.ErrorType", false]], "qat.comm.exceptions.ttypes.generatorexception (built-in class)": [[99, "qat.comm.exceptions.ttypes.GeneratorException", false]], "qat.comm.exceptions.ttypes.pluginexception (built-in class)": [[100, "qat.comm.exceptions.ttypes.PluginException", false]], "qat.comm.exceptions.ttypes.qpuexception (built-in class)": [[101, "qat.comm.exceptions.ttypes.QPUException", false]], "qat.comm.resource": [[102, "module-qat.comm.resource", false]], "qat.comm.resource.ttypes.allocationmodel (built-in class)": [[103, "qat.comm.resource.ttypes.AllocationModel", false]], "qat.comm.resource.ttypes.device (built-in class)": [[104, "qat.comm.resource.ttypes.Device", false]], "qat.comm.resource.ttypes.resourcemodel (built-in class)": [[106, "qat.comm.resource.ttypes.ResourceModel", false]], "qat.comm.shared": [[107, "module-qat.comm.shared", false]], "qat.core": [[110, "module-qat.core", false]], "qat.core.application": [[122, "module-qat.core.application", false]], "qat.core.circuit_builder": [[125, "module-qat.core.circuit_builder", false]], "qat.core.exceptions_utils": [[130, "module-qat.core.exceptions_utils", false]], "qat.core.gate_set": [[135, "module-qat.core.gate_set", false]], "qat.core.qpu": [[139, "module-qat.core.qpu", false]], "qat.core.spins": [[141, "module-qat.core.spins", false]], "qat.core.variables": [[144, "module-qat.core.variables", false]], "qat.core.variables.abso()": [[145, "qat.core.variables.abso", false]], "qat.core.variables.angle()": [[146, "qat.core.variables.angle", false]], "qat.core.variables.atan2()": [[148, "qat.core.variables.atan2", false]], "qat.core.variables.cos()": [[149, "qat.core.variables.cos", false]], "qat.core.variables.exp()": [[150, "qat.core.variables.exp", false]], "qat.core.variables.get_item()": [[151, "qat.core.variables.get_item", false]], "qat.core.variables.heaviside()": [[152, "qat.core.variables.heaviside", false]], "qat.core.variables.imag()": [[153, "qat.core.variables.imag", false]], "qat.core.variables.ln()": [[154, "qat.core.variables.ln", false]], "qat.core.variables.real()": [[155, "qat.core.variables.real", false]], "qat.core.variables.sin()": [[156, "qat.core.variables.sin", false]], "qat.core.variables.sqrt()": [[157, "qat.core.variables.sqrt", false]], "qat.core.variables.vmax()": [[159, "qat.core.variables.vmax", false]], "qat.devices": [[172, "module-qat.devices", false]], "qat.devices.google_sycamore (built-in variable)": [[174, "qat.devices.GOOGLE_SYCAMORE", false]], "qat.devices.ibm_burlington (built-in variable)": [[176, "qat.devices.IBM_BURLINGTON", false]], "qat.devices.ibm_johannesburg (built-in variable)": [[177, "qat.devices.IBM_JOHANNESBURG", false]], "qat.devices.ibm_melbourne (built-in variable)": [[178, "qat.devices.IBM_MELBOURNE", false]], "qat.devices.ibm_rueschlikon (built-in variable)": [[179, "qat.devices.IBM_RUESCHLIKON", false]], "qat.devices.ibm_singapore (built-in variable)": [[180, "qat.devices.IBM_SINGAPORE", false]], "qat.devices.ibm_tokyo (built-in variable)": [[181, "qat.devices.IBM_TOKYO", false]], "qat.devices.ibm_yorktown (built-in variable)": [[182, "qat.devices.IBM_YORKTOWN", false]], "qat.devices.rigetti_agave (built-in variable)": [[184, "qat.devices.RIGETTI_AGAVE", false]], "qat.devices.rigetti_aspen (built-in variable)": [[185, "qat.devices.RIGETTI_ASPEN", false]], "qat.devices.zuchongzhi (built-in variable)": [[187, "qat.devices.ZUCHONGZHI", false]], "qat.fermion": [[188, "module-qat.fermion", false]], "qat.fermion.chemistry": [[188, "module-qat.fermion.chemistry", false]], "qat.fermion.chemistry.qse": [[188, "module-qat.fermion.chemistry.qse", false]], "qat.fermion.chemistry.ucc": [[188, "module-qat.fermion.chemistry.ucc", false]], "qat.fermion.circuits": [[188, "module-qat.fermion.circuits", false]], "qat.fermion.hamiltonians": [[188, "module-qat.fermion.hamiltonians", false]], "qat.fermion.phase_estimation": [[188, "module-qat.fermion.phase_estimation", false]], "qat.fermion.transforms": [[188, "module-qat.fermion.transforms", false]], "qat.fusion": [[218, "module-qat.fusion", false]], "qat.generators": [[222, "module-qat.generators", false]], "qat.hardware": [[231, "module-qat.hardware", false]], "qat.interop": [[64, "module-qat.interop", false]], "qat.interop.cirq": [[65, "module-qat.interop.cirq", false]], "qat.interop.openqasm": [[68, "module-qat.interop.openqasm", false]], "qat.interop.projectq": [[70, "module-qat.interop.projectq", false]], "qat.interop.pyquil": [[73, "module-qat.interop.pyquil", false]], "qat.interop.qiskit": [[77, "module-qat.interop.qiskit", false]], "qat.lang": [[237, "module-qat.lang", false]], "qat.lang.algorithms": [[237, "module-qat.lang.algorithms", false]], "qat.lang.aqasm.arithmetic": [[250, "module-qat.lang.AQASM.arithmetic", false]], "qat.lang.aqasm.classarith": [[256, "module-qat.lang.AQASM.classarith", false]], "qat.lang.aqasm.qftarith": [[260, "module-qat.lang.AQASM.qftarith", false]], "qat.nnize": [[282, "module-qat.nnize", false]], "qat.opt": [[285, "module-qat.opt", false]], "qat.opt.mixing_factory": [[297, "module-qat.opt.mixing_factory", false]], "qat.opt.results": [[301, "module-qat.opt.results", false]], "qat.pbo": [[312, "module-qat.pbo", false]], "qat.pbo.collections": [[317, "module-qat.pbo.collections", false]], "qat.pbo.decompositions": [[319, "module-qat.pbo.decompositions", false]], "qat.plugins": [[328, "module-qat.plugins", false]], "qat.pylinalg": [[85, "module-qat.pylinalg", false]], "qat.pylinalg.simulator": [[86, "module-qat.pylinalg.simulator", false]], "qat.qiskit": [[356, "module-qat.qiskit", false]], "qat.qpus": [[361, "module-qat.qpus", false]], "qat.quops": [[372, "module-qat.quops", false]], "qat.quops.metrics": [[372, "module-qat.quops.metrics", false]], "qat.synthopline": [[404, "module-qat.synthopline", false]], "qbit (class in qat.lang.aqasm.bits)": [[270, "qat.lang.AQASM.bits.Qbit", false]], "qbits (qat.core.term attribute)": [[167, "qat.core.Term.qbits", false]], "qbits_list() (qat.lang.aqasm.qbool.qbool method)": [[271, "qat.lang.AQASM.qbool.QBool.qbits_list", false]], "qbits_list() (qat.lang.aqasm.qbool.qboolarray method)": [[272, "qat.lang.AQASM.qbool.QBoolArray.qbits_list", false]], "qbits_list() (qat.lang.aqasm.qbool.qclause method)": [[273, "qat.lang.AQASM.qbool.QClause.qbits_list", false]], "qbits_list() (qat.lang.aqasm.qint.qcompexp method)": [[274, "qat.lang.AQASM.qint.QCompExp.qbits_list", false]], "qbits_list() (qat.lang.aqasm.qint.qint method)": [[276, "qat.lang.AQASM.qint.QInt.qbits_list", false]], "qbool (class in qat.lang.aqasm.qbool)": [[271, "qat.lang.AQASM.qbool.QBool", false]], "qboolarray (class in qat.lang.aqasm.qbool)": [[272, "qat.lang.AQASM.qbool.QBoolArray", false]], "qclause (class in qat.lang.aqasm.qbool)": [[273, "qat.lang.AQASM.qbool.QClause", false]], "qcompexp (class in qat.lang.aqasm.qint)": [[274, "qat.lang.AQASM.qint.QCompExp", false]], "qft() (in module qat.lang.aqasm.qftarith)": [[265, "qat.lang.AQASM.qftarith.QFT", false]], "qfunc() (in module qat.lang)": [[275, "qat.lang.qfunc", false]], "qint (class in qat.lang.aqasm.qint)": [[276, "qat.lang.AQASM.qint.QInt", false]], "qiskit_to_qlm() (in module qat.interop.qiskit)": [[80, "qat.interop.qiskit.qiskit_to_qlm", false]], "qiskit_to_qlm() (in module qat.qiskit.converters)": [[359, "qat.qiskit.converters.qiskit_to_qlm", false]], "qiskitjob (class in qat.interop.qiskit)": [[81, "qat.interop.qiskit.QiskitJob", false]], "qiskitruntimeqpu (class in qat.interop.qiskit.runtime)": [[82, "qat.interop.qiskit.runtime.QiskitRuntimeQPU", false]], "qlm_to_cirq() (in module qat.interop.cirq)": [[67, "qat.interop.cirq.qlm_to_cirq", false]], "qlm_to_pyquil() (in module qat.interop.pyquil)": [[76, "qat.interop.pyquil.qlm_to_pyquil", false]], "qlm_to_qiskit() (in module qat.interop.qiskit)": [[83, "qat.interop.qiskit.qlm_to_qiskit", false]], "qpu_exception_only() (in module qat.core.exceptions_utils)": [[134, "qat.core.exceptions_utils.qpu_exception_only", false]], "qpuhandler (class in qat.qpus)": [[369, "qat.qpus.QPUHandler", false]], "qputobackend (class in qat.interop.qiskit)": [[84, "qat.interop.qiskit.QPUToBackend", false]], "qregister (class in qat.lang.aqasm.bits)": [[277, "qat.lang.AQASM.bits.QRegister", false]], "qrout() (in module qat.lang)": [[278, "qat.lang.qrout", false]], "qroutine (class in qat.lang)": [[279, "qat.lang.QRoutine", false]], "quameleonplugin (class in qat.plugins)": [[348, "qat.plugins.QuameleonPlugin", false]], "quantum_channels (qat.hardware.defaultgatesspecification attribute)": [[232, "qat.hardware.DefaultGatesSpecification.quantum_channels", false]], "quantum_channels (qat.hardware.gatesspecification attribute)": [[234, "qat.hardware.GatesSpecification.quantum_channels", false]], "quantum_counting() (in module qat.lang.algorithms)": [[280, "qat.lang.algorithms.quantum_counting", false]], "quantumchannel (class in qat.quops)": [[399, "qat.quops.QuantumChannel", false]], "quantumchannelchi (class in qat.quops)": [[400, "qat.quops.QuantumChannelChi", false]], "quantumchannelchoi (class in qat.quops)": [[401, "qat.quops.QuantumChannelChoi", false]], "quantumchannelkraus (class in qat.quops)": [[402, "qat.quops.QuantumChannelKraus", false]], "quantumchannelptm (class in qat.quops)": [[403, "qat.quops.QuantumChannelPTM", false]], "quantumcostmetric (class in qat.nnize.metrics)": [[284, "qat.nnize.metrics.QuantumCostMetric", false]], "qubo (class in qat.opt)": [[308, "qat.opt.QUBO", false]], "qutipqpu (class in qat.qpus)": [[370, "qat.qpus.QutipQPU", false]], "raise_break() (in module qat.pylinalg.simulator)": [[90, "qat.pylinalg.simulator.raise_break", false]], "random_linear_operator() (in module qat.synthopline.linear_synthesis)": [[418, "qat.synthopline.linear_synthesis.random_linear_operator", false]], "random_phase_polynomial() (in module qat.synthopline.phase_polynomials)": [[419, "qat.synthopline.phase_polynomials.random_phase_polynomial", false]], "remap (class in qat.plugins)": [[349, "qat.plugins.Remap", false]], "remoteapplication (class in qat.core.application)": [[124, "qat.core.application.RemoteApplication", false]], "remotebatchgenerator (class in qat.generators)": [[229, "qat.generators.RemoteBatchGenerator", false]], "remoteplugin (class in qat.plugins)": [[350, "qat.plugins.RemotePlugin", false]], "remoteqpu (class in qat.qpus)": [[371, "qat.qpus.RemoteQPU", false]], "remove_locks() (qat.core.circuit method)": [[116, "qat.core.Circuit.remove_locks", false]], "replace_pattern() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.replace_pattern", false]], "replace_pattern() (qat.plugins.patternmanager method)": [[346, "qat.plugins.PatternManager.replace_pattern", false]], "reset() (in module qat.pylinalg.simulator)": [[91, "qat.pylinalg.simulator.reset", false]], "reset() (qat.lang.program method)": [[268, "qat.lang.Program.reset", false]], "restrict_active_space() (qat.fermion.chemistry.wrapper.moleculeinfo method)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.restrict_active_space", false]], "result (class in qat.core)": [[163, "qat.core.Result", false]], "result() (qat.interop.qiskit.qiskitjob method)": [[81, "qat.interop.qiskit.QiskitJob.result", false]], "retrieve_job() (qat.interop.qiskit.asyncbackendtoqpu method)": [[78, "qat.interop.qiskit.AsyncBackendToQPU.retrieve_job", false]], "run() (qat.core.circuit method)": [[116, "qat.core.Circuit.run", false]], "run() (qat.core.job method)": [[120, "qat.core.Job.run", false]], "run() (qat.lang.program method)": [[268, "qat.lang.Program.run", false]], "run() (qat.plugins.junction method)": [[338, "qat.plugins.Junction.run", false]], "run() (qat.qiskit.estimator method)": [[357, "qat.qiskit.Estimator.run", false]], "run() (qat.qiskit.sampler method)": [[360, "qat.qiskit.Sampler.run", false]], "rx_minus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rx_minus_left", false]], "rx_minus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rx_minus_right", false]], "rx_plus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rx_plus_left", false]], "rx_plus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rx_plus_right", false]], "ry_minus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.ry_minus_left", false]], "ry_minus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.ry_minus_right", false]], "ry_plus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.ry_plus_left", false]], "ry_plus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.ry_plus_right", false]], "ryd_job() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.ryd_job", false]], "ryd_job() (qat.opt.ising method)": [[293, "qat.opt.Ising.ryd_job", false]], "ryd_job() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.ryd_job", false]], "ryd_job() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.ryd_job", false]], "rz_minus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rz_minus_left", false]], "rz_minus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rz_minus_right", false]], "rz_plus_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rz_plus_left", false]], "rz_plus_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.rz_plus_right", false]], "sample (class in qat.core)": [[164, "qat.core.Sample", false]], "sampler (class in qat.qiskit)": [[360, "qat.qiskit.Sampler", false]], "schedule (class in qat.core)": [[165, "qat.core.Schedule", false]], "schedulegenerator (class in qat.opt.schedule_generator)": [[309, "qat.opt.schedule_generator.ScheduleGenerator", false]], "scipyminimizeplugin (class in qat.plugins)": [[351, "qat.plugins.ScipyMinimizePlugin", false]], "select_active_orbitals() (in module qat.fermion.chemistry.ucc)": [[212, "qat.fermion.chemistry.ucc.select_active_orbitals", false]], "select_active_space() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.select_active_space", false]], "seqoptim (class in qat.plugins)": [[352, "qat.plugins.SeqOptim", false]], "serve() (qat.core.application.application method)": [[123, "qat.core.application.Application.serve", false]], "serve() (qat.generators.abstractgenerator method)": [[223, "qat.generators.AbstractGenerator.serve", false]], "serve() (qat.plugins.abstractplugin method)": [[329, "qat.plugins.AbstractPlugin.serve", false]], "serve() (qat.qpus.pylinalg method)": [[363, "qat.qpus.PyLinalg.serve", false]], "serve() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.serve", false]], "set_ancillae() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.set_ancillae", false]], "set_circuit_generator() (qat.core.gate_set.gatesignature method)": [[137, "qat.core.gate_set.GateSignature.set_circuit_generator", false]], "set_compile_attributes() (qat.plugins.patternmanager method)": [[346, "qat.plugins.PatternManager.set_compile_attributes", false]], "set_dag() (qat.lang.abstractgate method)": [[238, "qat.lang.AbstractGate.set_dag", false]], "set_gate_set() (qat.lang.linking.linker method)": [[249, "qat.lang.linking.Linker.set_gate_set", false]], "set_gate_time() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.set_gate_time", false]], "set_matrix_generator() (qat.core.gate_set.gatesignature method)": [[137, "qat.core.gate_set.GateSignature.set_matrix_generator", false]], "set_nbqbits() (qat.core.topology method)": [[168, "qat.core.Topology.set_nbqbits", false]], "set_nnizer() (qat.nnize.metrics.durationmetric method)": [[283, "qat.nnize.metrics.DurationMetric.set_nnizer", false]], "set_nnizer() (qat.nnize.metrics.quantumcostmetric method)": [[284, "qat.nnize.metrics.QuantumCostMetric.set_nnizer", false]], "set_options() (qat.plugins.scipyminimizeplugin method)": [[351, "qat.plugins.ScipyMinimizePlugin.set_options", false]], "set_qpu() (qat.interop.pyquil.pyquilqpu method)": [[75, "qat.interop.pyquil.PyquilQPU.set_qpu", false]], "set_qpu() (qat.interop.qiskit.qputobackend method)": [[84, "qat.interop.qiskit.QPUToBackend.set_qpu", false]], "set_qreg() (qat.core.sample method)": [[164, "qat.core.Sample.set_qreg", false]], "set_value() (qat.lang.aqasm.qint.qint method)": [[276, "qat.lang.AQASM.qint.QInt.set_value", false]], "set_value() (qat.pbo.var method)": [[327, "qat.pbo.VAR.set_value", false]], "shift_jump_operators() (qat.hardware.defaulthardwaremodel method)": [[233, "qat.hardware.DefaultHardwareModel.shift_jump_operators", false]], "shift_jump_operators() (qat.hardware.hardwaremodel method)": [[235, "qat.hardware.HardwareModel.shift_jump_operators", false]], "shift_qbits() (qat.core.circuit method)": [[116, "qat.core.Circuit.shift_qbits", false]], "shift_qbits() (qat.core.job method)": [[120, "qat.core.Job.shift_qbits", false]], "simpleinitialstate (class in qat.opt.mixing_factory)": [[300, "qat.opt.mixing_factory.SimpleInitialState", false]], "simulate() (in module qat.pylinalg.simulator)": [[92, "qat.pylinalg.simulator.simulate", false]], "simulatedannealing (class in qat.qpus)": [[364, "qat.qpus.SimulatedAnnealing", false]], "spinhamiltonian (class in qat.fermion.hamiltonians)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian", false]], "spins_to_integer() (in module qat.core.spins)": [[143, "qat.core.spins.spins_to_integer", false]], "spsaminimizeplugin (class in qat.plugins)": [[353, "qat.plugins.SPSAMinimizePlugin", false]], "sqa_job() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.sqa_job", false]], "sqa_job() (qat.opt.ising method)": [[293, "qat.opt.Ising.sqa_job", false]], "sqa_job() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.sqa_job", false]], "sqa_job() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.sqa_job", false]], "squaregriddevice (class in qat.devices)": [[186, "qat.devices.SquareGridDevice", false]], "state (class in qat.core.wrappers.result)": [[166, "qat.core.wrappers.result.State", false]], "state (qat.core.sample property)": [[164, "qat.core.Sample.state", false]], "state_prep (qat.hardware.defaultgatesspecification attribute)": [[232, "qat.hardware.DefaultGatesSpecification.state_prep", false]], "state_prep (qat.hardware.gatesspecification attribute)": [[234, "qat.hardware.GatesSpecification.state_prep", false]], "statistics() (qat.core.circuit method)": [[116, "qat.core.Circuit.statistics", false]], "status() (qat.interop.qiskit.qiskitjob method)": [[81, "qat.interop.qiskit.QiskitJob.status", false]], "submit() (qat.interop.pyquil.pyquilqpu method)": [[75, "qat.interop.pyquil.PyquilQPU.submit", false]], "submit() (qat.interop.qiskit.asyncbackendtoqpu method)": [[78, "qat.interop.qiskit.AsyncBackendToQPU.submit", false]], "submit() (qat.interop.qiskit.backendtoqpu method)": [[79, "qat.interop.qiskit.BackendToQPU.submit", false]], "submit() (qat.interop.qiskit.runtime.qiskitruntimeqpu method)": [[82, "qat.interop.qiskit.runtime.QiskitRuntimeQPU.submit", false]], "submit() (qat.qpus.clinalg method)": [[362, "qat.qpus.CLinalg.submit", false]], "submit() (qat.qpus.pylinalg method)": [[363, "qat.qpus.PyLinalg.submit", false]], "submit() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.submit", false]], "submit_job() (qat.interop.pyquil.pyquilqpu method)": [[75, "qat.interop.pyquil.PyquilQPU.submit_job", false]], "submit_job() (qat.qpus.pylinalg method)": [[363, "qat.qpus.PyLinalg.submit_job", false]], "submit_job() (qat.qpus.qpuhandler method)": [[369, "qat.qpus.QPUHandler.submit_job", false]], "submit_job() (qat.qpus.simulatedannealing method)": [[364, "qat.qpus.SimulatedAnnealing.submit_job", false]], "swap_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.swap_left", false]], "swap_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.swap_right", false]], "symbol (class in qat.core.variables)": [[158, "qat.core.variables.Symbol", false]], "synthesize_stabilizer_state() (in module qat.synthopline.co_diagonalization)": [[420, "qat.synthopline.co_diagonalization.synthesize_stabilizer_state", false]], "t_1 (qat.quops.parametricamplitudedamping attribute)": [[394, "qat.quops.ParametricAmplitudeDamping.T_1", false]], "t_phi (qat.quops.parametricpuredephasing attribute)": [[396, "qat.quops.ParametricPureDephasing.T_phi", false]], "tableau (qat.synthopline.interface.operatortableau property)": [[416, "qat.synthopline.interface.OperatorTableau.tableau", false]], "tensor (qat.quops.quantumchannelptm property)": [[403, "qat.quops.QuantumChannelPTM.tensor", false]], "term (class in qat.core)": [[167, "qat.core.Term", false]], "terms (qat.core.observable attribute)": [[160, "qat.core.Observable.terms", false]], "terms (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.terms", false]], "terms (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[213, "qat.fermion.hamiltonians.SpinHamiltonian.terms", false]], "threshold (qat.core.job property)": [[120, "qat.core.Job.threshold", false]], "to_bqm() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.to_bqm", false]], "to_bqm() (qat.opt.ising method)": [[293, "qat.opt.Ising.to_bqm", false]], "to_bqm() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.to_bqm", false]], "to_bqm() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.to_bqm", false]], "to_chi() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.to_chi", false]], "to_choi() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.to_choi", false]], "to_choi() (qat.quops.quantumchannelptm method)": [[403, "qat.quops.QuantumChannelPTM.to_choi", false]], "to_circ() (qat.lang.program method)": [[268, "qat.lang.Program.to_circ", false]], "to_circ() (qat.pbo.graphcircuit method)": [[315, "qat.pbo.GraphCircuit.to_circ", false]], "to_combinatorial_problem() (qat.opt.ising method)": [[293, "qat.opt.Ising.to_combinatorial_problem", false]], "to_combinatorial_problem() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.to_combinatorial_problem", false]], "to_combinatorial_problem() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.to_combinatorial_problem", false]], "to_cpp() (qat.core.batch method)": [[114, "qat.core.Batch.to_cpp", false]], "to_cpp() (qat.core.job method)": [[120, "qat.core.Job.to_cpp", false]], "to_electronic() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.to_electronic", false]], "to_fermion() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_fermion", false]], "to_ising() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.to_ising", false]], "to_ising() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.to_ising", false]], "to_job() (qat.core.circuit method)": [[116, "qat.core.Circuit.to_job", false]], "to_job() (qat.core.schedule method)": [[165, "qat.core.Schedule.to_job", false]], "to_job() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.to_job", false]], "to_job() (qat.opt.ising method)": [[293, "qat.opt.Ising.to_job", false]], "to_job() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.to_job", false]], "to_job() (qat.opt.qubo method)": [[308, "qat.opt.QUBO.to_job", false]], "to_kraus() (qat.quops.quantumchannelchi method)": [[400, "qat.quops.QuantumChannelChi.to_kraus", false]], "to_kraus() (qat.quops.quantumchannelchoi method)": [[401, "qat.quops.QuantumChannelChoi.to_kraus", false]], "to_kraus() (qat.quops.quantumchannelptm method)": [[403, "qat.quops.QuantumChannelPTM.to_kraus", false]], "to_matrix() (qat.core.observable method)": [[160, "qat.core.Observable.to_matrix", false]], "to_nx() (qat.core.topology method)": [[168, "qat.core.Topology.to_nx", false]], "to_pauli() (qat.synthopline.interface.weyloperator method)": [[421, "qat.synthopline.interface.WeylOperator.to_pauli", false]], "to_ptm() (qat.quops.quantumchannelchoi method)": [[401, "qat.quops.QuantumChannelChoi.to_ptm", false]], "to_ptm() (qat.quops.quantumchannelkraus method)": [[402, "qat.quops.QuantumChannelKraus.to_ptm", false]], "to_qubo() (qat.opt.combinatorialproblem method)": [[290, "qat.opt.CombinatorialProblem.to_qubo", false]], "to_qubo() (qat.opt.ising method)": [[293, "qat.opt.Ising.to_qubo", false]], "to_qubo() (qat.opt.mwis method)": [[306, "qat.opt.MWIS.to_qubo", false]], "to_spin() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[193, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_spin", false]], "to_spin() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[194, "qat.fermion.hamiltonians.FermionHamiltonian.to_spin", false]], "to_thrift() (qat.core.batch method)": [[114, "qat.core.Batch.to_thrift", false]], "to_thrift() (qat.core.batchresult method)": [[115, "qat.core.BatchResult.to_thrift", false]], "to_thrift() (qat.core.circuit method)": [[116, "qat.core.Circuit.to_thrift", false]], "to_thrift() (qat.core.hardwarespecs method)": [[119, "qat.core.HardwareSpecs.to_thrift", false]], "to_thrift() (qat.core.job method)": [[120, "qat.core.Job.to_thrift", false]], "to_thrift() (qat.core.result method)": [[163, "qat.core.Result.to_thrift", false]], "to_thrift() (qat.core.topology method)": [[168, "qat.core.Topology.to_thrift", false]], "to_thrift() (qat.core.variable method)": [[170, "qat.core.Variable.to_thrift", false]], "to_thrift() (qat.core.variables.arithexpression method)": [[147, "qat.core.variables.ArithExpression.to_thrift", false]], "topology (class in qat.core)": [[168, "qat.core.Topology", false]], "topologytype (class in qat.core)": [[169, "qat.core.TopologyType", false]], "transform_basis() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.transform_basis", false]], "transform_integrals_to_new_basis() (in module qat.fermion.chemistry.ucc)": [[214, "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis", false]], "transform_to_bk_basis() (in module qat.fermion.transforms)": [[215, "qat.fermion.transforms.transform_to_bk_basis", false]], "transform_to_jw_basis() (in module qat.fermion.transforms)": [[216, "qat.fermion.transforms.transform_to_jw_basis", false]], "transform_to_parity_basis() (in module qat.fermion.transforms)": [[217, "qat.fermion.transforms.transform_to_parity_basis", false]], "transformobservable (class in qat.plugins)": [[354, "qat.plugins.TransformObservable", false]], "two_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[208, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.two_body_integrals", false]], "two_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[209, "qat.fermion.chemistry.wrapper.MoleculeInfo.two_body_integrals", false]], "u3_decomposition() (in module qat.pbo.decompositions)": [[322, "qat.pbo.decompositions.u3_decomposition", false]], "uncompute() (qat.lang.qroutine method)": [[279, "qat.lang.QRoutine.uncompute", false]], "undirected() (qat.pbo.abstractregister method)": [[313, "qat.pbo.AbstractRegister.undirected", false]], "uniform_distribution() (in module qat.lang.algorithms.amplification)": [[281, "qat.lang.algorithms.amplification.uniform_distribution", false]], "union() (qat.core.gate_set.gateset method)": [[136, "qat.core.gate_set.GateSet.union", false]], "unpack() (qat.core.result method)": [[163, "qat.core.Result.unpack", false]], "value (qat.core.result property)": [[163, "qat.core.Result.value", false]], "value (qat.core.wrappers.result.state property)": [[166, "qat.core.wrappers.result.State.value", false]], "values (qat.core.result property)": [[163, "qat.core.Result.values", false]], "var (class in qat.opt.boolexpr)": [[310, "qat.opt.boolexpr.Var", false]], "var (class in qat.pbo)": [[327, "qat.pbo.VAR", false]], "variable (class in qat.core)": [[170, "qat.core.Variable", false]], "variablenamenotavailable (class in qat.core.circuit_builder.builder)": [[129, "qat.core.circuit_builder.builder.VariableNameNotAvailable", false]], "vertexcover (class in qat.opt)": [[311, "qat.opt.VertexCover", false]], "vertexcovergenerator (class in qat.generators)": [[230, "qat.generators.VertexCoverGenerator", false]], "vertexcoverresult (class in qat.opt.results)": [[305, "qat.opt.results.VertexCoverResult", false]], "wavefunction() (in module qat.core.simutil)": [[171, "qat.core.simutil.wavefunction", false]], "weyloperator (class in qat.synthopline.interface)": [[421, "qat.synthopline.interface.WeylOperator", false]], "wrap_samples() (qat.core.result method)": [[163, "qat.core.Result.wrap_samples", false]], "wrapper_post_process() (qat.generators.abstractgenerator method)": [[223, "qat.generators.AbstractGenerator.wrapper_post_process", false]], "x_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.x_left", false]], "x_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.x_right", false]], "xor_clause() (qat.opt.boolexpr.clause static method)": [[289, "qat.opt.boolexpr.Clause.xor_clause", false]], "xx_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.xx_left", false]], "xx_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.xx_right", false]], "xzx_decomposition() (in module qat.pbo.decompositions)": [[323, "qat.pbo.decompositions.xzx_decomposition", false]], "y_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.y_left", false]], "y_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.y_right", false]], "z_left() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.z_left", false]], "z_right() (qat.synthopline.interface.operatortableau method)": [[416, "qat.synthopline.interface.OperatorTableau.z_right", false]], "zeronoiseextrapolator (class in qat.plugins)": [[355, "qat.plugins.ZeroNoiseExtrapolator", false]], "zxz_decomposition() (in module qat.pbo.decompositions)": [[324, "qat.pbo.decompositions.zxz_decomposition", false]], "zyz_decomposition() (in module qat.pbo.decompositions)": [[325, "qat.pbo.decompositions.zyz_decomposition", false]]}, "objects": {"": [[63, 0, 0, "-", "qat"]], "qat": [[93, 0, 0, "-", "comm"], [110, 0, 0, "-", "core"], [172, 0, 0, "-", "devices"], [188, 0, 0, "-", "fermion"], [218, 0, 0, "-", "fusion"], [222, 0, 0, "-", "generators"], [231, 0, 0, "-", "hardware"], [64, 0, 0, "-", "interop"], [237, 0, 0, "-", "lang"], [282, 0, 0, "-", "nnize"], [285, 0, 0, "-", "opt"], [312, 0, 0, "-", "pbo"], [328, 0, 0, "-", "plugins"], [85, 0, 0, "-", "pylinalg"], [356, 0, 0, "-", "qiskit"], [361, 0, 0, "-", "qpus"], [372, 0, 0, "-", "quops"], [404, 0, 0, "-", "synthopline"]], "qat.comm": [[94, 0, 0, "-", "datamodel"], [97, 0, 0, "-", "exceptions"], [102, 0, 0, "-", "resource"], [107, 0, 0, "-", "shared"]], "qat.comm.datamodel.ttypes": [[95, 1, 1, "", "GateDefinition"], [96, 1, 1, "", "Op"]], "qat.comm.exceptions.ttypes": [[98, 1, 1, "", "ErrorType"], [99, 1, 1, "", "GeneratorException"], [100, 1, 1, "", "PluginException"], [101, 1, 1, "", "QPUException"]], "qat.comm.resource.ttypes": [[103, 1, 1, "", "AllocationModel"], [104, 1, 1, "", "Device"], [105, 1, 1, "", "NodeType"], [106, 1, 1, "", "ResourceModel"]], "qat.comm.shared.ttypes": [[108, 1, 1, "", "IntermediateMeasurement"], [109, 1, 1, "", "ProcessingType"]], "qat.core": [[114, 1, 1, "", "Batch"], [115, 1, 1, "", "BatchResult"], [116, 1, 1, "", "Circuit"], [119, 1, 1, "", "HardwareSpecs"], [120, 1, 1, "", "Job"], [160, 1, 1, "", "Observable"], [161, 1, 1, "", "Parameter"], [163, 1, 1, "", "Result"], [164, 1, 1, "", "Sample"], [165, 1, 1, "", "Schedule"], [167, 1, 1, "", "Term"], [168, 1, 1, "", "Topology"], [169, 1, 1, "", "TopologyType"], [170, 1, 1, "", "Variable"], [122, 0, 0, "-", "application"], [125, 0, 0, "-", "circuit_builder"], [130, 0, 0, "-", "exceptions_utils"], [135, 0, 0, "-", "gate_set"], [139, 0, 0, "-", "qpu"], [141, 0, 0, "-", "spins"], [144, 0, 0, "-", "variables"]], "qat.core.Batch": [[114, 2, 1, "", "dump"], [114, 3, 1, "", "file_extension"], [114, 2, 1, "", "from_bytes"], [114, 2, 1, "", "from_thrift"], [114, 2, 1, "", "get_variables"], [114, 2, 1, "", "load"], [114, 2, 1, "", "to_cpp"], [114, 2, 1, "", "to_thrift"]], "qat.core.BatchResult": [[115, 2, 1, "", "append"], [115, 2, 1, "", "dump"], [115, 2, 1, "", "extend"], [115, 3, 1, "", "file_extension"], [115, 2, 1, "", "from_thrift"], [115, 2, 1, "", "load"], [115, 2, 1, "", "to_thrift"]], "qat.core.Circuit": [[116, 2, 1, "", "bind_variable"], [116, 2, 1, "", "bind_variables"], [116, 2, 1, "", "compile"], [116, 2, 1, "", "count"], [116, 2, 1, "", "dag"], [116, 2, 1, "", "depth"], [116, 2, 1, "", "display"], [116, 2, 1, "", "dump"], [116, 2, 1, "", "empty"], [116, 2, 1, "", "eval"], [116, 3, 1, "", "file_extension"], [116, 2, 1, "", "fill_matrices"], [116, 2, 1, "", "from_bytes"], [116, 2, 1, "", "from_thrift"], [116, 3, 1, "", "gate_set"], [116, 2, 1, "", "get_variables"], [116, 2, 1, "", "insert_gate"], [116, 2, 1, "", "iterate_simple"], [116, 2, 1, "", "load"], [116, 2, 1, "", "remove_locks"], [116, 2, 1, "", "run"], [116, 2, 1, "", "shift_qbits"], [116, 2, 1, "", "statistics"], [116, 2, 1, "", "to_job"], [116, 2, 1, "", "to_thrift"]], "qat.core.HardwareSpecs": [[119, 2, 1, "", "as_graph"], [119, 2, 1, "", "as_quameleon"], [119, 2, 1, "", "dump"], [119, 3, 1, "", "file_extension"], [119, 2, 1, "", "from_thrift"], [119, 2, 1, "", "load"], [119, 3, 1, "", "nbqbits"], [119, 2, 1, "", "to_thrift"]], "qat.core.Job": [[120, 2, 1, "", "compile"], [120, 2, 1, "", "differentiate"], [120, 2, 1, "", "dump"], [120, 2, 1, "", "eval"], [120, 3, 1, "", "file_extension"], [120, 2, 1, "", "from_bytes"], [120, 2, 1, "", "from_thrift"], [120, 2, 1, "", "get_variables"], [120, 2, 1, "", "gradient"], [120, 2, 1, "", "load"], [120, 3, 1, "", "parameter_map"], [120, 3, 1, "", "psi_0"], [120, 2, 1, "", "run"], [120, 2, 1, "", "shift_qbits"], [120, 3, 1, "", "threshold"], [120, 2, 1, "", "to_cpp"], [120, 2, 1, "", "to_thrift"]], "qat.core.Observable": [[160, 4, 1, "", "constant_coeff"], [160, 2, 1, "", "dump"], [160, 4, 1, "", "ising"], [160, 2, 1, "", "load"], [160, 4, 1, "", "nbqbits"], [160, 4, 1, "", "terms"], [160, 2, 1, "", "to_matrix"]], "qat.core.Parameter": [[161, 3, 1, "", "func"], [161, 2, 1, "", "generate_noise"], [161, 2, 1, "", "get_noise"], [161, 3, 1, "", "psd"]], "qat.core.Result": [[163, 2, 1, "", "add_sample"], [163, 2, 1, "", "display"], [163, 2, 1, "", "dump"], [163, 3, 1, "", "file_extension"], [163, 2, 1, "", "from_bytes"], [163, 2, 1, "", "from_thrift"], [163, 2, 1, "", "load"], [163, 3, 1, "", "parameter_map"], [163, 2, 1, "", "plot"], [163, 2, 1, "", "to_thrift"], [163, 2, 1, "", "unpack"], [163, 3, 1, "", "value"], [163, 3, 1, "", "values"], [163, 2, 1, "", "wrap_samples"]], "qat.core.Sample": [[164, 3, 1, "", "amplitude"], [164, 2, 1, "", "from_bytes"], [164, 2, 1, "", "from_thrift"], [164, 2, 1, "", "set_qreg"], [164, 3, 1, "", "state"]], "qat.core.Schedule": [[165, 2, 1, "", "dump"], [165, 2, 1, "", "get_variables"], [165, 2, 1, "", "load"], [165, 2, 1, "", "to_job"]], "qat.core.Term": [[167, 4, 1, "", "coeff"], [167, 4, 1, "", "op"], [167, 4, 1, "", "qbits"]], "qat.core.Topology": [[168, 2, 1, "", "add_edge"], [168, 2, 1, "", "dump"], [168, 3, 1, "", "file_extension"], [168, 2, 1, "", "from_bytes"], [168, 2, 1, "", "from_nx"], [168, 2, 1, "", "from_thrift"], [168, 2, 1, "", "load"], [168, 3, 1, "", "nbqbits"], [168, 2, 1, "", "set_nbqbits"], [168, 2, 1, "", "to_nx"], [168, 2, 1, "", "to_thrift"]], "qat.core.Variable": [[170, 2, 1, "", "differentiate"], [170, 2, 1, "", "get_variables"], [170, 2, 1, "", "to_thrift"]], "qat.core.application": [[123, 1, 1, "", "Application"], [124, 1, 1, "", "RemoteApplication"]], "qat.core.application.Application": [[123, 2, 1, "", "execute"], [123, 2, 1, "", "serve"]], "qat.core.assertion": [[112, 5, 1, "", "assert_plugin"], [113, 5, 1, "", "assert_qpu"]], "qat.core.circuit_builder.builder": [[129, 1, 1, "", "VariableNameNotAvailable"]], "qat.core.circuit_builder.matrix_util": [[126, 5, 1, "", "default_gate_set"], [127, 5, 1, "", "get_param_generator"], [128, 5, 1, "", "get_predef_generator"]], "qat.core.console": [[117, 5, 1, "", "display"]], "qat.core.exceptions_utils": [[131, 1, 1, "", "exception_only"], [132, 5, 1, "", "generator_exception_only"], [133, 5, 1, "", "plugin_exception_only"], [134, 5, 1, "", "qpu_exception_only"]], "qat.core.formula_eval": [[118, 5, 1, "", "evaluate"]], "qat.core.gate_set": [[136, 1, 1, "", "GateSet"], [137, 1, 1, "", "GateSignature"], [138, 1, 1, "", "GateSyntaxRedefinition"]], "qat.core.gate_set.GateSet": [[136, 2, 1, "", "add_signature"], [136, 2, 1, "", "union"]], "qat.core.gate_set.GateSignature": [[137, 2, 1, "", "get_circuit"], [137, 2, 1, "", "get_matrix"], [137, 2, 1, "", "set_circuit_generator"], [137, 2, 1, "", "set_matrix_generator"]], "qat.core.printer": [[162, 5, 1, "", "plot_in_notebook"]], "qat.core.qpu": [[140, 1, 1, "", "CommonQPU"]], "qat.core.simutil": [[171, 5, 1, "", "wavefunction"]], "qat.core.spins": [[142, 5, 1, "", "integer_to_spins"], [143, 5, 1, "", "spins_to_integer"]], "qat.core.util": [[121, 5, 1, "", "load_state_vector_from_bin"]], "qat.core.variables": [[147, 1, 1, "", "ArithExpression"], [158, 1, 1, "", "Symbol"], [145, 5, 1, "", "abso"], [146, 5, 1, "", "angle"], [148, 5, 1, "", "atan2"], [149, 5, 1, "", "cos"], [150, 5, 1, "", "exp"], [151, 5, 1, "", "get_item"], [152, 5, 1, "", "heaviside"], [153, 5, 1, "", "imag"], [154, 5, 1, "", "ln"], [155, 5, 1, "", "real"], [156, 5, 1, "", "sin"], [157, 5, 1, "", "sqrt"], [159, 5, 1, "", "vmax"]], "qat.core.variables.ArithExpression": [[147, 2, 1, "", "differentiate"], [147, 2, 1, "", "from_string"], [147, 2, 1, "", "get_variables"], [147, 2, 1, "", "pretty_print"], [147, 2, 1, "", "to_thrift"]], "qat.core.wrappers.result": [[166, 1, 1, "", "State"], [111, 5, 1, "", "aggregate_data"]], "qat.core.wrappers.result.State": [[166, 3, 1, "", "bitstring"], [166, 3, 1, "", "int"], [166, 3, 1, "", "lsb_int"], [166, 3, 1, "", "value"]], "qat.devices": [[173, 1, 1, "", "AllToAll"], [174, 6, 1, "", "GOOGLE_SYCAMORE"], [175, 1, 1, "", "GridDevice"], [176, 6, 1, "", "IBM_BURLINGTON"], [177, 6, 1, "", "IBM_JOHANNESBURG"], [178, 6, 1, "", "IBM_MELBOURNE"], [179, 6, 1, "", "IBM_RUESCHLIKON"], [180, 6, 1, "", "IBM_SINGAPORE"], [181, 6, 1, "", "IBM_TOKYO"], [182, 6, 1, "", "IBM_YORKTOWN"], [183, 1, 1, "", "LineDevice"], [184, 6, 1, "", "RIGETTI_AGAVE"], [185, 6, 1, "", "RIGETTI_ASPEN"], [186, 1, 1, "", "SquareGridDevice"], [187, 6, 1, "", "ZUCHONGZHI"]], "qat.fermion": [[188, 0, 0, "-", "chemistry"], [188, 0, 0, "-", "circuits"], [188, 0, 0, "-", "hamiltonians"], [188, 0, 0, "-", "phase_estimation"], [188, 0, 0, "-", "transforms"]], "qat.fermion.chemistry": [[188, 0, 0, "-", "qse"], [188, 0, 0, "-", "ucc"]], "qat.fermion.chemistry.pyscf_tools": [[211, 5, 1, "", "perform_pyscf_computation"]], "qat.fermion.chemistry.qse": [[189, 5, 1, "", "apply_quantum_subspace_expansion"]], "qat.fermion.chemistry.ucc": [[190, 5, 1, "", "compute_active_space_integrals"], [191, 5, 1, "", "construct_ucc_ansatz"], [192, 5, 1, "", "convert_to_h_integrals"], [195, 5, 1, "", "get_cluster_ops"], [196, 5, 1, "", "get_hf_ket"], [197, 5, 1, "", "guess_init_params"], [212, 5, 1, "", "select_active_orbitals"], [214, 5, 1, "", "transform_integrals_to_new_basis"]], "qat.fermion.chemistry.wrapper": [[208, 1, 1, "", "MolecularHamiltonian"], [209, 1, 1, "", "MoleculeInfo"]], "qat.fermion.chemistry.wrapper.MolecularHamiltonian": [[208, 4, 1, "", "constant_coeff"], [208, 2, 1, "", "get_electronic_hamiltonian"], [208, 4, 1, "", "nqbits"], [208, 4, 1, "", "one_body_integrals"], [208, 2, 1, "", "select_active_space"], [208, 2, 1, "", "transform_basis"], [208, 4, 1, "", "two_body_integrals"]], "qat.fermion.chemistry.wrapper.MoleculeInfo": [[209, 4, 1, "", "constant_coeff"], [209, 4, 1, "", "hamiltonian"], [209, 4, 1, "", "n_electrons"], [209, 4, 1, "", "noons"], [209, 4, 1, "", "nqbits"], [209, 4, 1, "", "one_body_integrals"], [209, 4, 1, "", "orbital_energies"], [209, 2, 1, "", "restrict_active_space"], [209, 4, 1, "", "two_body_integrals"]], "qat.fermion.circuits": [[199, 5, 1, "", "make_compressed_ldca_circ"], [201, 5, 1, "", "make_general_hwe_circ"], [203, 5, 1, "", "make_ldca_circ"], [204, 5, 1, "", "make_mr_circ"], [205, 5, 1, "", "make_mrep_circ"], [206, 5, 1, "", "make_shallow_circ"]], "qat.fermion.hamiltonians": [[193, 1, 1, "", "ElectronicStructureHamiltonian"], [194, 1, 1, "", "FermionHamiltonian"], [213, 1, 1, "", "SpinHamiltonian"], [198, 5, 1, "", "make_anderson_model"], [200, 5, 1, "", "make_embedded_model"], [202, 5, 1, "", "make_hubbard_model"]], "qat.fermion.hamiltonians.ElectronicStructureHamiltonian": [[193, 4, 1, "", "constant_coeff"], [193, 2, 1, "", "copy"], [193, 2, 1, "", "dag"], [193, 2, 1, "", "get_matrix"], [193, 4, 1, "", "hpq"], [193, 4, 1, "", "hpqrs"], [193, 2, 1, "", "to_fermion"], [193, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.FermionHamiltonian": [[194, 4, 1, "", "constant_coeff"], [194, 2, 1, "", "copy"], [194, 2, 1, "", "dag"], [194, 2, 1, "", "get_matrix"], [194, 4, 1, "", "matrix"], [194, 4, 1, "", "nbqbits"], [194, 4, 1, "", "normal_order"], [194, 4, 1, "", "terms"], [194, 2, 1, "", "to_electronic"], [194, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.SpinHamiltonian": [[213, 4, 1, "", "constant_coeff"], [213, 2, 1, "", "copy"], [213, 2, 1, "", "dag"], [213, 2, 1, "", "get_matrix"], [213, 4, 1, "", "matrix"], [213, 4, 1, "", "nbqbits"], [213, 4, 1, "", "terms"]], "qat.fermion.phase_estimation": [[210, 1, 1, "", "perform_phase_estimation"]], "qat.fermion.transforms": [[215, 5, 1, "", "transform_to_bk_basis"], [216, 5, 1, "", "transform_to_jw_basis"], [217, 5, 1, "", "transform_to_parity_basis"]], "qat.fermion.trotterisation": [[207, 5, 1, "", "make_trotterisation_routine"]], "qat.fusion.strategies": [[219, 1, 1, "", "AdjacentStrategy"], [220, 1, 1, "", "EagerStrategy"], [221, 1, 1, "", "NaiveStrategy"]], "qat.generators": [[223, 1, 1, "", "AbstractGenerator"], [224, 1, 1, "", "CombinatorialOptimizerGenerator"], [225, 1, 1, "", "GraphColouringGenerator"], [226, 1, 1, "", "GraphPartitioningGenerator"], [227, 1, 1, "", "KCliqueGenerator"], [228, 1, 1, "", "MaxCutGenerator"], [229, 1, 1, "", "RemoteBatchGenerator"], [230, 1, 1, "", "VertexCoverGenerator"]], "qat.generators.AbstractGenerator": [[223, 2, 1, "", "generate"], [223, 2, 1, "", "serve"], [223, 2, 1, "", "wrapper_post_process"]], "qat.generators.CombinatorialOptimizerGenerator": [[224, 2, 1, "", "generate"], [224, 2, 1, "", "post_process"]], "qat.generators.GraphColouringGenerator": [[225, 2, 1, "", "generate"]], "qat.generators.GraphPartitioningGenerator": [[226, 2, 1, "", "generate"]], "qat.generators.KCliqueGenerator": [[227, 2, 1, "", "generate"]], "qat.generators.MaxCutGenerator": [[228, 2, 1, "", "generate"]], "qat.generators.RemoteBatchGenerator": [[229, 2, 1, "", "generate"], [229, 2, 1, "", "post_process"]], "qat.generators.VertexCoverGenerator": [[230, 2, 1, "", "generate"]], "qat.hardware": [[232, 1, 1, "", "DefaultGatesSpecification"], [233, 1, 1, "", "DefaultHardwareModel"], [234, 1, 1, "", "GatesSpecification"], [235, 1, 1, "", "HardwareModel"], [236, 5, 1, "", "make_depolarizing_hardware_model"]], "qat.hardware.DefaultGatesSpecification": [[232, 4, 1, "", "gate_times"], [232, 2, 1, "", "get_gate_time"], [232, 2, 1, "", "get_quantum_channel"], [232, 4, 1, "", "is_noiseless"], [232, 4, 1, "", "meas"], [232, 4, 1, "", "quantum_channels"], [232, 4, 1, "", "state_prep"]], "qat.hardware.DefaultHardwareModel": [[233, 2, 1, "", "cleanup_jump_operators"], [233, 4, 1, "", "gate_noise"], [233, 4, 1, "", "gates_specification"], [233, 4, 1, "", "idle_noise"], [233, 4, 1, "", "jump_operators"], [233, 4, 1, "", "params_specification"], [233, 2, 1, "", "shift_jump_operators"]], "qat.hardware.GatesSpecification": [[234, 4, 1, "", "gate_times"], [234, 2, 1, "", "get_gate_time"], [234, 2, 1, "", "get_quantum_channel"], [234, 4, 1, "", "is_noiseless"], [234, 4, 1, "", "meas"], [234, 4, 1, "", "quantum_channels"], [234, 4, 1, "", "state_prep"]], "qat.hardware.HardwareModel": [[235, 2, 1, "", "cleanup_jump_operators"], [235, 4, 1, "", "gate_noise"], [235, 4, 1, "", "gates_specification"], [235, 4, 1, "", "idle_noise"], [235, 4, 1, "", "jump_operators"], [235, 4, 1, "", "params_specification"], [235, 2, 1, "", "shift_jump_operators"]], "qat.interop": [[65, 0, 0, "-", "cirq"], [68, 0, 0, "-", "openqasm"], [70, 0, 0, "-", "projectq"], [73, 0, 0, "-", "pyquil"], [77, 0, 0, "-", "qiskit"]], "qat.interop.cirq": [[66, 5, 1, "", "cirq_to_qlm"], [67, 5, 1, "", "qlm_to_cirq"]], "qat.interop.openqasm": [[69, 1, 1, "", "OqasmParser"]], "qat.interop.openqasm.OqasmParser": [[69, 2, 1, "", "compile"]], "qat.interop.projectq": [[71, 1, 1, "", "AqasmEngine"], [72, 1, 1, "", "AqasmPrinter"]], "qat.interop.projectq.AqasmEngine": [[71, 2, 1, "", "projectq_to_qlm"]], "qat.interop.pyquil": [[75, 1, 1, "", "PyquilQPU"], [74, 5, 1, "", "pyquil_to_qlm"], [76, 5, 1, "", "qlm_to_pyquil"]], "qat.interop.pyquil.PyquilQPU": [[75, 2, 1, "", "set_qpu"], [75, 2, 1, "", "submit"], [75, 2, 1, "", "submit_job"]], "qat.interop.qiskit": [[78, 1, 1, "", "AsyncBackendToQPU"], [79, 1, 1, "", "BackendToQPU"], [84, 1, 1, "", "QPUToBackend"], [81, 1, 1, "", "QiskitJob"], [80, 5, 1, "", "qiskit_to_qlm"], [83, 5, 1, "", "qlm_to_qiskit"]], "qat.interop.qiskit.AsyncBackendToQPU": [[78, 2, 1, "", "retrieve_job"], [78, 2, 1, "", "submit"]], "qat.interop.qiskit.BackendToQPU": [[79, 2, 1, "", "submit"]], "qat.interop.qiskit.QPUToBackend": [[84, 2, 1, "", "set_qpu"]], "qat.interop.qiskit.QiskitJob": [[81, 2, 1, "", "cancel"], [81, 2, 1, "", "dump"], [81, 2, 1, "", "job_id"], [81, 2, 1, "", "result"], [81, 2, 1, "", "status"]], "qat.interop.qiskit.runtime": [[82, 1, 1, "", "QiskitRuntimeQPU"]], "qat.interop.qiskit.runtime.QiskitRuntimeQPU": [[82, 2, 1, "", "submit"]], "qat.lang": [[238, 1, 1, "", "AbstractGate"], [268, 1, 1, "", "Program"], [279, 1, 1, "", "QRoutine"], [237, 0, 0, "-", "algorithms"], [241, 5, 1, "", "build_gate"], [275, 5, 1, "", "qfunc"], [278, 5, 1, "", "qrout"]], "qat.lang.AQASM": [[250, 0, 0, "-", "arithmetic"], [256, 0, 0, "-", "classarith"], [260, 0, 0, "-", "qftarith"]], "qat.lang.AQASM.arithmetic": [[251, 5, 1, "", "add_const_mod"], [252, 5, 1, "", "add_mod"], [253, 5, 1, "", "modular_exp"], [254, 5, 1, "", "mult_const"], [255, 5, 1, "", "mult_const_mod"]], "qat.lang.AQASM.bits": [[240, 1, 1, "", "BoolFormula"], [243, 1, 1, "", "CRegister"], [242, 1, 1, "", "Cbit"], [277, 1, 1, "", "QRegister"], [270, 1, 1, "", "Qbit"]], "qat.lang.AQASM.classarith": [[257, 5, 1, "", "add"], [258, 5, 1, "", "add_const"], [259, 5, 1, "", "cuccaro_add"]], "qat.lang.AQASM.gates": [[244, 1, 1, "", "Gate"], [266, 1, 1, "", "ParamGate"]], "qat.lang.AQASM.gates.ParamGate": [[266, 2, 1, "", "bind_variables"], [266, 2, 1, "", "dag"], [266, 2, 1, "", "display"], [266, 2, 1, "", "get_variables"]], "qat.lang.AQASM.misc": [[245, 5, 1, "", "generate_gate_set"]], "qat.lang.AQASM.qbool": [[271, 1, 1, "", "QBool"], [272, 1, 1, "", "QBoolArray"], [273, 1, 1, "", "QClause"]], "qat.lang.AQASM.qbool.QBool": [[271, 2, 1, "", "cast"], [271, 2, 1, "", "cast_to"], [271, 2, 1, "", "evaluate"], [271, 2, 1, "", "phase"], [271, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QBoolArray": [[272, 2, 1, "", "cast"], [272, 2, 1, "", "evaluate"], [272, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QClause": [[273, 2, 1, "", "evaluate"], [273, 2, 1, "", "phase"], [273, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qftarith": [[265, 5, 1, "", "QFT"], [261, 5, 1, "", "add"], [262, 5, 1, "", "add_const"], [263, 5, 1, "", "mult"], [264, 5, 1, "", "mult_const"]], "qat.lang.AQASM.qint": [[269, 1, 1, "", "QArithExp"], [274, 1, 1, "", "QCompExp"], [276, 1, 1, "", "QInt"]], "qat.lang.AQASM.qint.QArithExp": [[269, 2, 1, "", "evaluate"]], "qat.lang.AQASM.qint.QCompExp": [[274, 2, 1, "", "evaluate"], [274, 2, 1, "", "phase"], [274, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qint.QInt": [[276, 2, 1, "", "cast"], [276, 2, 1, "", "evaluate"], [276, 2, 1, "", "qbits_list"], [276, 2, 1, "", "set_value"]], "qat.lang.AbstractGate": [[238, 2, 1, "", "set_dag"]], "qat.lang.Program": [[268, 2, 1, "", "apply"], [268, 2, 1, "", "calloc"], [268, 2, 1, "", "cbreak"], [268, 2, 1, "", "cc_apply"], [268, 2, 1, "", "comment"], [268, 2, 1, "", "conjugate"], [268, 2, 1, "", "display"], [268, 2, 1, "", "export"], [268, 2, 1, "", "free_ancillae"], [268, 2, 1, "", "get_free_ancillae"], [268, 2, 1, "", "logic"], [268, 2, 1, "", "measure"], [268, 2, 1, "", "new_var"], [268, 2, 1, "", "qalloc"], [268, 2, 1, "", "reset"], [268, 2, 1, "", "run"], [268, 2, 1, "", "to_circ"]], "qat.lang.QRoutine": [[279, 2, 1, "", "apply"], [279, 2, 1, "", "compute"], [279, 2, 1, "", "free_ancillae"], [279, 2, 1, "", "get_free_ancillae"], [279, 2, 1, "", "new_wires"], [279, 2, 1, "", "set_ancillae"], [279, 2, 1, "", "uncompute"]], "qat.lang.algorithms": [[239, 5, 1, "", "amplification_step"], [267, 5, 1, "", "phase_estimation"], [280, 5, 1, "", "quantum_counting"]], "qat.lang.algorithms.amplification": [[246, 5, 1, "", "grover_diffusion"], [247, 5, 1, "", "householder"], [281, 5, 1, "", "uniform_distribution"]], "qat.lang.linking": [[249, 1, 1, "", "Linker"]], "qat.lang.linking.Linker": [[249, 2, 1, "", "add_signature"], [249, 2, 1, "", "clear_gate_set"], [249, 2, 1, "", "compile"], [249, 2, 1, "", "link"], [249, 2, 1, "", "link_gates"], [249, 2, 1, "", "link_matrices"], [249, 2, 1, "", "set_gate_set"]], "qat.lang.models": [[248, 1, 1, "", "KPTree"]], "qat.lang.models.KPTree": [[248, 2, 1, "", "get_routine"]], "qat.nnize.metrics": [[283, 1, 1, "", "DurationMetric"], [284, 1, 1, "", "QuantumCostMetric"]], "qat.nnize.metrics.DurationMetric": [[283, 2, 1, "", "get_best_index"], [283, 2, 1, "", "init"], [283, 2, 1, "", "minimize_idle_time"], [283, 2, 1, "", "minimize_overall_time"], [283, 2, 1, "", "set_gate_time"], [283, 2, 1, "", "set_nnizer"]], "qat.nnize.metrics.QuantumCostMetric": [[284, 2, 1, "", "get_best_index"], [284, 2, 1, "", "init"], [284, 2, 1, "", "set_nnizer"]], "qat.opt": [[287, 1, 1, "", "BILP"], [290, 1, 1, "", "CombinatorialProblem"], [291, 1, 1, "", "GraphColouring"], [292, 1, 1, "", "GraphPartitioning"], [293, 1, 1, "", "Ising"], [294, 1, 1, "", "KClique"], [306, 1, 1, "", "MWIS"], [295, 1, 1, "", "MaxCut"], [296, 1, 1, "", "MixingFactory"], [307, 1, 1, "", "NumberPartitioning"], [308, 1, 1, "", "QUBO"], [311, 1, 1, "", "VertexCover"], [297, 0, 0, "-", "mixing_factory"], [301, 0, 0, "-", "results"]], "qat.opt.BILP": [[287, 2, 1, "", "get_best_parameters"]], "qat.opt.CombinatorialProblem": [[290, 2, 1, "", "add_clause"], [290, 2, 1, "", "aqo_job"], [290, 2, 1, "", "decode_rydberg"], [290, 2, 1, "", "decode_rydberg_meta_data"], [290, 2, 1, "", "get_observable"], [290, 2, 1, "", "new_var"], [290, 2, 1, "", "new_vars"], [290, 2, 1, "", "qaoa_job"], [290, 2, 1, "", "ryd_job"], [290, 2, 1, "", "sqa_job"], [290, 2, 1, "", "to_bqm"], [290, 2, 1, "", "to_ising"], [290, 2, 1, "", "to_job"], [290, 2, 1, "", "to_qubo"]], "qat.opt.GraphColouring": [[291, 2, 1, "", "get_best_parameters"], [291, 2, 1, "", "parse_result"]], "qat.opt.GraphPartitioning": [[292, 2, 1, "", "get_best_parameters"], [292, 2, 1, "", "parse_result"]], "qat.opt.Ising": [[293, 2, 1, "", "aqo_job"], [293, 2, 1, "", "decode_rydberg"], [293, 2, 1, "", "decode_rydberg_meta_data"], [293, 2, 1, "", "dump"], [293, 2, 1, "", "from_thrift"], [293, 2, 1, "", "get_best_parameters"], [293, 2, 1, "", "get_j_h_and_offset"], [293, 2, 1, "", "get_observable"], [293, 3, 1, "", "j_coupling_matrix"], [293, 2, 1, "", "load"], [293, 3, 1, "", "magnetic_field_h"], [293, 2, 1, "", "qaoa_job"], [293, 2, 1, "", "ryd_job"], [293, 2, 1, "", "sqa_job"], [293, 2, 1, "", "to_bqm"], [293, 2, 1, "", "to_combinatorial_problem"], [293, 2, 1, "", "to_job"], [293, 2, 1, "", "to_qubo"]], "qat.opt.KClique": [[294, 2, 1, "", "get_best_parameters"], [294, 2, 1, "", "parse_result"]], "qat.opt.MWIS": [[306, 2, 1, "", "aqo_job"], [306, 2, 1, "", "decode_rydberg"], [306, 2, 1, "", "decode_rydberg_meta_data"], [306, 2, 1, "", "dump"], [306, 2, 1, "", "from_thrift"], [306, 2, 1, "", "get_best_parameters"], [306, 2, 1, "", "get_j_h_and_offset"], [306, 2, 1, "", "get_observable"], [306, 4, 1, "", "graph"], [306, 3, 1, "", "j_coupling_matrix"], [306, 2, 1, "", "load"], [306, 3, 1, "", "magnetic_field_h"], [306, 2, 1, "", "qaoa_job"], [306, 2, 1, "", "ryd_job"], [306, 2, 1, "", "sqa_job"], [306, 2, 1, "", "to_bqm"], [306, 2, 1, "", "to_combinatorial_problem"], [306, 2, 1, "", "to_job"], [306, 2, 1, "", "to_qubo"]], "qat.opt.MaxCut": [[295, 2, 1, "", "get_best_parameters"], [295, 2, 1, "", "parse_result"]], "qat.opt.MixingFactory": [[296, 2, 1, "", "bit_flip"], [296, 2, 1, "", "bit_move"]], "qat.opt.NumberPartitioning": [[307, 2, 1, "", "get_best_parameters"]], "qat.opt.QUBO": [[308, 2, 1, "", "aqo_job"], [308, 2, 1, "", "decode_rydberg"], [308, 2, 1, "", "decode_rydberg_meta_data"], [308, 2, 1, "", "get_best_parameters"], [308, 2, 1, "", "get_observable"], [308, 2, 1, "", "get_q_and_offset"], [308, 3, 1, "", "q_matrix"], [308, 2, 1, "", "qaoa_job"], [308, 2, 1, "", "ryd_job"], [308, 2, 1, "", "sqa_job"], [308, 2, 1, "", "to_bqm"], [308, 2, 1, "", "to_combinatorial_problem"], [308, 2, 1, "", "to_ising"], [308, 2, 1, "", "to_job"]], "qat.opt.VertexCover": [[311, 2, 1, "", "get_best_parameters"], [311, 2, 1, "", "parse_result"]], "qat.opt.binary_linear_integer_programming": [[287, 5, 1, "", "produce_q_and_offset"]], "qat.opt.boolexpr": [[289, 1, 1, "", "Clause"], [310, 1, 1, "", "Var"]], "qat.opt.boolexpr.Clause": [[289, 2, 1, "", "and_clause"], [289, 2, 1, "", "evaluate"], [289, 2, 1, "", "get_terms_obs"], [289, 2, 1, "", "get_variables"], [289, 2, 1, "", "neg_clause"], [289, 2, 1, "", "or_clause"], [289, 2, 1, "", "xor_clause"]], "qat.opt.boolexpr.Var": [[310, 2, 1, "", "evaluate"], [310, 2, 1, "", "get_terms_obs"], [310, 2, 1, "", "get_variables"], [310, 4, 1, "", "index"]], "qat.opt.circuit_generator": [[288, 1, 1, "", "CircuitGenerator"]], "qat.opt.circuit_generator.CircuitGenerator": [[288, 2, 1, "", "get_observable"], [288, 2, 1, "", "qaoa_job"]], "qat.opt.graph_colouring": [[291, 5, 1, "", "produce_q_and_offset"]], "qat.opt.graph_partitioning": [[292, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.k_clique": [[294, 5, 1, "", "produce_q_and_offset"]], "qat.opt.max_cut": [[295, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.mixing_factory": [[298, 1, 1, "", "IndependentAQO"], [299, 1, 1, "", "InitialStateBuilder"], [300, 1, 1, "", "SimpleInitialState"]], "qat.opt.mixing_factory.IndependentAQO": [[298, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.InitialStateBuilder": [[299, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.SimpleInitialState": [[300, 2, 1, "", "inject_initial_state"]], "qat.opt.number_partitioning": [[307, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.results": [[302, 1, 1, "", "CombinatorialResult"], [303, 1, 1, "", "GraphPartitioningResult"], [304, 1, 1, "", "KCliqueResult"], [305, 1, 1, "", "VertexCoverResult"]], "qat.opt.results.GraphPartitioningResult": [[303, 2, 1, "", "display"]], "qat.opt.results.KCliqueResult": [[304, 3, 1, "", "clique"], [304, 2, 1, "", "display"]], "qat.opt.results.VertexCoverResult": [[305, 3, 1, "", "cover"], [305, 2, 1, "", "display"]], "qat.opt.schedule_generator": [[309, 1, 1, "", "ScheduleGenerator"]], "qat.opt.schedule_generator.ScheduleGenerator": [[309, 2, 1, "", "aqo_job"], [309, 2, 1, "", "get_observable"]], "qat.opt.vertex_cover": [[311, 5, 1, "", "produce_q_and_offset"]], "qat.pbo": [[313, 1, 1, "", "AbstractRegister"], [314, 1, 1, "", "GateName"], [315, 1, 1, "", "GraphCircuit"], [326, 1, 1, "", "PatternGroup"], [327, 1, 1, "", "VAR"], [317, 0, 0, "-", "collections"], [319, 0, 0, "-", "decompositions"]], "qat.pbo.AbstractRegister": [[313, 2, 1, "", "len"], [313, 2, 1, "", "undirected"]], "qat.pbo.GraphCircuit": [[315, 2, 1, "", "add_abstract_gate"], [315, 2, 1, "", "count_pattern"], [315, 2, 1, "", "find_pattern"], [315, 2, 1, "", "load_circuit"], [315, 2, 1, "", "replace_pattern"], [315, 2, 1, "", "to_circ"]], "qat.pbo.PatternGroup": [[326, 2, 1, "", "add_pattern"], [326, 2, 1, "", "pattern_to_remove"]], "qat.pbo.VAR": [[327, 2, 1, "", "add_function"], [327, 2, 1, "", "add_prohibited_value"], [327, 2, 1, "", "copy"], [327, 2, 1, "", "eval"], [327, 2, 1, "", "pop_prohibited_value"], [327, 2, 1, "", "set_value"]], "qat.pbo.collections": [[318, 5, 1, "", "collection_from_target"]], "qat.pbo.decompositions": [[321, 5, 1, "", "ions_decomposition"], [322, 5, 1, "", "u3_decomposition"], [323, 5, 1, "", "xzx_decomposition"], [324, 5, 1, "", "zxz_decomposition"], [325, 5, 1, "", "zyz_decomposition"]], "qat.pbo.decompositions.decompositions": [[320, 5, 1, "", "get_euler_angles"]], "qat.pbo.kak": [[316, 5, 1, "", "list_decompositions"]], "qat.plugins": [[329, 1, 1, "", "AbstractPlugin"], [330, 1, 1, "", "AdaptVQEPlugin"], [331, 1, 1, "", "CircuitInliner"], [332, 1, 1, "", "CostFunctionPlugin"], [333, 1, 1, "", "Display"], [334, 1, 1, "", "FusionPlugin"], [335, 1, 1, "", "GateRewriter"], [336, 1, 1, "", "GradientDescentOptimizer"], [337, 1, 1, "", "InitialMapping"], [338, 1, 1, "", "Junction"], [339, 1, 1, "", "KAKCompression"], [340, 1, 1, "", "LazySynthesis"], [341, 1, 1, "", "MultipleLaunchesAnalyzer"], [342, 1, 1, "", "NISQCompiler"], [343, 1, 1, "", "Nnizer"], [344, 1, 1, "", "ObservableSplitter"], [345, 1, 1, "", "Optimizer"], [347, 1, 1, "", "PSOMinimizePlugin"], [346, 1, 1, "", "PatternManager"], [348, 1, 1, "", "QuameleonPlugin"], [349, 1, 1, "", "Remap"], [350, 1, 1, "", "RemotePlugin"], [353, 1, 1, "", "SPSAMinimizePlugin"], [351, 1, 1, "", "ScipyMinimizePlugin"], [352, 1, 1, "", "SeqOptim"], [354, 1, 1, "", "TransformObservable"], [355, 1, 1, "", "ZeroNoiseExtrapolator"]], "qat.plugins.AbstractPlugin": [[329, 2, 1, "", "compile"], [329, 2, 1, "", "do_post_processing"], [329, 2, 1, "", "post_process"], [329, 2, 1, "", "serve"]], "qat.plugins.AdaptVQEPlugin": [[330, 2, 1, "", "compile"]], "qat.plugins.CircuitInliner": [[331, 2, 1, "", "compile"]], "qat.plugins.CostFunctionPlugin": [[332, 2, 1, "", "compile"]], "qat.plugins.Display": [[333, 2, 1, "", "compile"]], "qat.plugins.FusionPlugin": [[334, 2, 1, "", "compile"]], "qat.plugins.GateRewriter": [[335, 2, 1, "", "compile"]], "qat.plugins.GradientDescentOptimizer": [[336, 2, 1, "", "compile"]], "qat.plugins.InitialMapping": [[337, 2, 1, "", "compile"]], "qat.plugins.Junction": [[338, 2, 1, "", "execute"], [338, 2, 1, "", "run"]], "qat.plugins.KAKCompression": [[339, 2, 1, "", "compile"]], "qat.plugins.LazySynthesis": [[340, 2, 1, "", "compile"]], "qat.plugins.MultipleLaunchesAnalyzer": [[341, 2, 1, "", "compile"]], "qat.plugins.NISQCompiler": [[342, 2, 1, "", "compile"]], "qat.plugins.Nnizer": [[343, 2, 1, "", "compile"]], "qat.plugins.ObservableSplitter": [[344, 2, 1, "", "compile"]], "qat.plugins.Optimizer": [[345, 2, 1, "", "evaluate"], [345, 2, 1, "", "optimize"]], "qat.plugins.PSOMinimizePlugin": [[347, 2, 1, "", "compile"]], "qat.plugins.PatternManager": [[346, 2, 1, "", "add_abstract_gate"], [346, 2, 1, "", "compile"], [346, 2, 1, "", "new_group"], [346, 2, 1, "", "replace_pattern"], [346, 2, 1, "", "set_compile_attributes"]], "qat.plugins.QuameleonPlugin": [[348, 2, 1, "", "compile"]], "qat.plugins.Remap": [[349, 2, 1, "", "compile"]], "qat.plugins.RemotePlugin": [[350, 2, 1, "", "compile"]], "qat.plugins.SPSAMinimizePlugin": [[353, 2, 1, "", "compile"]], "qat.plugins.ScipyMinimizePlugin": [[351, 2, 1, "", "compile"], [351, 2, 1, "", "set_options"]], "qat.plugins.SeqOptim": [[352, 2, 1, "", "compile"]], "qat.plugins.TransformObservable": [[354, 2, 1, "", "compile"]], "qat.plugins.ZeroNoiseExtrapolator": [[355, 2, 1, "", "compile"]], "qat.pylinalg": [[86, 0, 0, "-", "simulator"]], "qat.pylinalg.simulator": [[87, 5, 1, "", "mat2nparray"], [88, 5, 1, "", "measure"], [89, 5, 1, "", "project"], [90, 5, 1, "", "raise_break"], [91, 5, 1, "", "reset"], [92, 5, 1, "", "simulate"]], "qat.qiskit": [[357, 1, 1, "", "Estimator"], [358, 1, 1, "", "QaptivaService"], [360, 1, 1, "", "Sampler"]], "qat.qiskit.Estimator": [[357, 2, 1, "", "run"]], "qat.qiskit.QaptivaService": [[358, 2, 1, "", "backend"], [358, 2, 1, "", "backends"]], "qat.qiskit.Sampler": [[360, 2, 1, "", "run"]], "qat.qiskit.converters": [[359, 5, 1, "", "qiskit_to_qlm"]], "qat.qpus": [[362, 1, 1, "", "CLinalg"], [365, 1, 1, "", "ClassicalQPU"], [363, 1, 1, "", "PyLinalg"], [369, 1, 1, "", "QPUHandler"], [370, 1, 1, "", "QutipQPU"], [371, 1, 1, "", "RemoteQPU"], [364, 1, 1, "", "SimulatedAnnealing"], [366, 5, 1, "", "get_current_qpu"], [367, 5, 1, "", "get_default_qpu"], [368, 5, 1, "", "get_noisy_qpu"]], "qat.qpus.CLinalg": [[362, 2, 1, "", "submit"]], "qat.qpus.PyLinalg": [[363, 2, 1, "", "serve"], [363, 2, 1, "", "submit"], [363, 2, 1, "", "submit_job"]], "qat.qpus.QPUHandler": [[369, 2, 1, "", "apply_resource_consumption_limits"], [369, 2, 1, "", "estimate_resources_for_batch"], [369, 2, 1, "", "get_specs"], [369, 2, 1, "", "serve"], [369, 2, 1, "", "submit"], [369, 2, 1, "", "submit_job"]], "qat.qpus.SimulatedAnnealing": [[364, 2, 1, "", "submit_job"]], "qat.quops": [[374, 1, 1, "", "ChannelRepresentations"], [394, 1, 1, "", "ParametricAmplitudeDamping"], [395, 1, 1, "", "ParametricGateNoise"], [396, 1, 1, "", "ParametricPureDephasing"], [397, 1, 1, "", "ParametricQuantumChannel"], [399, 1, 1, "", "QuantumChannel"], [400, 1, 1, "", "QuantumChannelChi"], [401, 1, 1, "", "QuantumChannelChoi"], [402, 1, 1, "", "QuantumChannelKraus"], [403, 1, 1, "", "QuantumChannelPTM"], [383, 5, 1, "", "is_completely_positive"], [384, 5, 1, "", "is_trace_preserving"], [385, 5, 1, "", "is_trace_reducing"], [386, 5, 1, "", "is_unital"], [387, 5, 1, "", "make_avg_fid_equiv_depol_channel"], [388, 5, 1, "", "make_depolarizing_channel"], [389, 5, 1, "", "make_generalized_amplitude_damping"], [372, 0, 0, "-", "metrics"]], "qat.quops.ParametricAmplitudeDamping": [[394, 4, 1, "", "T_1"], [394, 4, 1, "", "name"], [394, 2, 1, "", "prob"]], "qat.quops.ParametricPureDephasing": [[396, 4, 1, "", "T_phi"], [396, 4, 1, "", "name"], [396, 2, 1, "", "prob"], [396, 2, 1, "", "ptilde"]], "qat.quops.QuantumChannelChi": [[400, 2, 1, "", "apply_to"], [400, 4, 1, "", "arity"], [400, 4, 1, "", "matrix"], [400, 4, 1, "", "matrix_basis"], [400, 4, 1, "", "name"], [400, 2, 1, "", "to_kraus"]], "qat.quops.QuantumChannelChoi": [[401, 4, 1, "", "arity"], [401, 4, 1, "", "matrix"], [401, 4, 1, "", "name"], [401, 2, 1, "", "to_kraus"], [401, 2, 1, "", "to_ptm"]], "qat.quops.QuantumChannelKraus": [[402, 2, 1, "", "apply_to"], [402, 2, 1, "", "apply_to_vector"], [402, 4, 1, "", "kraus_operators"], [402, 2, 1, "", "kraus_rank"], [402, 4, 1, "", "name"], [402, 4, 1, "", "nbctrls"], [402, 2, 1, "", "to_chi"], [402, 2, 1, "", "to_choi"], [402, 2, 1, "", "to_ptm"]], "qat.quops.QuantumChannelPTM": [[403, 2, 1, "", "apply_to"], [403, 4, 1, "", "arity"], [403, 3, 1, "", "matrix"], [403, 4, 1, "", "name"], [403, 3, 1, "", "ptm"], [403, 3, 1, "", "tensor"], [403, 2, 1, "", "to_choi"], [403, 2, 1, "", "to_kraus"]], "qat.quops.math_util": [[373, 5, 1, "", "are_equal_up_to_phase"], [375, 5, 1, "", "convert_density_mat_to_pauli_vec"], [376, 5, 1, "", "convert_pauli_vec_to_density_mat"], [390, 5, 1, "", "make_pauli_matrix_basis"], [391, 5, 1, "", "make_standard_matrix_basis"], [392, 5, 1, "", "make_standard_vector_basis"], [393, 5, 1, "", "multikron"], [398, 5, 1, "", "partial_trace"]], "qat.quops.metrics": [[377, 5, 1, "", "get_average_process_fidelity"], [378, 5, 1, "", "get_diamond_norm"], [379, 5, 1, "", "get_entanglement_process_fidelity"], [380, 5, 1, "", "get_process_distance"], [381, 5, 1, "", "get_state_fidelity"], [382, 5, 1, "", "get_trace_distance"]], "qat.simulated_annealing.service": [[364, 5, 1, "", "extract_j_and_h_from_obs"]], "qat.synthopline": [[413, 5, 1, "", "generate_trotter_ansatz"], [415, 5, 1, "", "linear_operator_synthesis"], [417, 5, 1, "", "phase_polynomial_synthesis"]], "qat.synthopline.clifford_normalizer": [[405, 1, 1, "", "CliffordNormalizer"]], "qat.synthopline.clifford_normalizer.CliffordNormalizer": [[405, 2, 1, "", "compile_circuit"]], "qat.synthopline.co_diagonalization": [[406, 5, 1, "", "codiagonalize_with_architecture"], [420, 5, 1, "", "synthesize_stabilizer_state"]], "qat.synthopline.initial_mapping": [[411, 5, 1, "", "frequency_mapping"], [414, 5, 1, "", "greedy_mapping"]], "qat.synthopline.interface": [[416, 1, 1, "", "OperatorTableau"], [421, 1, 1, "", "WeylOperator"]], "qat.synthopline.interface.OperatorTableau": [[416, 2, 1, "", "cnot_left"], [416, 2, 1, "", "cnot_right"], [416, 2, 1, "", "cz_left"], [416, 2, 1, "", "cz_right"], [416, 3, 1, "", "dim"], [416, 2, 1, "", "h_left"], [416, 2, 1, "", "h_right"], [416, 2, 1, "", "inverse"], [416, 2, 1, "", "multiply_right"], [416, 2, 1, "", "rx_minus_left"], [416, 2, 1, "", "rx_minus_right"], [416, 2, 1, "", "rx_plus_left"], [416, 2, 1, "", "rx_plus_right"], [416, 2, 1, "", "ry_minus_left"], [416, 2, 1, "", "ry_minus_right"], [416, 2, 1, "", "ry_plus_left"], [416, 2, 1, "", "ry_plus_right"], [416, 2, 1, "", "rz_minus_left"], [416, 2, 1, "", "rz_minus_right"], [416, 2, 1, "", "rz_plus_left"], [416, 2, 1, "", "rz_plus_right"], [416, 2, 1, "", "swap_left"], [416, 2, 1, "", "swap_right"], [416, 3, 1, "", "tableau"], [416, 2, 1, "", "x_left"], [416, 2, 1, "", "x_right"], [416, 2, 1, "", "xx_left"], [416, 2, 1, "", "xx_right"], [416, 2, 1, "", "y_left"], [416, 2, 1, "", "y_right"], [416, 2, 1, "", "z_left"], [416, 2, 1, "", "z_right"]], "qat.synthopline.interface.WeylOperator": [[421, 2, 1, "", "conjugate_with"], [421, 2, 1, "", "to_pauli"]], "qat.synthopline.linear_synthesis": [[408, 5, 1, "", "extract_linear_operator"], [418, 5, 1, "", "random_linear_operator"]], "qat.synthopline.pauli_synth": [[412, 5, 1, "", "generate_random_observable"]], "qat.synthopline.phase_polynomials": [[410, 5, 1, "", "extract_phase_polynomial"], [419, 5, 1, "", "random_phase_polynomial"]], "qat.synthopline.util": [[407, 5, 1, "", "conjugate_observable_tableau"], [409, 5, 1, "", "extract_pauli_rotations"]], "qat.vsolve.ansatz": [[286, 1, 1, "", "AnsatzFactory"]], "qat.vsolve.ansatz.AnsatzFactory": [[286, 2, 1, "", "qaoa_circuit"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:data"}, "terms": {"": [0, 1, 3, 5, 10, 14, 16, 17, 19, 21, 29, 31, 37, 50, 52, 53, 54, 55, 60, 61, 75, 77, 79, 81, 83, 119, 120, 131, 144, 172, 189, 197, 198, 200, 210, 237, 239, 246, 251, 253, 256, 268, 275, 283, 287, 288, 290, 293, 299, 306, 308, 309, 334, 340, 342, 345, 352, 355, 364, 414, 415, 418, 419, 449, 450, 453, 454], "0": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 79, 86, 91, 92, 95, 96, 97, 105, 109, 116, 117, 120, 121, 142, 143, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 197, 199, 203, 205, 207, 208, 209, 210, 212, 213, 215, 216, 217, 232, 234, 237, 238, 239, 240, 247, 248, 249, 253, 265, 266, 268, 271, 272, 273, 275, 276, 278, 279, 281, 286, 287, 289, 290, 291, 292, 293, 294, 296, 302, 306, 307, 308, 311, 313, 326, 327, 330, 332, 336, 340, 346, 348, 349, 353, 355, 356, 357, 362, 363, 365, 370, 374, 385, 387, 388, 389, 394, 396, 402, 405, 409, 413, 415, 416, 417, 418, 419, 420, 421, 427, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453], "00": [0, 2, 3, 9, 28, 29, 30, 31, 35, 49, 52, 165, 278, 362], "000": [31, 47, 432], "0000": 1, "000168479494906": 50, "000e": 3, "001": [208, 209, 212, 330, 336], "0012104": 296, "001578257756547": 50, "002": 449, "002343750000000089": 449, "002495341622677": 50, "0058": 30, "00633": 51, "007285401491312016": 248, "0084456965456": 50, "01": [28, 40, 165, 332, 353, 357, 387, 423, 437, 453], "010": 55, "010000331827677839": 30, "01054807387788": 50, "0110": 1, "01101": 210, "011658477825353": 50, "015": 387, "015002": [23, 51], "015558433384367": 50, "016657445899096568": 248, "017": 260, "017038899700033": 209, "017312278114607": 50, "01746022093933": 50, "019136584577571": 50, "01_building_schedul": 18, "01_compil": [51, 52], "01_custom_plugin": 46, "01_digital_circuit": [8, 9], "01_gate_bas": 33, "01_getting_start": [0, 452], "01_hamiltonian": 447, "01_instal": 0, "01_ise": 22, "01_job": [27, 28], "01_jump_op": 36, "01_lazi": 52, "01_low_level": 56, "01_max_cut_gener": 441, "01_naming_routin": 13, "01_noiseless_an": 34, "01_np_probs_for_ann": [431, 432], "01_qiskit": 425, "01_quantum_g": 9, "01_sample_job": 28, "01_write": [7, 8], "02": [208, 209, 212, 449], "0201": 55, "025248968846536": 50, "026860019910814": 50, "02913885": 23, "02_algorithm": 447, "02_analog": [33, 34], "02_analog_schedul": [8, 18], "02_ancilla": 13, "02_custom_junct": 46, "02_execut": [7, 27], "02_graph_partitioning_gener": 441, "02_high_level": 56, "02_manip_schedul": 18, "02_map": 52, "02_noisy_an": [34, 36], "02_observable_job": 28, "02_pyquil": 425, "02_qaoa": 431, "02_qubo": 22, "02_result": 27, "02_rewrit": [51, 56], "02_stoch_nois": 36, "02_user_guid": [7, 452], "02_variat": 9, "02_write": 0, "03": [3, 9, 49, 275, 423], "030": 51, "030000000000000027": 30, "03016591358865565": 209, "0302002": 51, "031592653589794": 59, "03162435928362976": 30, "032624859220828": 50, "03333333": 388, "03333333j": 388, "036555096014036": 50, "03900926019963218": 419, "03_an_job": 18, "03_anneal": 33, "03_annealing_problem": [8, 22], "03_aqo": 431, "03_automated_batch_gener": 28, "03_boson": 34, "03_cirq": 425, "03_comb_prob": 22, "03_compil": [7, 51], "03_execut": 0, "03_hardware_spec": 46, "03_kak": 56, "03_kclique_gener": 441, "03_nnize": 52, "03_observ": 8, "03_oracl": 13, "03_plugin": 447, "03_program": 9, "03_qpu": [27, 33], "0408063": 377, "0410184": 256, "04214807580175621": 50, "045201920758956": 50, "046612409635996": 50, "0478664365964585": 209, "04_api_refer": 452, "04_crossing_lattic": 431, "04_custom_qpu": 33, "04_fermion": 34, "04_migrat": 447, "04_pattern": 56, "04_plugin": [27, 46], "04_projectq": 425, "04_routin": [9, 13], "04_variat": 0, "04_vertex_cover_gener": 441, "05021167315686783": 29, "05172890036415": 50, "058365101040087": 50, "0594047723252207e": 16, "05_aqasm": 9, "05_collect": 56, "05_demo": 452, "05_graph_colouring_gener": 441, "05_np_problem_gener": [431, 441], "05_openqasm": 425, "05_variat": 27, "06": 378, "06052": 51, "06057755802585525": 50, "062310": [377, 379, 380], "062642934953391": 50, "065226909857149": 50, "067977054833237": 50, "0697352833650466": 209, "06_support": 452, "07": [373, 423], "070605319765443": 50, "07071068": 387, "07071068j": 387, "0713679337660658": 419, "07412046217589": 50, "075": [215, 216, 217], "075j": [215, 216, 217], "077478517802246": 48, "07942228470966244": 50, "07_release_not": 452, "08": [384, 385, 386], "08000000000000002": 30, "08291470093606756": 50, "086537081371631": 50, "0894490863880995": 50, "09": [3, 9, 275], "0910": 256, "09209793572742178": 209, "094947017729282e": [116, 165], "09663": 51, "09692": 352, "09838486023554": 50, "0_2": [35, 37, 69, 429, 430], "0j": [0, 9, 16, 29, 35, 215, 216, 217, 448], "0th": 40, "0x7f50378ad490": 47, "0x7f503806f650": 47, "0x7f503f584b90": 47, "0x7f504800b500": 47, "0x7f8a6611b470": 116, "0x7fcff4b8a110": 326, "1": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 69, 79, 86, 88, 91, 95, 96, 97, 98, 105, 109, 116, 117, 120, 121, 142, 143, 144, 146, 150, 151, 152, 156, 157, 158, 161, 165, 167, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 198, 200, 201, 207, 208, 209, 213, 215, 216, 217, 226, 227, 230, 232, 234, 238, 239, 240, 243, 248, 249, 251, 252, 253, 258, 259, 260, 265, 268, 272, 273, 276, 277, 278, 279, 286, 287, 289, 290, 291, 292, 293, 294, 296, 302, 306, 307, 308, 310, 311, 315, 320, 326, 332, 334, 336, 339, 340, 342, 346, 347, 349, 352, 353, 355, 362, 363, 364, 365, 370, 374, 382, 385, 387, 388, 389, 390, 394, 396, 398, 401, 402, 403, 405, 406, 407, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453, 454], "10": [4, 10, 12, 14, 15, 16, 19, 23, 28, 40, 50, 51, 53, 55, 61, 97, 98, 111, 123, 172, 173, 174, 177, 178, 179, 180, 181, 185, 187, 189, 209, 223, 241, 250, 256, 260, 268, 269, 274, 276, 286, 287, 290, 292, 293, 296, 306, 308, 329, 332, 334, 336, 340, 347, 351, 352, 353, 363, 365, 369, 370, 383, 415, 418, 419, 432, 433, 435, 439, 442, 443, 445, 454], "100": [23, 24, 29, 30, 35, 37, 38, 189, 353, 370, 450], "1000": [23, 24, 30, 336, 343, 346], "10000": [30, 307], "1001": [1, 55], "10018165319240663": 30, "1007": [51, 55, 260], "101": 353, "1014": 55, "1024": [28, 42, 116, 360], "10515": 51, "1088": 51, "10961575968751824": 248, "11": [0, 2, 4, 5, 9, 16, 28, 29, 30, 31, 35, 50, 69, 98, 172, 174, 177, 178, 179, 180, 181, 185, 187, 268, 278, 332, 421, 429, 430, 435, 436, 442, 443, 449], "1102": 51, "1103": [23, 250, 256], "110445140320353": 50, "111": [31, 35, 47], "1111": 1, "11111": 31, "1111111111": 365, "1135": 55, "1138": 55, "1145": 55, "115191684873492": 50, "1180695148086566e": 16, "11887096313892528": 37, "11920439544929": 50, "12": [4, 16, 25, 35, 37, 50, 69, 98, 172, 174, 177, 178, 179, 180, 181, 185, 187, 192, 208, 236, 279, 291, 303, 304, 305, 332, 340, 429, 430, 435, 442, 443], "121": 286, "12166": 352, "123176285983291": 50, "123233995736766e": 149, "1234": [31, 33, 46, 419], "125": 290, "127": [31, 33, 46, 427], "128": 253, "13": [4, 16, 50, 98, 116, 165, 172, 174, 177, 178, 179, 180, 181, 185, 187, 432, 435, 442, 443], "132880424170306": 50, "134": 61, "136985568600377": 50, "137141051418745": 50, "1372701679264894": 450, "1372701679265027": 450, "13974140624785428": 209, "14": [3, 9, 16, 50, 97, 98, 172, 174, 177, 179, 180, 181, 185, 187, 268, 275, 276, 332, 435, 436, 442, 443, 454], "1403": 449, "1411": 438, "1415926525401257": 2, "141592653589793": [146, 148], "141592656502476": 2, "1416940034276815": 449, "142e": 3, "145": 19, "147": [250, 256], "1472": 253, "1482": 423, "1485": 423, "14853": 253, "1487": 423, "1490": 423, "1492": 423, "15": [19, 49, 50, 172, 174, 177, 179, 180, 181, 185, 187, 189, 250, 253, 332, 388, 402, 419, 426, 432, 435, 436, 442, 443], "150": [50, 423], "1500000000000001": 25, "15011": 427, "151595816292184": 50, "153": [250, 256], "1538622045705431": 209, "153944408782516": 50, "156491516112625": 50, "1571": 423, "16": [54, 59, 150, 174, 177, 180, 181, 187, 435, 436, 442, 443], "1603": 260, "162247069715296": 50, "1654": 423, "165957696670691": 50, "167319570137533": 50, "16j": 16, "17": [69, 149, 174, 177, 180, 181, 187, 435, 442, 443], "173185307179587": 59, "17320508": 388, "17320508j": 388, "175": 448, "179038414501628": 50, "17958917286778": 50, "17j": 16, "18": [23, 49, 174, 177, 180, 181, 187, 435, 436, 442, 443, 453], "180": 37, "180953569776136": 50, "1831410209213576": 248, "185769128539924": 50, "185830236521452": 50, "1875": 25, "188": 54, "19": [3, 9, 16, 174, 177, 180, 181, 187, 253, 275, 435, 442, 443], "190": 61, "1903": 352, "190364437369196": 50, "1904": 51, "1905": 352, "190770130089337": 50, "191573262487799": 50, "19440743": 24, "195123353072042": 50, "198": 54, "198844925578005": 50, "199509265011347": 50, "1996": [250, 256], "1_11": 51, "1d": [142, 143, 161, 287, 293, 306, 307, 364, 376], "1e": [3, 31, 35, 50, 111, 189, 236, 268, 330, 336, 351, 353, 373, 378, 383, 384, 385, 386, 441, 442, 443, 444, 445, 446, 450], "1j": [10, 150, 157, 238], "1st": [40, 198], "2": [0, 1, 3, 5, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 79, 87, 92, 95, 96, 97, 98, 111, 116, 117, 121, 144, 145, 149, 151, 152, 153, 154, 156, 158, 159, 161, 164, 165, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 230, 237, 239, 240, 246, 247, 248, 249, 251, 252, 253, 257, 259, 261, 262, 263, 264, 265, 268, 271, 272, 273, 275, 278, 279, 286, 289, 290, 291, 292, 294, 295, 296, 306, 307, 308, 310, 311, 313, 315, 318, 321, 322, 327, 330, 332, 334, 336, 340, 342, 344, 346, 348, 352, 355, 356, 359, 362, 363, 370, 374, 376, 381, 382, 387, 388, 390, 394, 396, 401, 402, 403, 405, 406, 409, 413, 415, 416, 417, 418, 419, 420, 421, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453], "20": [15, 16, 53, 61, 174, 187, 268, 275, 334, 340, 342, 343, 346, 405, 423, 432, 435, 442, 443], "200": [3, 40, 336, 441, 442, 443, 444, 445, 446], "2000": 296, "2003": 51, "2004": [5, 51, 256], "2007": 51, "2009": [55, 256], "2011": 55, "2012": 51, "2014": [287, 291, 292, 294, 307, 311, 438], "2017": [248, 260], "2018": [23, 51, 55], "201817802550497": 50, "2019": [51, 55, 188, 203, 204, 205, 206], "2020": [51, 352, 450], "2021": [5, 352, 423, 450], "2022": [5, 423], "2023": 423, "2024": [49, 423], "2025": [3, 9, 69, 275, 423, 429, 430], "2033521966597658": 419, "2045974980376015": 209, "204791013744506": 50, "2048": 26, "2058": 51, "20a": [51, 415], "20b": [51, 415], "21": [4, 174, 187, 432, 435, 442, 443], "212722143098611": 50, "2147911128415545": 449, "215": 25, "21518767": 23, "215601094260133": 50, "22": [3, 24, 116, 174, 187, 286, 435, 436, 442, 443, 449], "220090391415502": 50, "22191618693747": 50, "2246467991473532e": 150, "226764256712439": 50, "227476984199798": 50, "23": [19, 23, 26, 48, 174, 187, 362, 418, 421, 423, 435, 442, 443, 449, 450], "2311": 53, "231448391212731e": 16, "232": 59, "234": 409, "23485743": 24, "235873970438297": 50, "239525552031857": 50, "239548009430363": 50, "23961912745028502": 209, "24": [174, 187, 286, 432, 435, 436, 442, 443], "240084371580785": 50, "2404323359575904": 50, "244700033202258": 50, "248": [23, 24], "248741526901131": 50, "2496935572791": 50, "2499999999999995": [1, 239], "25": [52, 157, 174, 187, 353, 423, 435, 436, 442, 443], "250": [343, 346], "250214871836366": 50, "250870900708614": 50, "2530": 256, "254243273650502": 50, "254728042420258": 50, "255237199051647": 50, "256": 295, "259015332011403": 50, "26": [55, 174, 187, 435, 436, 442, 443], "26679390253457": 50, "27": [35, 174, 187, 432, 435, 436, 442, 443], "273293294569651": 50, "2734923437176953": 50, "274074417307794": 50, "277539750409986": 50, "278": 61, "27923906150167": 50, "28": [174, 187, 423, 435, 436, 442, 443], "281131496966555": 50, "28187286": 24, "2849718527958975": 50, "28543653846662": 50, "286428804957208": 11, "289974949513096e": 16, "29": [174, 187, 435, 442, 443], "292420772527898": 50, "29421092513266": 50, "294324272275401": 419, "295724184888126": 50, "2961686361553821": 209, "297416841987635": 50, "2975419919830728": 419, "297942586191965": 50, "299334784926103": 50, "2d": [190, 192, 193, 287, 292, 293, 306, 308, 364], "2f": 31, "2fadvanced_usage_ancilla": 422, "2fadvanced_usage_compute_uncomput": 422, "2falgorithm": 422, "2falgorithms_overview": 422, "2fanalog_simul": 422, "2faqasm": 422, "2faqpu_getting_start": 422, "2faqpu_variational_quantum_simul": 422, "2favailable_g": 422, "2fbasic": 422, "2fbosonic_hamiltonian": 422, "2fcircuit_inlin": 422, "2fcircuit_optim": 422, "2fcirq": 422, "2fcombinatorial_optim": 422, "2fcustom_gate_set": 422, "2fdifferentiating_job": 422, "2fdigital_quantum_simulations_spin_fermion": 422, "2fdisplaying_inform": 422, "2femulating_custom_hardware_spec": 422, "2fepr_pair": 422, "2ffancy_ansatz": 422, "2ffusion_plugin": 422, "2fgate_set": 422, "2fgeneric_compil": 422, "2fgetting_started_with_sa": 422, "2fgraph_circuit": 422, "2fgraph_partitioning_myqlm": 422, "2fgrover": 422, "2finlining_vs_not_inlin": 422, "2finteroper": 422, "2fintroduction_combinatorial_optimization_myqlm": 422, "2fjunctions_and_optim": 422, "2fk_clique_myqlm": 422, "2flang": 422, "2flazy_synthesi": 422, "2flinear_operator_synthesi": 422, "2flink": 422, "2fmax_cut_myqlm": 422, "2fmeasurements_and_classic_oper": 422, "2fneedle_vs_haystack": 422, "2fnumber_partitioning_myqlm": 422, "2fobserv": 422, "2fobservable_splitt": 422, "2fopenqasm": 422, "2foverview": 422, "2foverview_bas": 422, "2foverview_combinatorial_optimization_myqlm": 422, "2fparameter_getting_start": 422, "2fpartial_measur": 422, "2fpattern_manag": 422, "2fphase_estim": 422, "2fphase_polynomi": 422, "2fplugin": 422, "2fprojectq": 422, "2fpy_aqasm": 422, "2fpyquil": 422, "2fqaoa": 422, "2fqat_fermion_multiple_launches_analyzer_plugin": 422, "2fqat_fermion_natural_gradient_vq": 422, "2fqat_fermion_overview": 422, "2fqat_fermion_qpe_hubbard_molecul": 422, "2fqat_fermion_quantum_subspace_expansion_h2": 422, "2fqat_fermion_sequential_optimization_plugin": 422, "2fqat_fermion_spin_fermion_transform": 422, "2fqat_fermion_vqe_hubbard": 422, "2fqat_fermion_vqe_ucc_example_1_h2": 422, "2fqat_fermion_vqe_ucc_example_2_lih": 422, "2fqat_fermion_zero_noise_extrapolation_plugin": 422, "2fqft": 422, "2fqiskit": 422, "2fquantum_count": 422, "2fquantum_typ": 422, "2frun_analysi": 422, "2fsatisfying_connectivity_constraint": 422, "2fschedule_arithmet": 422, "2fscipy_optimize_bind": 422, "2fsimul": 422, "2fsimulation_overview": 422, "2fsingle_qubit_gates_compress": 422, "2fsynthoplin": 422, "2ftrotter": 422, "2fultracold_atoms_aqpu": 422, "2fusing_qiskit_qpu": 422, "2fvariational_algorithm": 422, "2fvertex_cover_myqlm": 422, "2fvery_advanced_link": 422, "2fvqe_getting_started_random_spin": 422, "2fwriting_quantum_program": 422, "2i": [200, 265, 417], "2i_": 190, "2j": [26, 145, 146, 153, 155, 157], "2k": [1, 120], "2m": 200, "2n": [257, 259, 421], "2n_": 450, "2n_b": 198, "2nd": [211, 451], "2x_": 24, "3": [2, 3, 4, 5, 7, 11, 15, 16, 17, 20, 24, 25, 26, 31, 33, 35, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 79, 98, 116, 117, 144, 146, 148, 151, 152, 153, 155, 159, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 213, 215, 216, 217, 237, 239, 248, 268, 276, 278, 279, 285, 286, 287, 290, 291, 292, 293, 294, 306, 308, 311, 315, 320, 327, 330, 334, 340, 348, 351, 362, 364, 370, 374, 388, 398, 413, 415, 419, 421, 425, 427, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454], "30": [52, 69, 174, 187, 415, 423, 429, 430, 432, 435, 436, 442, 443], "300": [303, 304, 305, 330, 351], "301998623706162": 50, "30449824100074": 50, "308106854570964": 50, "3090181997848608": 50, "30925811310814": 50, "3099330343247272": 3, "31": [23, 69, 174, 187, 423, 429, 430, 437], "311554980269278": 50, "312": [35, 37], "313227806625934": 50, "315512382069693": 50, "316": 453, "3174962714034177": 50, "31833009425656": 50, "31g": 449, "32": [9, 174, 187, 253], "323794281428682": 50, "325145522897799": 50, "326048322764283": 50, "32672381690021": 50, "328414330455264": 50, "3297858": 55, "33": [55, 174, 187, 269, 274], "330": 340, "3304023": 55, "33257839906704": 50, "33327741459425575": 50, "334": 116, "334870710245657": 50, "3354": 51, "34": [35, 116, 174, 187, 423, 433, 434, 436], "340744946925145": 50, "341849659735287": 50, "342360668310874": 50, "345": 409, "34641016": 402, "35": [174, 187, 215, 216, 217], "351055415134969": 50, "35228436328670126": 38, "3535533905932729": 16, "353553390593273": 16, "3535533905932732": 16, "3535533905932733": 16, "35355339059327334": 16, "3535533905932734": 16, "35385551601657": 50, "355": 55, "355153237256765": 50, "358000991128428": 50, "359722717313751": 50, "36": [174, 187, 286, 436], "36270136": 23, "365111533459073": 50, "37": [174, 187, 436], "370419247995189": 50, "371181189969324": 50, "371637127746478": 50, "3720": 253, "3735926535897933": 59, "3747113436983167": 419, "377": 55, "38": [61, 174, 187], "380383310098606": 50, "38143552": 23, "384": 253, "38605821381041": 50, "387054314864846": 50, "389572423282495": 50, "39": [174, 187, 436], "3911656963747029": 11, "39259272907388": 50, "39269908169872414": 116, "394631815754273": 50, "398533327555118": 50, "399848817789271": 50, "3e": 332, "3x2": [52, 175], "3x3": 186, "4": [1, 4, 5, 10, 11, 14, 16, 17, 21, 24, 25, 26, 31, 38, 49, 50, 51, 52, 53, 54, 59, 69, 97, 116, 125, 127, 144, 167, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 204, 205, 206, 209, 213, 215, 216, 217, 219, 220, 221, 238, 248, 253, 266, 268, 278, 279, 287, 291, 292, 294, 303, 304, 305, 311, 320, 332, 339, 340, 353, 374, 376, 403, 413, 419, 433, 434, 435, 437, 440, 441, 442, 443, 444, 446, 448, 449, 450, 453], "40": [116, 165, 174, 187, 432], "4000": 432, "401969817984988": 50, "4028": 438, "405624006274492": 50, "4060049": 396, "406455826417114": 50, "41": [174, 187], "41231056": 402, "418117927452318": 50, "4183922158008632": 209, "42": [61, 174, 187, 436], "42017582095668066": 35, "4206": 307, "422422826961501": 50, "423391782660621": 50, "42632125263858": 50, "427601216651411": 50, "42782353": 24, "42917456980338": 50, "43": [4, 174, 187, 286, 423], "431674914287569": 209, "431783057265282": 50, "43237698": 23, "43329047": 23, "4359135278263615": 419, "438537622194016": 50, "43897023929487783": 209, "44": [174, 187, 423, 436], "440892098500626e": 59, "440910962243757": 50, "445188734618386": 50, "44936924408772": 50, "45": [20, 52, 151, 173, 174, 187], "450": 432, "451099598320157": 50, "46": [4, 174, 187], "4604453946636": 50, "4607963267948962": 59, "460796326794897": 59, "460888444158442": 419, "462212010551937": 50, "464461261116307": 50, "465228695231943": 50, "466": 61, "46931252": 24, "469558964705577": 50, "47": [174, 187, 439], "4782917": 55, "479966217266146": 50, "48": [29, 174, 187, 436], "482211410319602": 50, "48255375004697": 50, "48503501": 23, "48550": 256, "486831295965296": 50, "49": [174, 187, 436], "4999999999999999": [2, 16, 29, 47, 278], "4d": [190, 192, 193, 197, 198, 200], "4e": 332, "4j": 213, "4n": 259, "5": [4, 5, 11, 16, 19, 20, 24, 25, 31, 35, 38, 39, 49, 50, 52, 53, 54, 59, 61, 98, 116, 117, 148, 152, 161, 172, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 193, 268, 275, 286, 290, 292, 294, 296, 311, 327, 341, 353, 355, 370, 394, 396, 413, 415, 419, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453], "50": [5, 28, 31, 38, 48, 49, 52, 174, 187, 296, 370, 436, 450], "5000": [442, 443, 444, 445, 446], "5011895053557405": 50, "504298911792379": 50, "509019048873895": 50, "51": [174, 187], "51225089821401": 50, "513558344195733": 50, "514348392909202": 50, "515185307179586": 59, "516212294274006": 50, "51640527219819": 50, "5173528828063959": 209, "52": [24, 29, 52, 174, 187], "52482": 51, "53": 187, "535787277178381": 50, "53659164": 23, "537549720125367": 50, "538090649317844": 50, "54": [187, 250, 256], "541217225875318": 50, "54283515172309": 50, "545824463403518": 50, "55": 187, "5512119241564458j": 35, "55240091": 24, "5541593": 24, "555752505514619": 50, "5572349012967475": 209, "55755397033652": 248, "56": [25, 187, 340], "561287924920428": 50, "561691104196228": 50, "561958685298936": 50, "56408617517734": 50, "5641425550928674": 50, "5646627854988115": 11, "564768419186738": 50, "567616428235112": 50, "56996588": 23, "57": [187, 454], "5707963267948966": [59, 116, 146], "570796326794897": 59, "571e": 3, "5738814685606615": 50, "573959253390058": 50, "57417763": 394, "5744995192640423": 50, "579250084651322": 50, "58": [3, 187], "58020831115014e": 16, "580528502648553": 50, "581284672323031": 50, "5838157163651492": 248, "585298028474607": 50, "59": 187, "59171231590299": 50, "594717816846007": 50, "5j": 448, "5n": 257, "6": [3, 5, 16, 23, 26, 37, 39, 50, 53, 59, 145, 149, 159, 172, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 287, 291, 292, 294, 295, 303, 304, 305, 307, 311, 378, 413, 425, 427, 432, 433, 435, 437, 441, 442, 443, 444, 445, 448, 449, 453], "60": [5, 187, 432], "6002173210419324": 50, "602": 353, "6039146080147475": 334, "606175114070293": 50, "6065357696779314": 209, "61": 187, "61043597164621": 50, "61309150694173": 50, "615950619436305": 50, "62": 187, "621739741283497": 50, "621999638233024": 50, "62222650096942": 50, "6226825071434": 50, "623540521679587": 50, "625": 157, "63": 187, "633732243474695": 50, "635237543815794": 50, "63773675": 24, "63995666": 23, "64": [4, 187], "640133194680242": 50, "640135026737852": 50, "65": 187, "65215284": 24, "65543516": 24, "656001175671053": 50, "659603005004069": 50, "663055151969658": 50, "666447179999208": 50, "67": 286, "67010266264337": 50, "67301865": 23, "675064533164525": 50, "6799981844868386": 50, "68": 61, "68072816666609": 50, "681014962262529": 50, "683510212723069": 275, "68572443628903": 50, "686323053012687e": 16, "68663996": 23, "688699524936192": 50, "68968012244566": 50, "6908721489598975": 334, "69198662": [23, 24], "696426522401184": 50, "6979912845849325": 50, "698": 275, "6j": 151, "6n": 259, "7": [5, 16, 28, 50, 53, 116, 167, 172, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 292, 433, 435, 442, 443, 444, 448, 449, 450], "70": 296, "700636701286069": 50, "705065442368408": 50, "706023841285123": 50, "70710678": 47, "7071067811865475": [0, 9, 29, 95], "707679670647524": 50, "707810911558397": 50, "71": [377, 379, 380], "71117012647406": 50, "71238898038469": 59, "712672527474568": 50, "7134083252973185": 50, "72": 61, "7216619027538123": 50, "724352968854028": 50, "72490608": 23, "7289168624261717": 50, "73200663": 24, "732220609107863": 50, "734955953137588": 50, "7373715998512695": 209, "73860143": 24, "739565449410946": 50, "74051823": 23, "7410441178063469": 11, "742914428330876": 50, "7455596641783109": 50, "74898502": 24, "749567073160293": 50, "75": [25, 449], "75072529340467": 50, "752166430425806": 50, "756260700992486": 50, "758573744534925": 50, "75877295": 23, "76": 61, "762058485732819": 50, "767389113109": 50, "76994591": 23, "771150083896188": 50, "77417270747871": 50, "7751011776037114": 208, "775768957618919": 50, "777293061434442": 50, "778394437272379": 50, "778837615186525": 50, "779409485920585": 50, "780213036048059": 50, "780546660504658": 50, "782248963275595": 50, "7849384806891162": 209, "7853981633974483": 116, "789348669055213": 50, "78961076": 23, "7922846408848714": 419, "794": [3, 9, 275], "7946056313565262": 248, "799562588223829": 50, "7e": 332, "7n": 257, "8": [3, 4, 5, 16, 50, 53, 59, 152, 159, 172, 174, 177, 178, 179, 180, 181, 185, 186, 187, 188, 193, 205, 206, 248, 250, 292, 295, 303, 304, 305, 423, 433, 435, 442, 443, 444, 449], "80": 334, "800074019839297": 50, "800098574265213": 50, "800e": 3, "8027963267948968": 59, "804468223824915": 50, "806877822322395": 50, "81": [69, 429, 430], "810e": 3, "812716961478362": 50, "813961400789805e": 16, "816039477071996": 50, "816613752409218": 50, "81873075": 394, "821285985269913": 50, "822974145362242": 50, "823639448192976": 50, "82462113": 402, "825": 448, "825519078044085": 275, "826041461713404": 50, "827": 3, "8284271247461903": 145, "829675352873167": 50, "831019179913692e": 16, "8342181": 55, "8343652765232267": 35, "8377906427956767": 419, "837955476354374": 50, "840033702228599": 50, "8438128664511616": 11, "84432295": 23, "846229239423685": 50, "84630373": 23, "8465752738425716": 50, "84675153823826": 50, "85235813021124": 50, "852906367169471": 50, "854556425089337": 50, "8558128739121065": 419, "86": 25, "862522074043447": 50, "8630921783166405": 419, "863928196355271": 50, "8659396058946238": 209, "8660254037652464": 450, "868061748241724": 50, "871826667476135": 50, "879500672799016": 419, "88": 432, "880643885309837": 50, "881": 415, "8811290368610747": 37, "8854738831825163": 209, "887274381096168": 50, "89": 59, "894888962838959": 50, "898010838290084": 50, "8988": 253, "8th": 248, "9": [4, 5, 10, 15, 16, 17, 50, 53, 116, 165, 172, 174, 177, 178, 179, 180, 181, 185, 187, 268, 276, 286, 292, 388, 432, 433, 435, 442, 443], "90": 23, "9071609330057144": 449, "9138709": 396, "916357165566678": 50, "9219318380368362": 50, "926": 9, "927474943707658": 50, "933814537249932": 50, "934042808533633": 50, "936174608429674": 50, "936534991356549": 50, "936850459042361": 50, "9406734": 24, "940704421911056": 50, "941280589656918": 50, "941454521277816": 50, "943388368536286": 50, "948607473540356": 50, "95": 432, "9514880464690925": 50, "953934207180657": 50, "9565": 51, "9586430161104738": 419, "959335153841355": 50, "960580971591755": 50, "9606365682622262": 50, "961673549411938": 50, "961905162534947": 50, "9622438988998556": 50, "9633546100296067": 419, "9641764712253877": 11, "968596480245795": 50, "968738400838731": 50, "978": 51, "979870323086757": 50, "98": [41, 432], "9827594147545584": 209, "984289706346342": 50, "984930141027016": 50, "99": 432, "99216786": 23, "99247166": 387, "993776877269301": 50, "994618390340378": 50, "9979453927503363": 48, "998810433847746": 50, "9999999974320526": 449, "9999999999972387": 3, "9999999999993716": 40, "9999999999998637": 35, "999999999999913": 3, "9e": 332, "9q": 427, "A": [0, 2, 5, 8, 9, 10, 12, 13, 15, 18, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 46, 51, 53, 55, 56, 57, 58, 60, 67, 71, 72, 83, 86, 95, 99, 100, 101, 105, 120, 121, 142, 143, 144, 151, 158, 168, 172, 173, 175, 183, 186, 190, 193, 208, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 241, 248, 249, 250, 256, 268, 273, 278, 283, 285, 287, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 306, 307, 308, 310, 311, 312, 315, 326, 329, 331, 332, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 356, 357, 360, 364, 365, 370, 373, 377, 379, 380, 397, 399, 400, 401, 403, 406, 415, 416, 417, 421, 422, 432, 433, 434, 437, 438, 439, 440, 448, 449, 453], "AND": [5, 16, 17, 96, 273, 290], "AS": 5, "And": [1, 10, 59], "As": [1, 5, 15, 19, 23, 25, 26, 29, 52, 54, 58, 210, 275, 276, 334, 344, 415, 423, 431, 437, 438, 445], "At": [22, 35, 41, 116, 273, 340], "BE": 5, "BUT": 5, "BY": 5, "Be": [355, 372], "But": [38, 89], "By": [4, 5, 10, 28, 60, 116, 117, 239, 254, 268, 273, 278, 347, 425, 426, 440, 450], "FOR": 5, "For": [3, 4, 5, 9, 11, 12, 16, 17, 18, 23, 26, 28, 31, 32, 33, 37, 39, 40, 42, 43, 44, 46, 47, 52, 54, 55, 56, 57, 58, 60, 93, 116, 144, 158, 161, 170, 172, 209, 210, 238, 249, 268, 271, 278, 279, 287, 290, 292, 293, 294, 301, 302, 303, 306, 308, 311, 313, 315, 326, 332, 336, 342, 362, 370, 388, 396, 413, 423, 430, 432, 439, 441, 448, 449, 450, 454], "IF": 5, "IN": 5, "ITS": 5, "If": [1, 4, 5, 17, 23, 24, 25, 28, 31, 33, 35, 40, 42, 46, 47, 48, 53, 57, 58, 60, 66, 71, 74, 75, 78, 79, 80, 82, 95, 116, 120, 136, 144, 158, 160, 161, 163, 165, 168, 189, 194, 207, 210, 211, 220, 223, 233, 235, 236, 238, 239, 248, 249, 257, 266, 268, 274, 278, 279, 288, 290, 293, 296, 302, 306, 308, 326, 329, 330, 336, 338, 342, 346, 347, 349, 351, 352, 353, 359, 362, 363, 367, 368, 369, 370, 391, 392, 396, 402, 405, 411, 413, 414, 417, 421, 423, 424, 433, 434, 435, 436, 437, 438, 440, 448], "In": [1, 3, 5, 8, 9, 13, 14, 15, 16, 18, 23, 27, 28, 29, 30, 31, 35, 37, 38, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 88, 89, 96, 116, 207, 237, 245, 248, 253, 268, 278, 279, 288, 290, 293, 296, 302, 306, 308, 332, 340, 348, 349, 352, 355, 363, 370, 385, 405, 413, 415, 416, 417, 427, 431, 432, 438, 439, 448], "Ising": [22, 24, 25, 26, 33, 41, 160, 287, 290, 291, 292, 294, 295, 306, 307, 308, 311, 364, 423, 432, 438, 441, 453], "It": [7, 9, 13, 16, 17, 19, 23, 29, 32, 34, 37, 39, 41, 43, 44, 45, 48, 52, 53, 59, 61, 88, 89, 91, 92, 116, 120, 160, 161, 167, 208, 210, 212, 233, 236, 237, 238, 248, 275, 278, 279, 287, 290, 291, 292, 293, 294, 295, 306, 307, 308, 309, 311, 318, 334, 342, 347, 351, 352, 357, 358, 360, 364, 365, 366, 370, 379, 413, 415, 417, 423, 438, 439, 449, 450, 451, 454], "Its": [14, 158, 166, 211, 244, 296, 334, 394, 396, 439, 450], "NO": 5, "NOT": [5, 12, 16, 17, 327], "NOTS": 16, "No": [15, 79, 88, 306, 315, 423, 425], "Not": [5, 57, 60, 160, 163], "OF": 5, "OR": [5, 16, 96], "Of": [1, 10, 15, 16, 26, 28, 48], "On": [28, 36, 40, 48, 51, 53, 57, 58, 367], "One": [21, 34, 37, 40, 52, 53, 57, 58, 59, 60, 88, 110, 116, 161, 165, 195, 208, 209, 210, 211, 214, 297, 423, 437, 439, 453], "Or": [10, 273, 426, 427, 428], "SUCH": 5, "Such": [5, 23, 56, 275, 352], "THAT": 5, "THE": 5, "TO": 5, "The": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 69, 78, 79, 80, 83, 86, 87, 88, 89, 92, 95, 96, 97, 98, 110, 114, 115, 116, 117, 119, 120, 123, 144, 149, 151, 156, 160, 161, 163, 164, 165, 168, 172, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 241, 246, 248, 249, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 275, 276, 278, 279, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 321, 326, 327, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 354, 357, 360, 363, 364, 365, 367, 369, 370, 371, 372, 377, 381, 382, 396, 398, 403, 404, 407, 408, 410, 411, 413, 415, 416, 417, 418, 419, 421, 422, 423, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 454], "Their": [10, 46], "Then": [0, 1, 16, 46, 58, 92, 189, 210, 223, 248, 279, 332, 346, 355, 422, 429], "There": [1, 4, 52, 58, 95, 236, 237, 368, 440], "These": [0, 1, 4, 7, 9, 12, 16, 33, 39, 49, 51, 52, 53, 54, 56, 58, 61, 69, 80, 96, 116, 120, 135, 147, 237, 240, 248, 249, 278, 287, 291, 292, 294, 295, 307, 311, 312, 315, 317, 319, 337, 413, 415, 423, 425, 432, 441, 447, 448, 449, 450], "To": [1, 5, 10, 17, 18, 21, 23, 24, 28, 38, 52, 57, 60, 116, 117, 169, 188, 208, 233, 235, 237, 283, 287, 291, 292, 294, 295, 307, 311, 332, 333, 340, 341, 342, 343, 346, 405, 425, 426, 436, 437, 440, 445, 448, 449, 450], "WITH": 5, "Will": [51, 131, 210], "Wille": 55, "With": [34, 38, 48, 53, 54, 356, 413, 440], "_": [1, 16, 53, 59, 189, 190, 200, 208, 214, 239, 253, 255, 265, 279, 334, 336, 355, 387, 396, 400, 401, 403, 413, 448], "_0": [95, 200, 296], "_1": [200, 296], "_10": 116, "_2": [95, 116, 417], "_4": [116, 421], "_6": 116, "_8": 116, "__": 340, "__add__": 116, "__call__": [11, 48, 158], "__init__": [31, 42, 48, 69, 429, 430], "__mult__": 116, "__name__": 172, "__or__": 26, "__str__": 166, "__xor__": 26, "_core": [35, 37], "_default_opt": 42, "_gate_set": 116, "_i": [189, 200, 248, 336, 413], "_interv": 210, "_j": [189, 413], "_k": 200, "_overrid": 42, "_paramet": 42, "_parameter_map": 47, "_serial": 47, "_serialized_gate_set": 116, "_spec": [249, 331, 334, 344], "_src": [3, 9, 275], "_subtype_metadata": 47, "_valu": [47, 266], "_x": 340, "_y": 340, "_z": 340, "a_": [193, 198, 265, 363, 398, 448], "a_1": [393, 398, 413], "a_2": [398, 413], "a_calibr": 353, "a_i": 398, "a_n": [393, 398], "a_p": [193, 448], "a_q": [193, 448], "a_r": [193, 448], "aa": 39, "aad8ca": 51, "aam18": [51, 417], "aarch64": 4, "ab": [144, 189, 195, 197, 256, 377], "abctract": 223, "abl": [10, 16, 18, 31, 34, 52, 53, 60, 70, 238, 268, 278, 288, 290, 293, 306, 308, 331, 340, 346, 361, 417], "abort": [96, 98], "abort_cod": 98, "about": [0, 31, 43, 44, 57, 58, 116, 231, 244, 423, 449], "abov": [4, 5, 14, 23, 24, 25, 28, 34, 38, 42, 53, 61, 161, 248, 266, 352, 363, 423, 431, 432], "absenc": [28, 88], "abso": 144, "absolut": [144, 145], "abstract": [0, 10, 14, 16, 17, 18, 23, 46, 48, 50, 57, 58, 60, 69, 116, 158, 222, 223, 224, 237, 238, 250, 266, 268, 278, 288, 290, 293, 299, 306, 308, 309, 313, 314, 315, 321, 322, 323, 324, 325, 327, 328, 329, 338, 345, 346, 369, 372, 405, 413, 417, 431], "abstract_g": [266, 315, 346], "abstractg": [13, 14, 17, 57, 61, 69, 95, 116, 135, 237, 241, 245, 249, 250, 266, 268, 315, 346], "abstractgener": [31, 123, 222, 229, 423], "abstractgenetor": 223, "abstractplugin": [47, 116, 120, 140, 328, 371], "abstractregist": [60, 312], "abtract": 237, "acc": [48, 253], "acc_siz": [253, 254, 255], "accept": [5, 25, 28, 41, 43, 44, 48, 55, 57, 58, 60, 115, 123, 195, 220, 223, 268, 327, 329, 346, 363, 369, 417, 423, 448], "access": [4, 9, 28, 31, 33, 34, 42, 46, 47, 52, 53, 86, 96, 116, 144, 161, 171, 172, 229, 237, 243, 248, 277, 293, 304, 305, 306, 308, 316, 350, 357, 358, 360, 362, 408, 410, 413, 415, 417, 418, 419, 448, 449, 450, 454], "accord": [5, 116, 188, 208, 212, 237, 329, 336, 340, 415, 439], "accordingli": [5, 42, 209], "account": [38, 417], "accross": 415, "accumul": [253, 254, 255, 334, 340], "accur": [28, 210], "accuraci": 378, "achiev": [25, 28, 34], "achiv": 453, "acknowledg": 5, "across": 15, "act": [5, 16, 17, 23, 35, 39, 57, 60, 96, 116, 120, 160, 248, 293, 306, 310, 315, 332, 364, 423, 448, 450], "action": [36, 423], "activ": [69, 188, 190, 195, 196, 197, 208, 209, 212, 423, 447, 449], "active_indic": [190, 449], "active_so": 212, "actual": [18, 28, 29, 86, 431, 441], "acycl": 315, "ad": [1, 9, 16, 26, 32, 42, 55, 60, 61, 66, 71, 74, 80, 252, 256, 268, 276, 330, 346, 394, 423], "adam": 450, "adapt": [5, 42, 47, 48, 49, 51, 52, 58, 116, 330, 342, 423, 447, 450, 451], "adaptvqe_plugin": 450, "adaptvqeplugin": [328, 423, 450], "add": [5, 14, 15, 16, 25, 31, 55, 57, 58, 60, 111, 115, 117, 136, 144, 163, 233, 237, 249, 251, 252, 254, 255, 256, 258, 259, 260, 262, 268, 276, 283, 286, 290, 304, 305, 326, 327, 343, 344, 423, 449], "add_abstract_g": [57, 61, 315, 346], "add_claus": [25, 290], "add_const": [251, 252, 254, 256, 260], "add_const_mod": [250, 255], "add_edg": [168, 169], "add_edges_from": [291, 292, 294, 311, 433, 434, 437, 440, 444, 446, 453], "add_funct": [60, 327], "add_mod": 250, "add_nodes_from": [291, 292, 294, 311, 433, 434, 437, 440, 444, 446, 453], "add_pattern": [58, 61, 326, 346], "add_prohibited_valu": [60, 327], "add_sampl": [42, 163], "add_signatur": [136, 249], "add_term": 286, "addendum": 5, "adder": [14, 16, 237, 250, 256, 257, 260], "adding_cost": 220, "addit": [2, 3, 5, 8, 10, 13, 14, 15, 16, 20, 23, 28, 32, 42, 48, 96, 97, 116, 120, 160, 189, 229, 237, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 268, 269, 290, 293, 302, 306, 308, 345, 349, 405, 413, 415, 417, 423, 437, 445, 448, 449], "additin": 279, "addition": [11, 52, 53, 97, 147, 172, 237], "address": [124, 229, 248, 350, 371, 423], "addresses_count": 248, "adequ": 5, "adiabat": [23, 210, 285, 290, 293, 296, 297, 298, 299, 306, 308, 309, 431], "adjac": [218, 219, 221, 334, 440], "adjacentstrategi": [218, 334], "adjunct": 371, "adjust": 210, "administr": [48, 268, 345], "admiss": 238, "adopt": [5, 286, 288, 290, 293, 306, 308, 417], "adress": 248, "adriano": [250, 256], "advanc": [1, 4, 7, 9, 11, 13, 27, 31, 46, 66, 69, 71, 74, 80, 116, 137, 144, 237, 238, 422, 439], "advantag": 31, "advis": [5, 17], "advisor": 5, "aer_simul": [78, 79], "affect": [5, 211, 233, 235], "aforement": 23, "aforesaid": 5, "after": [5, 8, 17, 32, 48, 52, 53, 59, 61, 123, 160, 223, 233, 235, 249, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 329, 352, 353, 355, 363, 369, 415, 440], "afterward": [88, 268], "again": [1, 279, 449], "against": [5, 268, 423], "agav": [172, 184], "aggreg": [28, 33, 42, 110, 111, 116, 165, 268, 329, 423], "aggregate_data": [42, 110, 116, 120, 165], "aglorithm": 16, "agnost": [237, 250], "agre": [4, 5], "agreement": [4, 5], "aim": [23, 41, 61, 188, 287, 423, 447], "aka": 378, "al": [188, 203, 204, 205, 206, 286, 330, 352, 413, 415, 417, 450], "al18": 23, "albash": 23, "albeit": 41, "alek": 51, "alexand": 51, "algebra": [334, 361, 362, 363, 423, 448], "algorithm": [0, 5, 7, 8, 9, 11, 16, 25, 27, 28, 41, 46, 54, 188, 225, 226, 227, 228, 230, 253, 286, 290, 293, 306, 308, 328, 330, 340, 343, 344, 347, 353, 405, 411, 413, 415, 417, 423, 431, 446, 449, 450, 452], "alia": [69, 117, 370], "alias": 162, "align": [23, 414], "all": [0, 1, 4, 5, 9, 16, 18, 19, 28, 29, 30, 31, 34, 42, 43, 47, 48, 53, 55, 57, 60, 61, 71, 72, 93, 96, 97, 98, 114, 116, 120, 121, 125, 128, 165, 168, 169, 172, 173, 205, 209, 218, 222, 231, 233, 235, 237, 244, 245, 248, 249, 257, 259, 261, 262, 263, 264, 266, 268, 273, 279, 286, 293, 294, 296, 305, 307, 315, 316, 326, 328, 330, 331, 333, 334, 336, 339, 344, 345, 347, 348, 351, 352, 353, 357, 360, 362, 365, 371, 372, 413, 417, 422, 423, 428, 431, 432, 442, 448, 449], "all_result": 47, "all_symbol": 144, "all_to_al": 169, "all_valu": 48, "allclos": 415, "alleg": 5, "alloc": [0, 9, 10, 15, 69, 103, 116, 251, 252, 253, 254, 255, 258, 259, 268, 271, 272, 273, 276, 279, 290, 293, 306, 308, 402, 411, 414, 428, 430], "allocate_qureg": 429, "allocated_thread_count_per_job": 103, "allocated_total_memory_mb": 103, "allocation_model": 369, "allocationmodel": [102, 369], "allouch": 51, "allow": [5, 8, 10, 11, 14, 16, 17, 20, 23, 24, 27, 28, 32, 38, 39, 41, 46, 50, 52, 58, 97, 151, 158, 237, 248, 268, 275, 285, 287, 288, 290, 291, 292, 293, 294, 295, 297, 303, 306, 307, 308, 311, 313, 328, 338, 342, 356, 357, 360, 371, 372, 431, 438, 448, 449, 450], "alltoal": [52, 172], "almost": 53, "alon": [5, 18], "along": [5, 22, 28, 35, 292, 295, 307, 432, 438], "alongsid": 5, "alpha": [35, 37, 59, 161, 211, 248, 290, 353], "alpha_": 248, "alpha_i": [31, 413], "alpha_j": 413, "alpha_k": [233, 235], "alpha_t": 37, "alreadi": [4, 42, 58, 61, 210, 248, 267, 268, 278, 280, 342, 369, 372, 439, 449, 450], "also": [0, 4, 5, 8, 9, 10, 12, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 38, 40, 41, 42, 46, 48, 50, 52, 53, 56, 59, 96, 116, 160, 163, 165, 172, 209, 210, 211, 223, 232, 234, 248, 275, 276, 278, 279, 283, 287, 290, 291, 292, 293, 294, 295, 301, 306, 307, 308, 311, 340, 345, 349, 352, 355, 363, 365, 370, 371, 372, 415, 417, 423, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453], "alter": [5, 53, 283], "altern": [1, 10, 38, 43, 44, 50, 201, 370, 372, 423, 438, 448], "although": 432, "alwai": [10, 18, 31, 41, 58, 97, 163, 194, 210, 248, 290, 332, 365], "ami": [51, 286, 417], "among": [52, 116, 236, 291, 292, 294, 295, 336, 387, 388, 423, 432, 447], "amount": [5, 116, 165], "amp_threshold": [29, 116, 120, 165], "amplif": [237, 239, 422], "amplification_step": 237, "amplitud": [0, 1, 9, 16, 28, 29, 32, 35, 43, 44, 116, 120, 121, 161, 163, 164, 165, 171, 265, 372, 389, 394, 422, 423], "amplitudedamp": 394, "an": [0, 1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 69, 77, 78, 79, 82, 87, 91, 95, 96, 97, 99, 100, 101, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 131, 142, 144, 147, 149, 150, 151, 156, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 188, 189, 200, 201, 208, 209, 210, 212, 222, 223, 224, 233, 235, 237, 238, 240, 241, 243, 246, 248, 249, 250, 252, 257, 258, 259, 261, 262, 266, 268, 271, 272, 273, 274, 275, 277, 279, 285, 286, 290, 293, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 327, 330, 331, 332, 334, 335, 338, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 363, 364, 367, 368, 369, 370, 371, 372, 399, 402, 404, 407, 408, 409, 410, 413, 415, 417, 418, 419, 421, 422, 423, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "an_": [355, 450], "anaconda": 4, "analog": [0, 1, 7, 8, 23, 24, 25, 26, 33, 35, 36, 38, 39, 42, 161, 165, 233, 235, 285, 290, 293, 297, 299, 306, 308, 370, 431, 438, 441, 442, 443, 444, 445, 446, 450, 452], "analyt": 396, "analyz": 422, "anapli": 423, "anc": 16, "ancilla": [13, 16, 95, 116, 268, 273, 279, 422], "ancilla_map": 116, "ancillari": 440, "and_claus": 289, "and_expr": [16, 240], "and_formula": 273, "anderson": [188, 198, 448], "andrew": 296, "aneal": [290, 308], "angl": [2, 31, 46, 48, 59, 60, 69, 116, 144, 149, 156, 205, 275, 278, 319, 320, 332, 341, 352, 409, 413, 416, 417, 438, 450], "angles_0": 278, "angles_1": 278, "ani": [2, 5, 9, 10, 13, 14, 16, 17, 23, 30, 31, 32, 33, 35, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 57, 58, 60, 61, 71, 72, 78, 79, 84, 95, 96, 116, 120, 123, 137, 163, 168, 169, 170, 223, 229, 233, 235, 237, 251, 252, 254, 266, 268, 278, 279, 306, 318, 326, 327, 334, 339, 341, 342, 343, 345, 346, 349, 351, 384, 405, 413, 415, 417, 424, 432, 439, 449, 451, 452], "anneal": [0, 1, 7, 8, 23, 24, 25, 33, 41, 42, 58, 285, 287, 290, 291, 292, 293, 294, 295, 306, 307, 308, 311, 343, 346, 364, 422, 431, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 452], "annihil": [39, 40, 198], "annot": [5, 241], "anoth": [5, 9, 13, 16, 48, 50, 51, 64, 95, 97, 136, 237, 257, 268, 271, 279, 315, 329, 340, 349, 372, 404, 417, 423, 425, 449], "ansatz": [3, 31, 50, 51, 189, 199, 201, 205, 285, 288, 290, 293, 306, 308, 328, 330, 341, 352, 355, 404, 413, 422, 423, 438, 447, 450], "ansatz_circuit": 451, "ansatz_color": 286, "ansatz_default": 286, "ansatz_gray_synth": 286, "ansatz_with_cnot": 286, "ansatz_with_rzz": 286, "ansatzfactori": [285, 438], "answer": [18, 431, 436], "ans\u00e4tz": [3, 11, 286, 290, 293, 308, 413, 438, 447], "antiferromagnet": [3, 41], "antihermitian": 330, "anupam": 248, "any_mat": [23, 24, 453], "anymor": [210, 423], "anyth": [5, 48, 422], "anytre": 4, "ap": [23, 250, 256], "apach": 5, "apart": 39, "api": [9, 32, 46, 48, 69, 123, 223, 237, 312, 329, 340, 356, 363, 369, 423, 426, 429, 430, 432, 452, 454], "apparit": [116, 165], "appear": [5, 29, 60, 97, 114, 116, 120, 147, 165, 266, 268, 289, 345, 415, 432], "append": [16, 48, 115, 233, 235, 286, 417], "appendix": 5, "appli": [0, 1, 5, 8, 10, 15, 17, 19, 23, 31, 37, 41, 49, 53, 55, 56, 57, 58, 60, 69, 86, 91, 95, 117, 167, 168, 169, 188, 189, 201, 203, 207, 210, 231, 232, 233, 234, 235, 236, 240, 249, 250, 265, 268, 271, 273, 275, 279, 327, 328, 332, 334, 348, 349, 363, 372, 394, 395, 396, 400, 402, 403, 415, 416, 423, 439, 449, 450], "applianc": [0, 18, 31, 33, 41, 42, 43, 46, 144, 290, 293, 306, 308, 423, 432, 441, 447], "applic": [0, 5, 12, 16, 17, 18, 31, 34, 41, 46, 55, 63, 96, 110, 171, 233, 235, 248, 268, 296, 316, 352, 408, 410, 413, 415, 417, 418, 419, 423, 431, 439, 441, 447], "apply_quantum_subspace_expans": [188, 449], "apply_resource_consumption_limit": 369, "apply_to": [399, 400, 402, 403], "apply_to_vector": 402, "approach": [208, 211, 212, 237, 285, 344, 414, 431], "appropri": [5, 120, 137, 248, 296], "approv": 5, "approx": [1, 207], "approxim": [3, 25, 32, 37, 43, 164, 189, 207, 210, 290, 291, 292, 293, 294, 295, 296, 306, 308, 311, 328, 340, 353, 394, 422, 431, 446, 450], "april": [55, 260, 423], "apriori": 210, "aq": 429, "aqasm": [9, 10, 12, 14, 15, 16, 29, 30, 31, 47, 52, 53, 54, 55, 57, 58, 61, 63, 69, 71, 91, 95, 96, 97, 116, 117, 189, 201, 237, 239, 248, 249, 268, 279, 332, 334, 346, 348, 365, 409, 422, 429, 449, 450], "aqasm2circ": [12, 17], "aqasmengin": [70, 72, 429], "aqasmprint": [70, 429], "aqo": [224, 225, 226, 227, 228, 230, 290, 293, 296, 298, 299, 300, 306, 308, 309, 431, 441, 442, 443, 444, 445, 446], "aqo_batch": [442, 443, 444, 445, 446], "aqo_job": [290, 293, 298, 299, 300, 306, 308, 309, 439], "ar": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 33, 35, 37, 38, 39, 40, 42, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 69, 71, 74, 80, 83, 86, 87, 93, 95, 96, 97, 98, 110, 115, 116, 117, 120, 123, 124, 130, 135, 137, 147, 148, 161, 165, 167, 169, 170, 172, 188, 192, 193, 194, 200, 201, 207, 208, 210, 222, 223, 226, 227, 230, 232, 233, 234, 235, 237, 238, 240, 248, 249, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 273, 276, 278, 279, 280, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 306, 307, 308, 311, 312, 313, 315, 316, 317, 319, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 343, 346, 348, 349, 350, 352, 353, 357, 359, 360, 361, 362, 363, 369, 370, 371, 372, 373, 388, 394, 396, 402, 406, 411, 413, 414, 417, 421, 422, 423, 425, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "arang": [291, 292, 294, 311, 433, 434, 437, 444, 446, 453], "arbitrari": [34, 38, 55, 147, 248, 413], "arbitrarili": 407, "arc": 148, "architectur": [48, 51, 52, 53, 55, 172, 342, 404, 413, 415, 423], "archiv": 5, "are_equal_up_to_phas": 372, "arg": [42, 71, 72, 84, 116, 123, 137, 223, 224, 229, 232, 233, 234, 235, 238, 245, 268, 279, 286, 290, 293, 303, 304, 305, 306, 308, 327, 329, 333, 346, 358, 367, 368], "arg0": [416, 421], "arg1": 416, "arg_typ": 137, "argment": [78, 79], "argu": 296, "argument": [2, 10, 12, 17, 19, 21, 31, 33, 34, 42, 46, 47, 53, 60, 78, 79, 98, 115, 116, 120, 123, 137, 144, 149, 150, 156, 158, 166, 168, 170, 210, 229, 238, 239, 245, 248, 251, 252, 253, 254, 255, 266, 268, 271, 275, 276, 278, 279, 286, 288, 290, 293, 306, 308, 315, 316, 326, 332, 334, 338, 339, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 358, 367, 368, 405, 413, 417, 423], "ariann": 51, "aris": [5, 450], "arithexpress": [110, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 170, 290, 293, 306, 308, 364, 417, 423], "arithmet": [9, 15, 17, 18, 19, 23, 26, 35, 63, 144, 147, 158, 170, 256, 260, 269, 276, 320, 417, 423], "ariti": [14, 15, 16, 17, 43, 44, 52, 60, 61, 69, 87, 95, 116, 137, 144, 158, 201, 238, 241, 244, 246, 249, 250, 251, 252, 253, 258, 259, 266, 267, 268, 279, 280, 289, 313, 344, 363, 400, 401, 403], "arm64": 4, "around": [35, 77, 78, 79, 81, 201, 210, 356], "arrai": [3, 10, 16, 38, 47, 86, 87, 91, 110, 120, 121, 142, 143, 144, 160, 161, 163, 165, 171, 190, 192, 193, 197, 200, 208, 232, 234, 237, 238, 243, 248, 268, 271, 272, 275, 277, 278, 287, 290, 293, 296, 306, 307, 308, 351, 353, 362, 364, 389, 394, 396, 400, 401, 402, 403, 415, 440, 448, 449], "array_of_numb": 307, "array_of_numbers_s": 307, "arrow": 237, "art": [110, 117], "articl": [188, 203, 204, 205, 206, 450], "artifici": 450, "artur": [250, 256], "arxiv": [51, 256, 296, 352, 377, 438], "as_graph": [119, 340], "as_quameleon": 119, "asbtract": 116, "ascii": [110, 117], "ask": [53, 57, 61, 88, 89, 360, 363, 423, 424], "aspect": 188, "aspen": [172, 185], "asplo": 55, "assembl": [9, 10], "assembli": 422, "assert": [5, 31, 42, 47, 110, 173, 365, 415], "assert_plugin": [47, 110], "assert_qpu": [42, 110], "asset": 5, "assign": [5, 89, 289, 302, 310, 365], "assigne": 5, "assist": 5, "associ": [5, 42, 48, 120, 200, 210, 233, 235, 290, 341, 449, 450], "assum": [5, 31, 33, 42, 46, 49, 52, 53, 58, 103, 248, 267, 276, 278, 280, 332, 351, 352, 369, 394, 398, 403, 413, 417, 427, 449, 450], "assumpt": [238, 450], "ast": [144, 158], "asymptot": [16, 355], "async_job": 81, "async_qpu": 426, "async_result": [423, 426], "asyncbackendtoqpu": [77, 79, 81, 426], "asynchron": [31, 46, 77, 78, 79, 81, 426], "atan2": 144, "ato": [4, 5, 9, 10, 343, 422, 423], "atol": 31, "atom": [0, 211, 306, 431, 440, 441, 447, 449], "atom1": 211, "atom2": 211, "atomn": 211, "attach": [5, 10, 14, 26, 50, 116, 140, 237, 238, 249, 268, 331], "attempt": [14, 53, 81, 278, 334, 405, 413], "attent": 6, "attribut": [5, 42, 48, 49, 86, 95, 96, 114, 115, 119, 120, 163, 164, 248, 271, 272, 276, 304, 305, 306, 345, 349, 363, 397, 423, 449], "august": 423, "author": [5, 116, 123, 165, 223, 329, 363, 369], "authorship": 5, "autom": [28, 50, 51, 55, 188], "automat": [1, 4, 11, 16, 50, 56, 58, 59, 117, 160, 194, 251, 252, 253, 258, 259, 266, 287, 291, 292, 294, 295, 307, 311, 312, 343, 415, 423, 439, 450], "av": [377, 387], "avail": [0, 4, 5, 6, 8, 18, 25, 27, 29, 31, 32, 33, 35, 39, 43, 44, 56, 64, 81, 98, 171, 172, 188, 193, 194, 207, 231, 286, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 312, 316, 357, 358, 360, 372, 408, 410, 413, 415, 417, 418, 419, 422, 423, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452], "avala": 422, "avbe96": 250, "aver": 46, "averag": [2, 28, 30, 33, 42, 48, 50, 161, 370, 372, 377, 387, 418, 432], "avoid": [4, 116, 419], "avoir": 278, "awar": [51, 144, 372, 415], "ax": 89, "axi": [28, 35, 61, 248, 409, 449], "axis1": 398, "axis2": 398, "azimzadeh": 51, "b": [5, 16, 59, 116, 144, 147, 170, 195, 197, 226, 227, 230, 252, 255, 257, 259, 261, 263, 264, 287, 289, 292, 294, 311, 355, 373, 421, 433, 434, 437, 450, 453], "b_": [1, 265], "b_1": 1, "b_2": 1, "baboulin": 51, "back": [3, 9, 28, 46, 48, 57, 275, 338, 417, 421, 450], "backend": [53, 77, 78, 79, 82, 84, 120, 337, 356, 357, 358, 360, 405, 406, 413, 420, 454], "backend_nam": 82, "backendconfigur": 84, "backendtoqpu": [77, 78, 426], "backward": [53, 335], "balanc": 292, "bar": [20, 39, 111, 164], "bare": 448, "barenco": [250, 256], "barrier": 41, "base": [1, 4, 5, 7, 8, 12, 16, 23, 24, 25, 26, 31, 33, 34, 50, 51, 56, 57, 58, 86, 93, 123, 211, 222, 223, 224, 237, 250, 253, 256, 257, 258, 259, 275, 283, 284, 285, 288, 290, 293, 301, 306, 308, 312, 315, 319, 328, 329, 330, 331, 334, 336, 340, 343, 347, 351, 353, 362, 363, 369, 372, 395, 404, 405, 406, 413, 415, 420, 422, 423, 431, 447, 448, 449, 450, 452, 454], "base_path": [283, 284], "baseestimatorv2": 357, "baseless": 450, "basesamplerv2": 360, "bash": 430, "basi": [1, 5, 16, 21, 28, 29, 109, 110, 116, 163, 165, 167, 188, 193, 194, 208, 210, 211, 213, 214, 215, 216, 217, 232, 234, 253, 268, 273, 288, 328, 344, 354, 363, 375, 376, 390, 391, 392, 400, 402, 407, 417, 421, 423, 439, 447, 448, 449], "basic": [10, 11, 23, 26, 31, 41, 50, 52, 53, 54, 69, 84, 167, 238, 290, 332, 343, 359, 363, 423, 448, 449, 454], "basic_heurist": 343, "basis_chang": 449, "basis_transform": 210, "batch": [27, 33, 35, 42, 46, 47, 52, 54, 61, 75, 78, 79, 81, 82, 103, 110, 116, 120, 123, 222, 223, 224, 225, 226, 227, 228, 229, 230, 249, 302, 303, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 362, 363, 369, 371, 441, 442, 443, 444, 445, 446], "batch1": 54, "batch2": 54, "batch_result": [47, 229, 329], "batchgener": [31, 97, 99, 123, 423], "batchmod": [9, 52, 117, 275, 278, 333, 423], "batchresult": [31, 46, 47, 75, 79, 81, 82, 110, 223, 224, 229, 291, 292, 294, 295, 302, 311, 329, 338, 345, 362, 363, 369, 423], "bath": [198, 200, 448], "bear": 5, "beaudrap": 51, "becaus": [3, 4, 24, 28, 29, 57, 58, 315, 454], "becom": [5, 16, 37, 50, 58, 116, 415], "been": [4, 5, 7, 23, 24, 28, 31, 39, 41, 57, 58, 64, 78, 89, 91, 161, 279, 293, 306, 308, 315, 332, 422, 423, 430, 432, 450, 451], "befor": [2, 4, 5, 15, 31, 47, 50, 51, 52, 54, 61, 64, 200, 241, 249, 268, 331, 334, 343, 413, 423, 439, 454], "beforehand": [116, 331], "begin": [17, 23, 31, 41, 283, 315, 381, 389, 394, 396, 423], "beginn": 422, "behalf": 5, "behav": [53, 158, 237, 238, 268, 276, 279, 371], "behavior": [33, 46, 54, 89, 97, 116, 237, 332, 334, 348, 365, 405, 413], "behaviour": [38, 40, 423, 450], "behind": 135, "being": [15, 18, 23, 24, 28, 41, 58, 69, 90, 233, 235, 268, 279, 290, 293, 306, 308, 362, 413], "believ": 3, "bell": [0, 9, 29, 30, 430], "bell_data": 430, "bell_pair": [0, 2, 9, 454], "bell_stat": 278, "bellow": 4, "belong": [352, 370, 432], "below": [3, 5, 7, 16, 28, 29, 32, 35, 38, 49, 51, 52, 57, 61, 96, 116, 200, 220, 248, 268, 273, 278, 334, 340, 342, 344, 413, 415, 417, 423, 432, 440, 442, 443, 444, 445, 446], "benchmark": [41, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311], "beneath": 18, "benefici": [5, 33], "benefit": [5, 348, 423], "beno": 51, "best": [31, 48, 50, 58, 116, 165, 283, 284, 287, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 311, 328, 343, 346, 363, 415, 422, 431, 432, 441, 446, 450], "best_angles_circ": 31, "best_index": 48, "best_param": 48, "beta": [35, 48, 59, 211, 248, 321, 396, 438], "beta_": 248, "beta_t": 35, "better": [31, 42, 53, 57, 58, 61, 210, 329, 346, 415, 417, 423, 438, 449, 451], "between": [4, 18, 23, 25, 40, 42, 47, 49, 55, 58, 96, 144, 148, 168, 200, 229, 236, 252, 254, 273, 285, 290, 293, 296, 306, 308, 309, 315, 327, 330, 332, 349, 353, 355, 364, 370, 372, 377, 379, 380, 381, 382, 385, 388, 413, 421, 423, 438, 450], "beyond": 5, "bhoslib": 432, "bidirect": [52, 405], "big": [40, 211, 391, 392, 448], "bigg": 336, "bigger": [294, 311, 334, 340, 342, 343, 346, 405, 423], "biggest": 106, "bilp": 285, "bilp_problem": 287, "binari": [17, 22, 28, 32, 41, 78, 81, 88, 91, 110, 114, 115, 116, 119, 120, 121, 142, 143, 160, 163, 165, 168, 285, 287, 290, 293, 306, 308, 423, 450, 453], "binary_linear_integer_program": 287, "binaryquadraticmodel": [290, 293, 306, 308], "bind": [5, 28, 48, 116, 120, 266, 288, 290, 293, 306, 308, 345, 347, 351, 353], "bind_vari": [116, 189, 266], "binder": [417, 422, 423, 426, 427, 428, 429], "binding_arg": [347, 351, 353], "binding_kwarg": 345, "bit": [1, 4, 9, 12, 14, 16, 17, 20, 47, 86, 96, 108, 116, 163, 210, 237, 253, 265, 267, 268, 276, 280, 296, 349, 362, 365, 413, 439], "bit_flip": 296, "bit_length": 16, "bit_mov": [296, 439], "bitlength": [16, 253], "bitr": 417, "bitstr": [4, 28, 29, 31, 35, 165, 166, 290, 296, 302, 332, 413], "bk": 215, "bka": 343, "bl": 279, "black": [10, 53, 440], "blackbox": 422, "bloc": [357, 360], "block": [1, 16, 28, 57, 278, 326, 415], "blocker": 423, "bodi": [17, 96, 190, 192, 197, 208, 209, 211, 214, 249, 275, 315, 331, 448, 449], "boil": 450, "boilerpl": 5, "boldsymbol": [400, 401, 403], "bond": 5, "bool": [69, 82, 95, 108, 111, 112, 113, 116, 117, 118, 120, 124, 158, 160, 163, 165, 167, 168, 189, 193, 194, 199, 203, 205, 210, 211, 213, 229, 232, 234, 237, 249, 268, 271, 272, 276, 278, 280, 286, 288, 289, 290, 293, 296, 302, 303, 304, 305, 306, 308, 310, 315, 329, 331, 332, 333, 336, 338, 339, 340, 341, 343, 345, 350, 352, 353, 362, 371, 373, 378, 383, 384, 385, 386, 396, 401, 402, 403, 405, 411, 413, 414, 415, 417, 419, 421], "boolean": [17, 25, 47, 53, 81, 90, 96, 171, 232, 234, 240, 242, 268, 271, 272, 273, 276, 289, 310, 349, 383, 386, 415, 422], "boolexpr": 285, "boolformula": [237, 242, 268], "born": 37, "boson": [34, 40, 110, 370, 422, 423], "bosonic_level": [39, 370], "both": [5, 16, 23, 24, 35, 49, 54, 61, 82, 136, 161, 308, 311, 339, 413, 415, 426, 436, 438, 441, 447, 448, 450, 454], "bother": 48, "bottom": 320, "bound": [3, 4, 5, 116, 152, 210, 268, 378], "boundari": 374, "box": [10, 53, 237, 268, 440], "box_routin": 268, "bqm_problem": 453, "bracket": [5, 243, 277], "branch": 92, "bravyi": [188, 193, 194, 207, 210, 215, 354, 423, 447, 448], "bre": 115, "breach": 5, "break": [17, 52, 86, 90, 96, 97, 98, 253, 268, 286], "brew": [4, 6, 423], "bring": 449, "browser": 422, "brq": 423, "brugi": 51, "brugi\u00e8r": [51, 415], "budget": [290, 293, 306, 308], "bug": [423, 424], "build": [1, 3, 9, 10, 11, 12, 13, 17, 18, 35, 37, 42, 48, 50, 54, 59, 95, 114, 115, 116, 119, 120, 147, 158, 163, 164, 168, 170, 188, 189, 191, 199, 204, 206, 239, 247, 252, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 273, 288, 293, 296, 306, 318, 328, 330, 338, 339, 345, 389, 413, 423, 449, 450], "build_ext": [35, 37], "build_gat": [14, 17, 237, 245, 249], "build_linux": [35, 37], "build_ucc_ansatz": 451, "builder": [125, 297, 300], "built": [9, 11, 19, 116, 124, 189, 248, 269, 274, 275, 289, 350, 371, 423, 448], "bull": [4, 5], "burden": [48, 345], "burlington": [172, 176], "busi": 5, "byte": [114, 116, 120, 163, 164, 168, 415], "bz2": 4, "c": [4, 5, 17, 35, 37, 40, 53, 59, 60, 61, 69, 91, 95, 114, 116, 120, 190, 193, 198, 200, 202, 208, 214, 229, 240, 253, 258, 262, 263, 264, 283, 287, 314, 331, 333, 352, 353, 355, 361, 404, 405, 406, 410, 415, 417, 420, 423, 430, 438, 439, 448, 450, 454], "c_": [198, 200, 202, 207, 208, 214, 290, 448], "c_0": 40, "c_1": [40, 53], "c_2": 53, "c_i": 16, "c_j": 16, "c_p": [207, 210], "c_phase": 10, "c_phase_g": 10, "c_q": 207, "c_r": 207, "ca": [208, 212], "cach": 4, "calcul": [188, 211, 295, 346, 450], "calibr": [49, 353], "call": [2, 3, 9, 10, 12, 15, 16, 17, 19, 22, 23, 28, 33, 37, 39, 42, 43, 45, 46, 48, 52, 53, 57, 59, 69, 116, 117, 119, 120, 147, 158, 161, 194, 201, 213, 223, 229, 237, 238, 241, 248, 251, 252, 253, 254, 255, 268, 278, 279, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 313, 315, 326, 331, 338, 345, 346, 368, 372, 379, 394, 396, 397, 404, 405, 423, 431, 432, 441, 450, 451, 453], "callabl": [116, 158, 332, 339, 344], "calloc": [12, 97, 116, 240, 243, 268], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 71, 72, 76, 78, 79, 82, 86, 88, 95, 96, 102, 105, 110, 114, 115, 116, 117, 119, 120, 131, 144, 158, 160, 161, 162, 163, 165, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 194, 210, 213, 223, 224, 225, 226, 227, 228, 229, 230, 237, 239, 241, 242, 243, 245, 248, 266, 268, 275, 276, 277, 278, 279, 282, 283, 286, 288, 290, 293, 296, 297, 299, 302, 303, 304, 305, 306, 308, 309, 312, 313, 314, 318, 326, 327, 329, 332, 334, 335, 338, 339, 340, 342, 343, 346, 349, 350, 351, 352, 355, 356, 362, 363, 369, 370, 372, 396, 402, 405, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453], "cancel": 81, "candid": [220, 283, 284], "cannot": [5, 16, 57, 60, 76, 334, 423], "canon": [198, 200, 372, 402], "capabl": [2, 7, 18, 27, 38, 42, 43, 46, 47, 49, 122, 426, 432], "capac": 28, "capit": 220, "card": 42, "care": [5, 50, 296, 355, 438, 449], "carefulli": [4, 5, 54], "carlo": [37, 260, 287, 291, 292, 294, 295, 307, 311, 370], "carri": [5, 9, 16, 28, 88, 208, 237, 248, 250, 256, 266, 273, 341, 415, 452], "cascad": 413, "case": [5, 8, 23, 25, 27, 28, 29, 31, 32, 35, 37, 38, 39, 41, 46, 48, 53, 57, 60, 96, 165, 200, 207, 210, 232, 237, 245, 248, 278, 288, 290, 293, 296, 306, 308, 313, 330, 340, 342, 351, 352, 355, 363, 370, 402, 405, 413, 417, 422, 423, 438, 448], "cast": [16, 49, 57, 58, 60, 73, 114, 115, 116, 119, 120, 163, 164, 166, 168, 170, 268, 271, 272, 273, 276, 315, 346, 354], "cast_to": [16, 271], "castabl": 58, "caster": [42, 423], "cat": 31, "cat_circuit": 116, "catch": 97, "categori": [5, 43, 51, 423], "catstategener": 31, "catstateresult": 31, "caus": [5, 6, 210, 231, 423], "cbit": [17, 69, 90, 95, 96, 97, 98, 108, 118, 237, 240, 243, 268, 430], "cbit_valu": 96, "cbits_reg": 12, "cblist": 268, "cbreak": [12, 97, 268], "cc": [40, 193, 194, 200, 215, 216, 217, 389, 394, 396, 448], "cc_appli": [12, 268], "cccc": [193, 194, 215, 216, 217, 448], "ccdkm04": [256, 259], "ccnot": [10, 17, 52, 61, 83, 365], "cdot": [53, 61, 320, 321, 382, 405, 417, 421], "cell": [162, 448], "cengin": 429, "certain": [29, 50, 219, 221, 450], "certif": [123, 124, 223, 229, 329, 350, 363, 369, 371], "cf": [346, 354, 363], "cfgg00": 296, "chain": [23, 41, 120, 160], "challeng": 210, "chan1": [377, 379, 380, 402], "chan2": [377, 379, 380, 402], "chan3": 402, "chang": [1, 5, 17, 18, 21, 23, 35, 38, 41, 51, 53, 56, 58, 60, 116, 188, 208, 210, 214, 257, 259, 261, 263, 264, 283, 327, 332, 344, 346, 351, 362, 407, 413, 417, 423, 439, 449, 450], "channel": [231, 232, 233, 234, 235, 236, 374, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 394, 395, 396, 397, 399, 400, 401, 402, 403, 426, 450], "channel_repr": [232, 233, 394, 396], "channelrepresent": [232, 233, 372, 394, 396], "chaotic_random": 347, "char": 450, "charact": [5, 167, 413], "character": [38, 97], "charg": [5, 211, 449], "check": [4, 10, 31, 42, 47, 58, 102, 112, 113, 124, 160, 167, 229, 350, 352, 371, 372, 385, 402, 423], "check_server_cert": [124, 229, 350, 371], "check_trace_preserv": 402, "check_trace_reduc": 402, "check_valid": 167, "chemic": [198, 200, 202, 207], "chemist": 449, "chemistri": [18, 188, 422, 448, 451], "cherri": 4, "chi": [372, 374, 400, 401, 402, 403], "chi_": 400, "child": [293, 296, 306, 308], "children": [147, 289], "chines": 423, "chip": [55, 75, 78, 79, 172, 187, 415, 417, 423], "choi": [372, 374, 377, 378, 379, 380, 401, 402, 403], "choic": [50, 59, 372, 417], "choos": [5, 35, 41, 144, 296, 330, 336, 362, 440, 449, 450], "choose_inertia_funct": 347, "chosen": [208, 254, 293, 306, 308, 330, 332, 336, 353, 415, 417], "chunk": 69, "ci": 211, "circ": [3, 9, 12, 17, 31, 57, 58, 66, 95, 116, 117, 189, 279, 293, 306, 332, 346, 429, 430, 449, 450], "circuit": [0, 1, 2, 3, 4, 5, 7, 9, 13, 15, 16, 17, 18, 21, 26, 28, 29, 30, 31, 32, 33, 42, 43, 45, 47, 48, 50, 52, 54, 55, 59, 61, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 92, 95, 96, 97, 98, 108, 110, 117, 120, 137, 147, 162, 167, 171, 189, 191, 210, 238, 241, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 273, 275, 276, 278, 279, 283, 284, 285, 286, 288, 290, 293, 306, 308, 312, 315, 319, 326, 330, 331, 332, 333, 334, 335, 339, 340, 342, 343, 344, 346, 349, 352, 355, 356, 357, 359, 360, 362, 363, 405, 406, 408, 409, 410, 411, 413, 414, 415, 417, 420, 425, 431, 438, 450, 451, 454], "circuit1": [16, 116], "circuit2": [16, 116], "circuit_ab": 16, "circuit_build": [63, 110, 232], "circuit_class": [16, 250], "circuit_gener": [10, 137, 285], "circuit_implement": 95, "circuit_nam": 117, "circuit_qft": [16, 250], "circuitgener": [285, 290, 293, 308, 438, 441], "circuitinlin": 328, "circular_ladder_graph": 423, "circumst": [5, 423], "circumv": 33, "cirq": [4, 63, 64, 422, 423, 425, 430], "cirq_bind": 4, "cirq_to_qlm": [65, 428], "civil": 5, "cl": 271, "claim": 5, "clarifi": [7, 451], "clariti": [23, 451], "clasic": [86, 237], "class": [1, 5, 9, 10, 13, 16, 20, 23, 24, 25, 26, 28, 31, 33, 35, 38, 41, 42, 47, 48, 50, 55, 57, 58, 60, 69, 71, 72, 75, 78, 79, 81, 82, 84, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 119, 120, 122, 123, 124, 129, 131, 135, 136, 137, 138, 140, 144, 147, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 183, 186, 188, 193, 194, 201, 208, 209, 210, 213, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 248, 249, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 362, 363, 364, 365, 369, 370, 371, 372, 374, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 416, 421, 422, 423, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 448, 449, 450, 454], "class_nam": [268, 279], "class_typ": 268, "classarith": [9, 15, 16, 63, 237, 250, 251, 252, 254], "classic": [1, 9, 23, 28, 29, 33, 38, 41, 48, 86, 90, 92, 96, 108, 110, 116, 117, 166, 189, 237, 240, 242, 243, 248, 268, 273, 274, 276, 287, 291, 292, 294, 295, 296, 307, 311, 328, 334, 336, 340, 349, 351, 365, 422, 423, 438, 446, 447, 450], "classicalqpu": 361, "classicalregist": 454, "classicctrl": [86, 96], "classmethod": [114, 115, 116, 119, 120, 160, 163, 164, 165, 168, 290, 293, 306, 308, 327], "claus": [25, 41, 237, 273, 285, 286, 290], "clean": [4, 16, 42], "cleaner": 423, "cleanli": [97, 279], "cleanup_jump_oper": [233, 235], "clear": 116, "clear_gate_set": 249, "clearer": 1, "clearli": 58, "client": [31, 33, 42, 46, 47, 97, 124, 229, 338, 350, 371, 423], "clifford": [52, 340, 344, 404, 405, 406, 407, 409, 413, 416, 417, 420], "clifford_norm": 404, "clifford_tableau": 340, "cliffordnorm": [53, 340, 404], "clinalg": [2, 33, 97, 334, 361, 367, 423], "cliqu": [227, 285, 294, 296, 301, 304, 422, 432, 441], "clone": 422, "close": [15, 59, 268, 279, 285, 296, 306, 327, 404, 436, 449], "closer": 23, "clpso": 347, "clunki": 14, "cluster": [51, 191, 195, 200, 449, 451], "cluster_op": 191, "cluster_oper": 450, "cmake": 6, "cnot": [0, 1, 2, 3, 9, 10, 12, 15, 16, 17, 29, 30, 31, 47, 49, 51, 52, 53, 54, 58, 59, 60, 61, 83, 116, 189, 201, 248, 249, 253, 257, 259, 273, 278, 279, 286, 288, 290, 293, 306, 308, 315, 318, 326, 334, 340, 342, 346, 348, 355, 365, 408, 409, 410, 413, 415, 416, 418, 423, 429, 430, 449, 450], "cnot_count": 286, "cnot_left": 416, "cnot_right": 416, "co": [17, 144, 147, 158, 161, 344, 405, 413], "co_diag_backend": 413, "co_diagon": 404, "cobyla": [3, 50, 351, 441, 442, 443, 444, 445, 446, 449, 450], "code": [0, 1, 3, 5, 14, 16, 17, 23, 28, 31, 35, 37, 39, 41, 42, 46, 47, 48, 56, 57, 58, 60, 69, 86, 89, 97, 98, 99, 100, 101, 114, 116, 120, 144, 188, 271, 278, 279, 288, 290, 293, 306, 308, 313, 326, 332, 348, 423, 424, 426, 427, 430, 439, 447, 449], "codiag": [53, 405], "codiag_arg": 405, "codiagon": 404, "codiagonalize_with_architectur": 404, "coeff": [167, 352], "coeffcient": 167, "coeffici": [0, 11, 20, 23, 59, 160, 167, 193, 197, 208, 209, 352, 355, 388, 397, 417, 450], "coincid": 344, "colab": 423, "collaps": [210, 268], "collect": [5, 8, 11, 17, 19, 50, 52, 56, 63, 110, 120, 135, 136, 220, 249, 268, 288, 290, 293, 306, 308, 312, 326, 334, 336, 338, 345, 346, 347, 351, 352, 353, 413, 423, 438, 449], "collection_from_target": [61, 317], "collectivelli": 413, "color": [286, 288, 290, 293, 306, 308, 344], "coloring_oracl": 16, "colour": [222, 225, 285, 291, 432, 437, 441, 445], "column": 95, "comb_prob": 25, "comb_prob_ob": 25, "combin": [5, 16, 25, 28, 58, 205, 276, 285, 370, 423], "combinatori": [7, 9, 11, 22, 41, 224, 225, 226, 227, 228, 230, 290, 293, 302, 303, 306, 308, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 453], "combinatorial_optim_appl": [7, 431], "combinatorial_result": [441, 442, 443, 444, 445, 446], "combinatorialoptimizergener": [222, 225, 226, 227, 228, 230, 301], "combinatorialproblem": [23, 24, 25, 41, 285, 293, 302, 306, 308, 438, 453], "combinatorialresult": [224, 301], "combintori": 441, "come": [1, 4, 10, 11, 15, 16, 17, 18, 23, 50, 52, 59, 97, 210, 226, 227, 230, 237, 248, 287, 290, 292, 293, 294, 306, 308, 311, 334, 340, 363, 364, 413, 439, 450], "comm": [49, 55, 62, 63, 86, 87, 92, 423], "command": [4, 12, 17, 71, 422, 430], "comment": [5, 268], "commerci": 5, "commod": 105, "common": [4, 5, 15, 57, 139, 140, 423], "commonli": [28, 372], "commonqpu": [123, 139], "commun": [5, 424], "communic": 5, "commut": [26, 58, 330, 340, 344, 413, 448, 450], "commutation_collect": 61, "commute_improv": 413, "compact": 313, "compani": 5, "compar": [16, 19, 35, 37, 58, 237, 362, 371], "comparison": [16, 237, 268, 274, 276], "comparison_ep": 268, "compat": [98, 271, 334, 423, 441, 448], "compatibl": 335, "compel": 5, "compens": [5, 233, 235], "compet": 5, "compil": [2, 5, 6, 7, 9, 11, 12, 13, 35, 42, 46, 48, 49, 54, 59, 61, 69, 70, 71, 72, 75, 110, 116, 120, 249, 319, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 369, 371, 404, 405, 422, 425, 452], "compile_circuit": [340, 404, 405], "compile_job": 53, "compiled_circuit": 340, "compiled_job": [52, 59], "compiler_opt": [52, 342], "complet": [4, 5, 38, 43, 48, 103, 121, 208, 211, 212, 372, 378, 383, 432, 434, 444], "complex": [26, 51, 57, 58, 60, 95, 120, 121, 144, 145, 146, 150, 151, 153, 154, 155, 157, 163, 164, 165, 171, 233, 235, 315, 343, 345, 418, 446], "complexnumb": [95, 165], "compli": 5, "complianc": 5, "compliant": [53, 55, 60, 343, 348, 415], "complic": [1, 16, 268, 271], "compon": [0, 42, 161], "compos": [0, 3, 9, 10, 16, 20, 26, 31, 32, 42, 46, 47, 49, 56, 57, 58, 60, 66, 69, 71, 74, 80, 82, 91, 92, 95, 98, 114, 119, 123, 160, 210, 220, 222, 233, 235, 237, 242, 248, 315, 332, 338, 346, 348, 349, 354, 402, 417, 423, 426, 427, 429, 430], "composit": [20, 26, 116, 233, 235, 240], "compositeqpu": 119, "comprehens": [8, 19], "compress": [42, 51, 52, 56, 188, 199, 316, 322, 328, 342, 422, 449], "compris": [39, 43, 52, 210, 334], "comput": [0, 1, 2, 5, 7, 12, 13, 16, 18, 21, 23, 24, 26, 28, 29, 30, 31, 33, 35, 36, 39, 40, 42, 47, 48, 50, 51, 53, 58, 59, 86, 92, 96, 102, 109, 111, 116, 120, 136, 160, 163, 164, 165, 188, 193, 194, 195, 208, 210, 211, 212, 213, 222, 224, 225, 226, 227, 228, 230, 232, 234, 248, 249, 268, 273, 279, 286, 287, 288, 290, 291, 292, 293, 294, 297, 299, 306, 307, 308, 311, 319, 330, 332, 339, 340, 344, 346, 357, 360, 363, 369, 375, 376, 377, 378, 379, 380, 381, 382, 396, 411, 415, 426, 431, 433, 434, 435, 436, 437, 439, 441, 448, 449, 450, 451, 454], "compute_active_space_integr": 188, "concaten": [116, 314, 413], "concept": [7, 31, 46, 53, 110, 299, 395, 405], "concern": [57, 58, 167, 424, 432], "concurr": 103, "conda": [4, 6, 423], "condit": [4, 5, 12, 17, 223, 268, 273, 276, 432], "condition": 12, "conduct": 29, "confer": [55, 248], "confidenti": 5, "configur": [4, 5, 23, 28, 41, 52, 53, 84, 116, 141, 142, 143, 165, 211, 334, 338, 345, 346, 364, 433, 434, 435, 436, 437], "conflict": [4, 5], "confus": 23, "conj": 17, "conjug": [60, 95, 193, 194, 213, 268, 283, 404, 407, 416, 421], "conjugate_observable_tableau": 404, "conjugate_with": [416, 421], "conjunct": 61, "connect": [5, 31, 33, 46, 52, 53, 55, 57, 75, 78, 79, 82, 119, 123, 124, 140, 168, 172, 173, 175, 183, 186, 222, 223, 229, 315, 328, 329, 342, 343, 348, 350, 358, 361, 363, 369, 371, 413, 415, 417, 422, 425, 432, 433, 435, 440, 442, 443, 446, 452, 454], "connector": 84, "consecut": [51, 56, 57, 59, 61, 169, 290, 293, 306, 308, 315, 328, 339, 353], "consent": 5, "consequ": [4, 15, 23, 54, 116, 120, 279, 289], "consequenti": [5, 39], "consid": [1, 10, 14, 16, 17, 26, 28, 39, 40, 49, 51, 103, 120, 161, 248, 265, 268, 279, 286, 349, 362, 413, 415, 423, 426, 448, 450], "consider": [210, 450], "consist": [1, 5, 8, 12, 18, 24, 31, 41, 53, 86, 167, 210, 268, 285, 290, 329, 340, 352, 363, 413, 433, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446], "consol": [110, 116, 333], "consolid": 5, "conspicu": 5, "const": 260, "constain": 116, "constant": [10, 16, 17, 23, 125, 128, 147, 160, 161, 190, 193, 194, 208, 209, 211, 213, 226, 227, 230, 232, 233, 235, 237, 250, 251, 252, 254, 255, 256, 258, 262, 264, 287, 292, 294, 296, 311, 347, 355, 439, 449, 450], "constant_coeff": [26, 39, 160, 193, 194, 208, 209, 213, 449], "constant_list": 313, "constitu": [17, 165], "constitut": [5, 17, 93], "constrain": 51, "constraint": [52, 55, 58, 60, 144, 268, 287, 328, 343, 417, 422, 433, 434, 437, 453], "constru": 5, "construct": [1, 3, 8, 14, 16, 17, 19, 26, 27, 40, 48, 53, 59, 61, 121, 147, 160, 167, 188, 189, 192, 198, 201, 202, 203, 205, 208, 236, 238, 248, 268, 271, 276, 308, 330, 348, 383, 387, 388, 390, 391, 392, 393, 407, 423, 438, 447, 449], "construct_ucc_ansatz": [188, 451], "constructor": [17, 42, 48, 60, 135, 137, 233, 238, 268, 279, 288, 290, 293, 306, 308, 315, 326, 334, 338, 345, 346, 367, 368, 397, 399, 423, 441, 449], "consult": [5, 448], "consum": 37, "contain": [0, 1, 2, 4, 5, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 38, 39, 41, 42, 43, 47, 52, 53, 55, 61, 69, 81, 85, 87, 88, 91, 92, 95, 96, 97, 98, 116, 117, 120, 121, 125, 127, 140, 151, 161, 163, 165, 167, 170, 172, 193, 194, 210, 211, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 244, 250, 267, 268, 269, 278, 279, 280, 287, 288, 290, 291, 292, 293, 294, 295, 301, 302, 306, 307, 308, 311, 334, 346, 349, 351, 357, 360, 363, 364, 370, 374, 408, 410, 422, 423, 430, 438, 448, 450], "content": [4, 5, 16, 95, 116, 117, 249, 257, 259, 261, 263, 264, 422, 423], "context": [2, 16, 23, 361, 366, 372, 449], "continu": [5, 31, 36, 57, 60, 286, 439], "contract": [5, 120, 363], "contrari": [5, 53], "contrast": 370, "contrib": 423, "contribut": [5, 202, 452], "contributor": 5, "contributori": 5, "control": [1, 5, 9, 16, 17, 18, 48, 51, 52, 58, 60, 86, 95, 96, 117, 130, 168, 211, 237, 244, 248, 268, 279, 283, 402, 415, 416, 418, 419, 422, 423], "controlled_phas": 314, "contruct": 279, "conv": 200, "conveni": [10, 46, 423], "convent": [10, 22, 23, 116, 163, 165, 198, 202, 362, 363, 377], "converg": [352, 438], "convers": [5, 67, 83], "convert": [23, 24, 28, 34, 55, 65, 66, 67, 71, 73, 74, 76, 77, 80, 83, 86, 87, 88, 91, 188, 192, 193, 194, 207, 208, 356, 372, 376, 400, 401, 402, 403, 421, 448, 449], "convert_density_mat_to_pauli_vec": 372, "convert_pauli_vec_to_density_mat": 372, "convert_to_h_integr": [188, 448], "cooper": 5, "coordin": [148, 375, 428], "copi": [4, 5, 16, 35, 37, 116, 162, 193, 194, 213, 276, 327, 423], "coprim": 253, "copyright": 5, "core": [2, 3, 8, 11, 12, 19, 20, 21, 26, 27, 30, 31, 35, 37, 38, 39, 40, 42, 47, 48, 49, 50, 52, 54, 55, 61, 62, 63, 96, 188, 189, 190, 194, 208, 209, 212, 213, 215, 216, 217, 232, 238, 249, 253, 275, 286, 290, 293, 298, 299, 300, 306, 308, 315, 346, 348, 413, 423, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 448, 450], "correct": [42, 60, 266, 276, 288, 290, 293, 298, 299, 306, 308, 432, 450], "correctli": [131, 355, 423], "correl": [200, 236, 448, 449], "correl_typ": 236, "correspond": [16, 17, 18, 24, 27, 29, 37, 38, 42, 47, 52, 57, 58, 59, 69, 71, 75, 78, 79, 82, 89, 95, 96, 111, 116, 119, 120, 121, 137, 143, 158, 161, 168, 193, 194, 198, 200, 208, 213, 232, 233, 234, 235, 238, 248, 283, 287, 290, 291, 292, 294, 295, 296, 307, 311, 320, 321, 322, 323, 324, 325, 338, 339, 345, 355, 362, 363, 366, 369, 394, 396, 404, 406, 420, 421, 423, 430, 438, 440, 450], "correspondig": 268, "cos_expr": 161, "cosinu": [144, 149], "cost": [5, 16, 22, 23, 24, 41, 50, 56, 189, 220, 249, 282, 283, 284, 285, 288, 289, 290, 293, 302, 306, 308, 309, 310, 332, 352, 391, 392, 413, 415, 438, 439, 440, 441, 442, 448, 449], "cost_funct": 332, "costfunctionplugin": 328, "cotanh": 396, "could": [4, 9, 14, 22, 25, 31, 38, 41, 42, 49, 56, 58, 60, 147, 223, 224, 287, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 307, 308, 311, 327, 339, 346, 349, 423, 432, 448], "coulomb": [198, 208], "count": [16, 53, 54, 61, 116, 121, 237, 280, 286, 288, 290, 293, 306, 308, 315, 332, 340, 413, 422, 423, 432], "count_pattern": 315, "counter": 16, "counteract": 52, "counterclaim": 5, "coupl": [4, 23, 36, 37, 51, 198, 231, 292, 293, 295, 306, 307, 364, 372, 423, 449, 453], "cours": [1, 10, 15, 16, 26, 28, 53, 439], "court": 5, "cous": 48, "cover": [222, 230, 285, 301, 305, 311, 422, 432, 441], "cowtan": 51, "cp": 378, "cpp": [35, 37], "cpplist": [283, 284], "cpu": [3, 4, 9, 275, 423], "cpython": [4, 6, 35, 37], "cr": 454, "crash": [250, 423], "crawl": [116, 249, 409], "creat": [0, 1, 3, 5, 7, 8, 9, 12, 23, 24, 25, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 46, 47, 52, 57, 58, 59, 60, 61, 78, 81, 93, 95, 119, 144, 161, 165, 210, 220, 229, 237, 240, 273, 279, 289, 290, 293, 306, 308, 313, 317, 326, 327, 346, 358, 372, 422, 423, 424, 426, 429, 431, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 449, 453], "creation": [13, 19, 31, 33, 39, 40, 46, 161, 290, 293, 306, 308, 422], "credenti": 426, "creg": [69, 430], "cregist": [237, 268], "criteria": 432, "criterion": [38, 336], "cross": [5, 290, 293, 306, 308, 431], "csd20": [51, 413], "csign": [10, 17, 52, 61, 83, 249, 318], "csq": [198, 200], "ctrl": [1, 10, 17, 31, 52, 83, 95, 116, 249, 333, 423], "ctrl_phase": 60, "ctrlbit": 268, "cttk09": [256, 257], "cuccaro": 256, "cuccaro_add": [256, 257], "cuda": [3, 9, 35, 37, 275], "cup": [195, 197, 208], "curiou": 1, "current": [16, 39, 40, 42, 47, 96, 116, 169, 193, 194, 213, 222, 238, 249, 279, 297, 298, 315, 328, 331, 352, 361, 363, 366, 441, 442, 443, 444, 445, 446], "current_job": 48, "curs": 4, "custom": [0, 1, 9, 33, 42, 61, 69, 93, 116, 117, 119, 123, 162, 168, 169, 223, 253, 278, 285, 329, 342, 348, 363, 369, 422, 431, 450, 452], "custom_g": 69, "customari": 5, "customg": 10, "cut": [222, 228, 285, 292, 295, 422, 432, 441], "cutoff_frequ": 38, "cvbe96": [256, 258], "cvxpy": 4, "cx": [430, 454], "cycl": [199, 201, 203, 205, 352], "cyril": 51, "cython": [35, 37], "cz": [52, 61, 249, 318, 342, 416], "cz_left": 416, "cz_right": 416, "d": [5, 37, 58, 59, 60, 61, 116, 192, 200, 208, 283, 292, 377, 380, 382, 388, 396, 401, 403, 438], "d_": [200, 248], "d_1": 398, "d_i": 398, "d_n": 398, "dag": [10, 17, 83, 116, 193, 194, 213, 238, 266, 283, 315, 423], "dagger": [15, 37, 39, 40, 60, 95, 116, 189, 193, 198, 200, 207, 208, 210, 214, 238, 239, 244, 247, 266, 279, 355, 382, 385, 400, 402, 406, 438, 448, 450], "dagger_": 202, "dagger_0": 40, "dagger_from_param": 116, "dagstuhl": 248, "dai": 5, "dallair": 203, "damag": 5, "damp": [372, 389, 394], "daniel": 23, "data": [1, 31, 33, 35, 37, 42, 47, 48, 49, 50, 60, 69, 72, 87, 93, 95, 108, 110, 111, 114, 115, 116, 119, 120, 121, 163, 164, 168, 210, 248, 280, 315, 338, 340, 346, 356, 357, 360, 416, 423, 441, 454], "data_s": 47, "data_typ": 47, "datamodel": [63, 86, 87, 93], "dataset": 432, "date": [5, 49, 55], "david": 256, "db12": [51, 404, 416, 421], "dbrugierebv": [51, 415], "de": [16, 51, 415], "deal": [48, 53, 210, 268, 405], "debug": [47, 69, 147, 249, 268, 365], "decai": 343, "decemb": 423, "decent": 1, "decid": [28, 29], "decim": [141, 142, 143, 449], "declar": [0, 5, 8, 15, 16, 17, 19, 25, 26, 52, 110, 116, 158, 238, 243, 271, 275, 276, 277, 285, 290, 426], "decod": [51, 405, 406, 413, 415, 420, 440], "decode_rydberg": [290, 293, 306, 308, 440], "decode_rydberg_meta_data": [290, 293, 306, 308], "decompil": 5, "decompos": [18, 46, 56, 59, 60, 321, 323, 324, 325, 339, 359], "decomposit": [52, 59, 63, 312, 316, 339, 355, 405], "decor": [0, 1, 9, 14, 17, 130, 131, 132, 133, 134, 237, 241, 245, 275, 278, 423], "decreas": [5, 29, 41, 268, 293, 306, 308, 449, 450], "dedic": [0, 5, 8, 18, 34, 40, 50, 165, 312, 346, 372, 432], "deepcopi": [116, 193, 194, 213, 331], "def": [0, 1, 2, 3, 9, 10, 11, 14, 16, 17, 31, 42, 47, 48, 50, 52, 59, 60, 238, 241, 249, 275, 278, 286, 332, 334, 423, 454], "default": [0, 2, 3, 9, 28, 29, 30, 35, 37, 42, 43, 44, 50, 52, 58, 60, 66, 69, 71, 74, 75, 78, 79, 80, 82, 84, 86, 88, 111, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 140, 158, 160, 163, 165, 167, 168, 170, 171, 189, 193, 194, 199, 200, 201, 203, 205, 207, 210, 211, 212, 213, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 248, 249, 254, 256, 257, 268, 276, 278, 279, 280, 283, 286, 287, 288, 290, 292, 293, 294, 296, 306, 308, 311, 315, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 357, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 377, 378, 379, 380, 383, 387, 388, 396, 401, 402, 403, 405, 411, 413, 414, 415, 417, 419, 425, 426, 439, 448], "default_g": 249, "default_gate_set": [125, 268, 339], "default_precis": 357, "default_shot": 360, "defaultgatesspecif": [231, 234], "defaulthardwaremodel": [231, 236], "defect": 18, "defend": 5, "defin": [0, 3, 5, 8, 9, 11, 14, 17, 19, 23, 24, 25, 31, 33, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 69, 78, 79, 87, 93, 95, 98, 105, 110, 116, 117, 137, 144, 161, 192, 193, 200, 208, 209, 211, 223, 232, 234, 237, 238, 265, 282, 283, 284, 285, 293, 296, 297, 306, 308, 313, 314, 315, 319, 326, 327, 329, 330, 332, 339, 346, 347, 354, 363, 372, 377, 379, 380, 381, 388, 389, 396, 398, 422, 425, 426, 427, 429, 430, 439, 442, 447, 449, 450], "definit": [5, 14, 22, 23, 33, 38, 54, 57, 60, 69, 95, 116, 169, 208, 236, 249, 268, 288, 290, 293, 306, 308, 312, 377, 388, 422, 423, 448], "degeneraci": [195, 197], "degrad": [53, 334], "degre": [5, 38, 39, 292], "delai": [5, 20], "deleg": [3, 5, 338], "delet": [4, 451], "deliber": 5, "deliv": [43, 45], "deloc": 47, "delta": [38, 41, 210, 321, 343], "delta_": [192, 202, 208], "delta_v": [306, 423], "demand": 268, "demer": 203, "demo": 452, "demonstr": [5, 422], "denot": [161, 388, 390, 440], "dens": [334, 402, 423], "densiti": [34, 37, 38, 53, 161, 211, 372, 376, 381, 382, 400, 402, 403], "density_matrix": [402, 403], "depend": [0, 4, 6, 10, 12, 14, 17, 18, 19, 31, 32, 35, 53, 60, 110, 161, 165, 208, 233, 235, 248, 268, 290, 293, 296, 306, 308, 338, 345, 347, 352, 363, 364, 370, 372, 413, 417, 422, 425, 438, 439, 450], "dependend": 161, "dephas": [37, 38, 372, 396], "depol": [387, 388], "depol_typ": [236, 387, 388], "depolar": [231, 236, 372, 387, 388, 450], "deprec": [69, 95, 362, 403, 427, 429, 430, 447], "deprecationwarn": 423, "depth": [16, 52, 54, 58, 61, 116, 117, 147, 162, 286, 288, 290, 293, 306, 308, 315, 334, 340, 413, 415, 417, 438, 449], "deriv": [5, 50, 78, 120, 306, 372, 423], "descend": [195, 197, 208, 212], "descent": [58, 328, 336, 346, 450], "describ": [0, 5, 7, 8, 10, 11, 14, 16, 17, 18, 22, 25, 27, 28, 31, 32, 36, 37, 38, 39, 40, 42, 43, 45, 50, 53, 57, 58, 95, 96, 102, 103, 104, 106, 110, 119, 135, 137, 144, 158, 160, 163, 165, 167, 168, 169, 172, 188, 191, 231, 232, 234, 235, 237, 238, 240, 248, 269, 272, 273, 274, 283, 287, 290, 291, 292, 294, 295, 296, 302, 303, 307, 311, 315, 326, 334, 336, 339, 340, 352, 369, 372, 406, 407, 417, 420, 422, 423, 438, 440, 447, 448, 450], "descript": [0, 5, 17, 42, 43, 44, 49, 119, 161, 163, 173, 175, 183, 186, 290, 293, 306, 308, 315, 362, 370, 413, 423, 432, 439], "descriptor": 92, "deseri": 116, "design": [4, 5, 7, 8, 12, 13, 14, 23, 27, 31, 33, 46, 47, 51, 55, 64, 95, 116, 123, 147, 222, 237, 240, 269, 271, 272, 273, 274, 276, 279, 312, 316, 321, 322, 323, 324, 325, 332, 334, 423, 426, 438, 441, 449, 452], "desir": [4, 25, 32, 34, 210, 425, 431, 434], "despit": 79, "destroi": 268, "detail": [0, 1, 2, 16, 32, 41, 42, 52, 53, 58, 61, 64, 96, 120, 220, 229, 237, 248, 268, 275, 276, 334, 339, 342, 343, 347, 350, 413, 415, 416, 421, 423, 433, 434, 435, 436, 437, 448, 449, 450], "detect": 117, "determin": [5, 96, 320, 373, 441, 450], "determinist": [34, 37, 39, 370], "detun": [306, 423], "develop": [5, 417, 452], "deviat": [163, 210], "devic": [18, 51, 52, 53, 54, 55, 62, 63, 102, 103, 106, 119, 340, 431, 440], "devicetyp": 104, "devis": 450, "devoid": 30, "dgd20": [51, 417], "diag": [10, 23, 453], "diagon": [1, 23, 24, 189, 202, 210, 286, 288, 289, 290, 293, 306, 310, 344, 405, 406, 413, 423, 438, 449, 453], "diagram": [237, 303, 304, 305, 440], "diamond": [372, 378], "dict": [42, 69, 75, 79, 82, 114, 115, 116, 117, 119, 120, 136, 147, 168, 211, 232, 233, 234, 235, 283, 290, 293, 306, 308, 321, 322, 323, 324, 325, 338, 342, 345, 346, 347, 351, 353, 362, 363, 369, 370, 396, 405, 410, 411, 414, 417, 419, 423, 442, 443, 444, 445, 446], "dictio": 136, "dictionari": [42, 49, 69, 96, 116, 117, 120, 136, 147, 162, 168, 211, 232, 233, 234, 235, 266, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 339, 345, 396, 417, 419], "dictionnari": [163, 283], "did": [16, 17, 35, 165], "didn": [16, 116], "diff": [1, 158], "differ": [5, 7, 8, 15, 16, 18, 21, 24, 27, 28, 29, 30, 36, 39, 40, 54, 57, 58, 60, 61, 95, 109, 123, 208, 210, 223, 237, 286, 306, 313, 329, 334, 337, 341, 343, 344, 353, 355, 363, 369, 372, 377, 413, 423, 432, 438, 441, 442, 443, 444, 445, 446, 449, 450], "differenti": [120, 147, 158, 170, 422, 423], "diffus": [237, 239, 246], "digit": [18, 36, 288, 423, 438, 441, 450], "dill": [4, 423], "dim": [186, 391, 392, 398, 416], "dimac": 432, "dimens": [51, 175, 186, 198, 248, 278, 391, 392, 398], "dimi": 175, "dimod": [290, 293, 306, 308, 453], "dimx": 175, "ding": 55, "direct": [5, 23, 53, 116, 168, 315, 326, 402, 448, 449], "directli": [0, 9, 12, 16, 17, 23, 28, 50, 54, 55, 59, 87, 162, 167, 244, 273, 278, 279, 290, 293, 306, 308, 321, 322, 323, 324, 325, 332, 362, 423, 425, 438, 449, 450, 451], "directori": 423, "disabl": 423, "disappear": 326, "disassembl": 5, "disast": 5, "disc": 423, "discard": [111, 423], "disclaim": 5, "disclos": 5, "disclosur": 5, "disconnect": [31, 33, 46], "discuss": [5, 9, 50, 51], "diseas": 5, "disjoint": [60, 315], "disk": 306, "displai": [4, 5, 9, 31, 47, 52, 69, 110, 116, 158, 162, 163, 164, 266, 268, 275, 278, 290, 301, 303, 304, 305, 328, 343, 362, 422, 423, 441, 442, 443, 444, 445, 446, 449], "display_pattern": 52, "disput": 5, "dist": 423, "distanc": [372, 380, 382, 450], "distant": [31, 33, 46, 47], "distinct": [36, 237], "distinguish": [96, 236, 388], "distribut": [1, 4, 5, 116, 163, 165, 237, 246, 248, 281, 363, 423, 450], "div": 327, "dive": 1, "divid": [7, 208, 212], "divide_and_conqu": 415, "divis": [23, 423], "dll": 423, "dndebug": [35, 37], "do": [1, 3, 4, 5, 14, 23, 28, 42, 47, 54, 58, 59, 61, 111, 116, 120, 165, 208, 210, 266, 327, 331, 332, 362, 363, 370, 439, 448, 449, 450], "do_link": 268, "do_post_process": [47, 329], "do_validity_check": 167, "doc_release_myqlm": [35, 37, 69, 429, 430], "docstr": 423, "document": [1, 5, 7, 9, 43, 44, 48, 55, 64, 86, 110, 209, 236, 244, 271, 272, 276, 285, 290, 334, 342, 343, 351, 353, 358, 362, 387, 423, 426, 448, 449], "doe": [4, 5, 23, 30, 31, 41, 42, 46, 47, 48, 53, 55, 60, 89, 116, 223, 252, 253, 272, 276, 278, 293, 306, 313, 315, 329, 332, 346, 423, 432], "doi": [51, 55, 250, 256, 260], "domain": 5, "don": [1, 5, 48, 89, 233, 235], "done": [10, 12, 14, 16, 17, 31, 35, 37, 52, 58, 82, 116, 194, 257, 259, 261, 279, 290, 297, 343, 345, 414, 448, 450], "door": 18, "dot": [161, 265, 363, 388, 393], "doubl": [54, 116, 121, 165, 194, 195, 197, 226, 227, 230, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 362, 364], "down": [37, 48, 52, 198, 200, 338, 342, 438, 450], "downarrow": [198, 200, 202], "download": [4, 5, 422], "dq": 447, "dr": 208, "draper": 256, "draw": 440, "draw_networkx": [303, 304, 305], "drechsler": 55, "dress": 201, "drive": [19, 20, 21, 35, 37, 38, 39, 40, 165], "drive_sho": 39, "driven": 165, "dt": 37, "dtype": 415, "due": [5, 22, 29, 30, 37, 52, 116, 195, 197], "dummi": [31, 35, 50, 69, 223, 423], "dummyenergyminim": 31, "dump": [17, 28, 32, 50, 78, 81, 114, 115, 116, 119, 120, 160, 163, 165, 168, 293, 306, 346, 423], "duncan": [51, 413], "duplic": 341, "durat": [35, 58, 161, 232, 233, 234, 235, 282, 283, 290, 293, 296, 306, 308, 372, 394, 396], "durationmetr": [58, 282], "dure": [5, 12, 17, 19, 31, 33, 35, 46, 52, 53, 208, 212, 250, 252, 268, 279, 346, 439, 450], "dwave": [290, 293, 306, 308, 453], "dx": 158, "dynam": [15, 31, 46, 61, 116, 233, 235, 268, 351, 372, 439], "dynamicpattern": 339, "e": [1, 3, 5, 7, 9, 10, 11, 13, 15, 16, 17, 19, 22, 23, 24, 25, 28, 31, 33, 34, 35, 40, 41, 42, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 69, 82, 86, 89, 95, 106, 111, 116, 120, 147, 158, 160, 165, 169, 189, 191, 194, 200, 207, 208, 210, 214, 232, 233, 234, 240, 243, 245, 248, 251, 252, 254, 265, 268, 271, 272, 273, 276, 277, 279, 285, 286, 288, 290, 293, 296, 306, 308, 332, 336, 338, 345, 349, 351, 352, 354, 355, 370, 372, 377, 379, 380, 386, 388, 396, 400, 401, 402, 403, 407, 413, 417, 419, 423, 426, 433, 434, 435, 437, 438, 440, 442, 443, 444, 445, 446, 449, 450, 452], "e_": [208, 210, 394, 396], "e_i": [293, 364], "e_k": [385, 402], "e_min": 189, "e_q": 308, "e_qs": 189, "e_target": [210, 449], "e_vq": 189, "each": [5, 8, 16, 23, 27, 28, 29, 30, 31, 41, 47, 57, 58, 60, 91, 98, 111, 116, 120, 123, 160, 161, 168, 172, 198, 202, 210, 223, 232, 233, 234, 235, 236, 268, 283, 285, 289, 290, 291, 293, 306, 310, 326, 327, 329, 333, 334, 339, 341, 343, 344, 346, 349, 352, 355, 363, 364, 369, 370, 394, 396, 407, 411, 413, 421, 432, 433, 440, 443, 450], "eager": [334, 423], "eagerli": [218, 220], "eagerstrategi": [218, 334], "earli": [69, 429, 430], "earlier": [449, 450], "earthquak": 5, "easi": [59, 119, 332, 452], "easier": [5, 130, 332], "easili": [61, 116, 239, 332, 363, 432, 448], "ecount": 48, "edg": [16, 306, 411, 414, 432, 433, 434, 435, 437, 440, 442, 443, 444, 445, 446], "edit": [51, 329], "editori": 5, "edward": [296, 438], "effect": [5, 24, 25, 30, 116, 147, 237, 271, 276, 279, 315, 363, 439], "effici": [11, 16, 17, 20, 37, 50, 51, 55, 56, 160, 188, 197, 201, 312, 328, 402, 423, 438, 449, 450], "eigenenergi": [210, 449], "eigensolv": [48, 422, 423, 447], "eigenst": [39, 199, 203, 210, 289], "eigenvalu": [189, 193, 385, 449, 451], "eigenvector": 449, "eigh": 449, "eight": 449, "eigstate_ind": [199, 203], "eigval": [193, 449], "eigvalsh": [193, 449, 450], "either": [1, 5, 10, 17, 26, 32, 36, 42, 46, 47, 52, 60, 105, 116, 163, 168, 170, 210, 223, 224, 225, 226, 227, 228, 230, 233, 235, 236, 248, 275, 285, 289, 320, 330, 342, 346, 355, 362, 367, 426, 450, 454], "ekert": [250, 256], "elabor": 5, "electron": [5, 188, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 449], "electronicstructurehamiltonian": [188, 192, 194, 198, 200, 202, 207, 208, 210, 215, 216, 217, 354, 448, 449], "element": [1, 23, 24, 151, 161, 170, 189, 231, 235, 243, 277, 293, 306, 308, 338, 359, 364, 391, 392, 423, 453], "elementari": [250, 256], "elif": 286, "elimin": [51, 415], "els": [69, 286, 340, 363, 448], "emb": [48, 200, 306, 423], "embed": [75, 79, 82, 200, 306, 330, 336, 347, 351, 352, 353, 362, 363, 369, 423, 431, 440, 448], "emerg": 5, "emploi": 417, "employe": 5, "empti": [16, 17, 53, 61, 116, 120, 163, 249, 268, 369, 403, 449], "emul": [28, 33, 97, 116, 328, 331, 348, 349, 422], "en": [69, 353, 429, 430], "enabl": [3, 4, 9, 18, 211, 275, 283, 415], "encapsul": 32, "enclos": [5, 152, 210], "encod": [8, 18, 22, 25, 34, 35, 39, 40, 41, 110, 120, 160, 161, 165, 188, 276, 285, 287, 288, 290, 291, 292, 293, 294, 295, 307, 308, 309, 311, 332, 431, 433, 434, 437, 438, 439, 440, 453], "encount": [97, 340], "end": [4, 5, 11, 13, 17, 21, 23, 35, 38, 40, 42, 116, 210, 268, 296, 315, 340, 341, 346, 363, 369, 381, 389, 394, 396, 413, 417, 423], "end_ham": 298, "endeavor": 5, "endo": 450, "energi": [3, 11, 18, 22, 23, 31, 41, 48, 50, 120, 163, 189, 197, 198, 208, 209, 210, 211, 275, 287, 290, 291, 292, 293, 294, 295, 306, 307, 308, 311, 332, 364, 423, 431, 438, 449, 450], "energy_dist": 336, "enforc": [5, 119], "eng": 429, "engin": [5, 47, 70, 71, 72, 342, 429], "engine_list": 429, "enhanc": [28, 423], "enough": [16, 41, 102, 340, 449], "ensur": [15, 42, 47, 48, 64, 110, 287, 294, 311, 342, 348], "ent": 379, "entail": [296, 334], "entangl": [52, 53, 54, 201, 286, 342, 344, 372, 379, 414], "entangling_g": 201, "enter": [5, 23, 35, 37, 48, 161, 210, 352, 370], "entir": [5, 32, 43, 44, 45, 91, 211, 283, 284, 363], "entiti": [4, 5], "entitl": 5, "entri": [48, 59, 96, 116, 296, 320, 417, 421], "enumer": [31, 47, 97, 98, 105, 110, 169, 286, 332, 374, 450], "env": 36, "environ": [4, 6, 36, 38, 78, 79, 116, 144, 231, 233, 234, 235, 370, 372, 422, 423, 427], "environment": [37, 38, 39], "ep": 378, "epidem": 5, "epr": 422, "eps1": 236, "eps2": 236, "epsilon": 198, "epsilon_": 387, "epsilon_a": 197, "epsilon_b": 197, "epsilon_i": [197, 198], "epsilon_j": 197, "eqnarrai": 381, "equal": [5, 10, 28, 46, 47, 58, 60, 232, 254, 347, 372, 373, 423, 433, 436, 440, 443, 448], "equal_prob": 388, "equat": [37, 120, 226, 227, 230, 233, 235, 287, 292, 294, 311, 370], "equi": 296, "equip": [3, 34, 41], "equit": 5, "equiv": [111, 164, 192, 202, 208, 265, 377, 401, 403], "equival": [3, 5, 14, 26, 29, 47, 52, 53, 56, 57, 58, 60, 61, 69, 91, 116, 120, 312, 313, 326, 327, 334, 335, 339, 340, 342, 343, 346, 405, 409, 413, 415, 423, 438, 450], "er": 16, "era": 55, "erdos_renyi_graph": [54, 61, 340, 439], "err": [29, 32, 163, 164, 189], "error": [5, 14, 29, 30, 32, 42, 47, 55, 60, 97, 98, 99, 100, 101, 111, 112, 113, 163, 164, 236, 387, 394, 423, 450], "error_data": 47, "errortyp": [97, 99, 100, 101], "erupt": 5, "escap": [41, 415], "escartin": 260, "especi": 19, "estim": [28, 29, 30, 82, 103, 111, 163, 164, 210, 237, 267, 356, 422, 423, 426, 447, 450, 454], "estimate_resources_for_batch": 369, "estimated_batch_completion_tim": 103, "estimatorpublik": 357, "et": [188, 203, 204, 205, 206, 286, 330, 352, 413, 415, 417, 450], "eta": [336, 450], "etc": [0, 1, 2, 5, 9, 17, 19, 42, 46, 51, 52, 69, 95, 96, 116, 147, 163, 232, 234, 237, 238, 279, 288, 290, 293, 306, 308, 338, 345, 365, 384, 423, 432, 447], "euclid": 253, "euclidean": 450, "eula": [4, 5], "euler": 319, "europ": 55, "eval": [116, 120, 189, 327], "evalu": [1, 21, 48, 86, 90, 96, 110, 116, 120, 144, 152, 158, 161, 163, 210, 268, 269, 271, 272, 273, 274, 275, 276, 289, 310, 327, 345, 355, 363, 370, 423], "evalut": 353, "even": [5, 11, 14, 18, 23, 24, 31, 33, 41, 46, 53, 61, 195, 201, 209, 210, 237, 340, 417, 423], "event": 5, "everi": [18, 131, 197, 354, 432, 437, 445, 446, 448], "everyth": [1, 16, 53, 450], "everytim": 278, "eviden": [0, 104, 452], "evolut": [18, 34, 35, 37, 38, 43, 45, 165, 188, 207, 296, 364, 370, 423, 438], "evolv": [8, 18, 37, 38, 39, 40, 41, 165, 439], "exact": [3, 28, 43, 96, 189, 296, 449], "exact_eigen_energi": 451, "exact_energi": 449, "exactli": [1, 16, 37, 276, 296], "exampl": [5, 9, 18, 19, 25, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39, 41, 42, 49, 50, 53, 55, 56, 57, 59, 60, 69, 95, 116, 160, 161, 189, 193, 194, 208, 209, 210, 213, 215, 216, 217, 223, 242, 248, 249, 273, 275, 276, 279, 286, 296, 297, 313, 327, 332, 348, 351, 370, 372, 387, 388, 394, 396, 409, 413, 415, 416, 422, 423, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 449, 450, 453, 454], "exc_typ": 131, "except": [5, 42, 47, 52, 55, 59, 63, 86, 90, 93, 112, 113, 117, 125, 129, 130, 131, 135, 138, 209, 237, 290, 293, 306, 308, 367, 368, 417, 423], "exception_onli": 130, "exceptions_util": [63, 110], "exceut": 42, "excit": [39, 188, 199, 203, 205, 370, 449], "exclud": [5, 423], "exclus": [5, 339, 415, 423], "excp": 97, "execut": [0, 3, 5, 7, 8, 9, 10, 14, 17, 18, 22, 29, 30, 31, 32, 33, 41, 42, 46, 47, 48, 49, 55, 57, 75, 78, 79, 82, 98, 103, 106, 110, 116, 120, 123, 165, 210, 222, 225, 226, 227, 228, 229, 230, 268, 271, 272, 276, 283, 284, 301, 328, 331, 338, 345, 348, 350, 361, 362, 363, 364, 369, 370, 422, 423, 425, 426, 431, 432, 440, 441, 442, 443, 444, 445, 446, 450, 452], "exemplifi": 25, "exercis": 5, "exhaust": 417, "exhibit": 55, "exisit": 50, "exist": [5, 51, 279, 434, 444, 451], "exit": [1, 16], "exp": [10, 144, 154, 238, 330, 352, 394, 396, 413], "expand": [39, 61, 413], "expans": [189, 413, 422], "expansion_collect": [52, 61], "expansion_oper": 189, "expect": [4, 29, 30, 31, 34, 37, 39, 40, 46, 47, 130, 158, 165, 210, 253, 275, 330, 332, 334, 355, 413, 417, 423, 449, 450], "expens": 211, "experi": [37, 82, 210, 423], "experienc": 18, "experiment": 415, "explain": [3, 7, 31, 33, 41, 46, 49, 55, 312, 346, 423, 448, 449, 451], "explanatori": 10, "explicit": [1, 116, 161], "explicitli": [5, 25], "explod": 61, "exploit": 440, "explor": [18, 48, 116, 296], "expon": 253, "exponanti": 250, "exponenti": [43, 44, 144, 150, 253, 355, 450, 451], "export": [0, 5, 70, 71, 268], "exposit": 372, "expr": [16, 144, 147, 170], "expr1": 16, "expr2": 16, "express": [5, 8, 14, 17, 19, 24, 46, 52, 60, 144, 147, 158, 161, 165, 170, 265, 266, 269, 271, 272, 273, 274, 276, 298, 314, 320, 327, 370, 396, 417, 423], "extend": [2, 5, 7, 27, 114, 115, 116, 119, 120, 160, 163, 165, 168, 238, 279, 423], "extens": [35, 37, 114, 115, 116, 119, 120, 160, 163, 165, 168, 417, 440, 450], "extent": 5, "extern": 372, "extra": [58, 315, 343, 370], "extract": [48, 51, 87, 95, 121, 144, 151, 163, 237, 250, 268, 285, 290, 302, 304, 305, 364, 408, 410, 433, 434, 435, 436, 437, 448], "extract_j_and_h_from_ob": 364, "extract_linear_oper": [404, 415], "extract_pauli_rot": [404, 413], "extract_phase_polynomi": 404, "extract_st": 370, "extrap_g": 355, "extrap_method": 355, "extrapol": [328, 355, 423, 447, 450], "extrem": 53, "ey": 402, "f": [0, 1, 2, 3, 9, 30, 31, 34, 38, 47, 59, 60, 69, 95, 144, 161, 193, 194, 200, 213, 215, 216, 217, 229, 275, 332, 355, 377, 379, 380, 381, 387, 396, 417, 440, 448, 449, 450], "f2": 406, "f_": [111, 164, 198, 200, 377, 379], "f_0": 198, "f_1": 198, "f_2": 198, "f_3": 198, "f_j": 200, "f_k": [111, 164], "f_l": 200, "f_p": [198, 200], "f_q": [198, 200], "f_r": [198, 200], "facilit": 12, "fact": [5, 16, 18, 52, 54, 96, 116, 431], "factor": [23, 191, 226, 227, 230, 253, 287, 292, 294, 311, 442], "factori": [0, 28, 296, 438], "fail": [4, 5, 14, 16, 144, 278, 334, 348, 423], "failur": 5, "fair": 16, "faith": 5, "fall": [3, 9, 275], "fals": [1, 16, 42, 47, 53, 66, 69, 71, 74, 80, 82, 95, 96, 97, 111, 112, 113, 116, 117, 124, 144, 158, 163, 168, 171, 189, 193, 194, 199, 203, 205, 210, 211, 213, 229, 232, 234, 237, 245, 249, 268, 276, 278, 280, 286, 288, 290, 291, 292, 293, 294, 295, 296, 302, 303, 304, 305, 306, 308, 311, 315, 331, 332, 333, 334, 336, 338, 341, 343, 345, 347, 349, 350, 351, 352, 353, 359, 362, 365, 370, 371, 378, 401, 402, 403, 405, 411, 413, 414, 415, 416, 417, 423], "falsi": 302, "famili": 238, "famou": [25, 431], "fan": 256, "far": [5, 16, 449], "farhi": [296, 438], "fashion": [36, 40], "fast": 210, "faster": [1, 19, 37, 43, 44, 60, 218, 296, 335, 340, 423], "fault": [5, 6, 423], "faulti": 450, "fci": 211, "fdr_pso": 347, "featur": [4, 5, 8, 9, 13, 16, 27, 32, 46, 50, 51, 415, 450], "februari": 423, "fed": [9, 19, 23, 24, 29, 116, 233, 235], "fee": 5, "feed": 59, "feel": 116, "fermion": [7, 34, 62, 63, 110, 354, 370, 450, 451], "fermion_comutator_matrix": 448, "fermion_hamiltonian": [215, 216, 217], "fermionhamiltonian": [188, 193, 195, 207, 215, 216, 217, 354, 448], "fermionic_hamiltonian_exponenti": 451, "fermionic_util": 451, "ferromagnet": 23, "fetch": 345, "few": [0, 1, 3, 16, 49, 53, 56, 57, 58, 60, 130, 237, 432, 439], "fgg14": 438, "fidel": [372, 377, 379, 381, 387, 411, 414], "field": [5, 18, 23, 24, 28, 29, 30, 34, 35, 36, 39, 96, 116, 131, 158, 165, 287, 291, 292, 293, 294, 295, 299, 306, 307, 311, 345, 352, 364, 423, 453], "fifti": 5, "figsiz": [303, 304, 305], "figur": [12, 303, 304, 305], "file": [4, 5, 6, 12, 28, 32, 69, 78, 81, 97, 99, 100, 101, 110, 114, 115, 116, 119, 120, 121, 160, 163, 165, 168, 268, 293, 306, 422, 423, 430], "file_extens": [114, 115, 116, 119, 120, 163, 168], "file_nam": [78, 81], "filenam": [114, 115, 116, 119, 120, 160, 162, 163, 165, 168], "filepath": 422, "fill": 116, "fill_matric": 116, "filter": [20, 29], "final": [0, 1, 3, 4, 8, 10, 12, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 42, 47, 50, 53, 54, 58, 92, 107, 109, 116, 160, 165, 238, 263, 264, 279, 285, 287, 290, 291, 292, 294, 295, 307, 309, 311, 326, 332, 340, 342, 343, 345, 405, 409, 410, 413, 415, 417, 439, 449, 450], "final_observ": 413, "final_qpu": 55, "final_tim": [207, 449], "find": [1, 18, 22, 31, 35, 39, 41, 46, 57, 116, 188, 197, 296, 306, 315, 320, 343, 352, 413, 434, 437, 439, 440, 441, 444, 445, 446, 449], "find_pattern": [57, 315], "fine": [12, 52, 296, 432], "finit": [29, 30, 51, 164], "fire": 5, "first": [0, 1, 3, 6, 10, 14, 15, 16, 28, 31, 35, 41, 43, 45, 48, 52, 54, 56, 57, 58, 60, 75, 79, 82, 95, 116, 120, 123, 159, 163, 168, 175, 188, 200, 207, 210, 220, 223, 237, 248, 252, 257, 259, 261, 263, 264, 267, 268, 273, 279, 280, 290, 293, 294, 296, 306, 308, 313, 315, 330, 334, 336, 342, 346, 347, 351, 352, 353, 362, 363, 369, 370, 377, 379, 380, 381, 382, 413, 414, 416, 421, 428, 433, 435, 436, 442, 443, 449, 450, 454], "first_half": 1, "fisher": 450, "fist": 313, "fit": [5, 48, 55, 355, 450], "five": 25, "fix": [31, 59, 144, 168, 296, 328, 341, 349, 413, 439], "flag": [13, 16], "flagship": 449, "flatten": 248, "flawlessli": 430, "flexibl": [31, 66, 71, 74, 80], "flip": [1, 12, 16, 41, 59, 116, 271, 273, 274, 276, 290, 296, 416, 449], "float": [3, 10, 11, 17, 31, 35, 37, 38, 40, 76, 91, 103, 108, 111, 116, 120, 137, 160, 161, 163, 164, 165, 167, 170, 189, 190, 193, 194, 195, 197, 198, 200, 202, 207, 208, 209, 210, 211, 212, 213, 232, 233, 234, 236, 238, 268, 278, 283, 290, 293, 296, 298, 306, 308, 315, 320, 330, 332, 336, 343, 345, 346, 347, 352, 353, 357, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 396, 405, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 449, 450], "float64": [59, 95, 209, 248], "flow": [46, 116, 371], "fly": 331, "fmt": 162, "fname": [114, 115, 116, 119, 120, 160, 163, 165, 168, 268, 293, 306], "fno": [35, 37], "fock": [39, 188, 191, 196, 197, 211, 450, 451], "focu": [1, 332], "focus": [423, 440], "fold": 450, "folder": 5, "follow": [0, 1, 4, 5, 12, 14, 16, 17, 18, 22, 23, 24, 30, 31, 32, 35, 37, 39, 40, 41, 42, 46, 47, 48, 52, 55, 57, 58, 59, 60, 61, 95, 98, 110, 116, 120, 123, 144, 158, 167, 172, 197, 200, 222, 223, 236, 237, 238, 239, 246, 248, 249, 251, 253, 255, 271, 278, 279, 285, 288, 290, 293, 296, 297, 306, 308, 313, 315, 318, 326, 328, 342, 343, 348, 355, 361, 362, 363, 372, 374, 388, 413, 415, 423, 427, 428, 430, 438, 439, 440, 441, 447, 449, 450], "font": [303, 304, 305], "font_siz": [303, 304, 305], "foo": [14, 20, 241], "footnot": 5, "footprint": 249, "foral": [17, 24, 60, 190, 208], "forbidden": 170, "forc": [5, 58, 297, 300, 401, 403], "forego": 5, "forese": 5, "fork": [123, 223, 329, 363, 369], "form": [5, 16, 23, 26, 35, 46, 88, 89, 95, 97, 198, 200, 233, 235, 242, 247, 303, 304, 305, 306, 321, 334, 351, 352, 355, 357, 360, 364, 383, 394, 396, 407, 423, 432, 445, 450, 454], "formal": [28, 39, 41, 51, 332, 440], "format": [4, 5, 12, 16, 28, 32, 71, 86, 87, 96, 116, 118, 158, 162, 166, 170, 211, 268, 286, 296, 384, 385, 425, 427, 450], "formul": [22, 23, 24, 25, 285, 287, 291, 292, 294, 306, 307, 309, 311, 417, 431, 432, 448, 453], "formula": [16, 17, 23, 28, 53, 60, 86, 90, 95, 96, 110, 116, 118, 197, 237, 240, 242, 268, 273, 276, 289, 327], "formula_ev": [96, 110], "formula_str": 118, "forth": [5, 450], "forward": [53, 371], "found": [0, 3, 22, 31, 35, 37, 42, 43, 57, 116, 147, 188, 189, 210, 275, 287, 291, 292, 293, 294, 295, 301, 304, 306, 307, 308, 311, 315, 345, 367, 368, 416, 421, 423, 424, 432, 441, 447, 451], "four": [201, 449], "fourier": [161, 260, 265, 417, 422], "fpic": [35, 37], "frac": [1, 17, 24, 37, 38, 40, 60, 120, 161, 193, 197, 198, 200, 207, 208, 210, 248, 265, 292, 296, 306, 321, 322, 336, 382, 388, 396, 401, 403, 423, 432, 439, 448], "frac12": 39, "framework": [1, 2, 3, 4, 7, 8, 9, 11, 12, 18, 31, 33, 42, 46, 47, 48, 50, 93, 110, 144, 238, 293, 306, 332, 439, 452], "franc": 5, "free": [5, 15, 116, 268, 355, 449, 450], "free_ancilla": [16, 268, 279], "freed": [15, 16, 279], "freed_ancilla": 279, "freedom": [38, 39], "freez": [188, 208, 212], "frequenc": [28, 29, 38, 54, 111, 116, 161, 164, 165, 306, 337, 404, 423], "frequency_map": [54, 337, 404], "frequent": 54, "fresh": [15, 46, 116, 125, 126, 249, 266, 268, 279, 290, 338, 345], "freshli": 116, "friendli": [5, 31, 116, 441], "from": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 67, 69, 71, 74, 78, 79, 80, 83, 87, 89, 95, 96, 97, 98, 104, 105, 108, 110, 114, 115, 116, 117, 119, 120, 121, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 197, 198, 204, 208, 209, 210, 212, 213, 215, 216, 217, 224, 226, 227, 230, 233, 235, 237, 238, 239, 240, 245, 248, 249, 250, 253, 266, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 311, 315, 316, 318, 321, 322, 323, 324, 325, 326, 330, 332, 334, 338, 339, 340, 341, 342, 345, 346, 348, 349, 350, 351, 355, 362, 363, 364, 365, 370, 371, 372, 387, 388, 393, 394, 396, 398, 402, 404, 408, 409, 413, 415, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453, 454], "from_byt": [114, 116, 120, 163, 164, 168], "from_decomposit": 339, "from_list": 454, "from_nx": [49, 168], "from_str": 147, "from_thrift": [114, 115, 116, 119, 120, 163, 164, 168, 293, 306], "front": [167, 334, 423], "frugal": 16, "fsim": 205, "fubini": 450, "fuer": 248, "full": [5, 14, 18, 41, 43, 88, 89, 91, 117, 210, 211, 248, 257, 265, 290, 293, 306, 308, 338, 417, 423, 432, 441, 450], "full_kroneck": 402, "full_rary_tre": [295, 435, 441, 442, 443, 445], "fulli": [116, 173, 340, 430, 438], "fun": [3, 137, 278, 327, 343, 346], "func": [132, 133, 134, 137, 161, 238, 241, 275], "function": [0, 1, 3, 5, 9, 10, 11, 15, 16, 17, 22, 23, 24, 31, 33, 35, 41, 42, 47, 50, 51, 54, 56, 57, 58, 59, 60, 66, 71, 74, 80, 88, 89, 95, 110, 116, 117, 119, 123, 130, 131, 137, 142, 143, 144, 148, 149, 150, 156, 158, 161, 162, 189, 191, 193, 194, 195, 207, 208, 210, 211, 212, 213, 223, 224, 232, 237, 238, 241, 244, 245, 268, 275, 278, 283, 284, 288, 290, 293, 302, 303, 304, 305, 306, 308, 309, 313, 315, 319, 321, 322, 323, 324, 325, 327, 332, 338, 339, 340, 343, 345, 348, 351, 352, 353, 356, 359, 363, 364, 368, 372, 394, 396, 413, 415, 417, 426, 427, 428, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451], "functool": [16, 31], "funrol": [35, 37], "further": [23, 24, 61, 268, 340, 346, 370], "furthermor": [5, 35], "fuse": [220, 423], "fusion": [62, 63, 334, 362, 423], "fusionplugin": [218, 328, 362, 422, 423], "futur": 20, "futurewarn": 423, "g": [3, 5, 7, 9, 10, 13, 17, 23, 25, 33, 35, 37, 42, 46, 51, 60, 69, 82, 95, 106, 116, 161, 189, 232, 233, 234, 251, 252, 254, 256, 279, 285, 288, 290, 293, 306, 308, 336, 338, 345, 351, 352, 355, 370, 423, 440, 450, 452], "g_": 336, "gadget": 440, "gain": 413, "gamma": [37, 59, 290, 293, 306, 308, 321, 353, 396, 438], "gamma_max": [287, 291, 292, 294, 295, 307, 311], "gamma_min": [287, 291, 292, 294, 295, 307, 311], "gamma_t": [23, 24, 165, 290, 293, 306, 308, 433, 434, 435, 436, 437], "gap": 296, "garcia": 260, "gate": [0, 1, 2, 7, 8, 13, 15, 16, 18, 23, 24, 25, 26, 31, 33, 42, 44, 46, 47, 49, 51, 54, 55, 56, 57, 58, 69, 83, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98, 110, 116, 117, 119, 125, 126, 127, 128, 135, 136, 137, 162, 168, 169, 201, 205, 207, 218, 219, 220, 221, 232, 233, 234, 235, 236, 238, 239, 245, 247, 248, 249, 250, 253, 267, 268, 271, 275, 279, 280, 283, 284, 285, 286, 288, 290, 293, 306, 308, 312, 313, 314, 315, 318, 321, 322, 323, 324, 325, 326, 328, 330, 332, 334, 335, 339, 340, 343, 344, 345, 346, 348, 349, 352, 355, 359, 362, 363, 365, 372, 395, 400, 401, 402, 403, 408, 410, 411, 413, 414, 416, 417, 422, 423, 429, 430, 431, 450, 452], "gate1": 268, "gate2": 268, "gate_d": [232, 234], "gate_nois": [233, 235], "gate_po": 108, "gate_s": 253, "gate_set": [49, 52, 63, 110, 116, 238, 249, 288, 290, 293, 306, 308, 315, 346, 348], "gate_signatur": 249, "gate_tim": [116, 232, 233, 234, 283], "gate_typ": [232, 234, 395], "gated": [95, 96, 116], "gatedefinit": [94, 96], "gatelist": [283, 284], "gatenam": [60, 312, 315], "gaterewrit": 328, "gates_specif": [233, 235, 395], "gateset": [49, 116, 119, 135, 138, 236, 249, 268, 315, 339, 346, 348], "gatesignatur": [135, 136, 238, 245, 249], "gatesspecif": [231, 232, 233, 235, 395], "gatesspecifi": [232, 234], "gatesyntax": [135, 138], "gatesyntaxredefinit": [135, 136], "gatetyp": [86, 96, 117], "gather": [245, 423], "gauss": 415, "gaussian": [38, 51, 415], "gen": 137, "gener": [0, 5, 9, 11, 14, 15, 16, 17, 18, 22, 23, 28, 29, 36, 37, 41, 43, 44, 51, 52, 53, 54, 61, 62, 63, 66, 69, 71, 74, 80, 95, 116, 120, 122, 123, 125, 126, 127, 137, 147, 161, 165, 170, 188, 189, 210, 231, 232, 234, 237, 238, 245, 248, 249, 251, 252, 253, 254, 255, 258, 259, 266, 267, 268, 276, 278, 279, 286, 288, 290, 293, 296, 302, 303, 306, 308, 309, 315, 328, 334, 339, 340, 342, 343, 345, 353, 362, 372, 389, 412, 413, 417, 418, 419, 421, 429, 430, 431, 432, 438, 439, 449, 450, 451], "generate_gate_set": 237, "generate_nois": 161, "generate_random_observ": 404, "generate_trotter_ansatz": 404, "generator_exception_onli": 130, "generatorexcept": [97, 130, 132], "geometri": [211, 449], "geq": [208, 292], "get": [26, 28, 29, 35, 37, 42, 46, 48, 57, 58, 60, 99, 100, 101, 120, 144, 164, 188, 196, 232, 234, 313, 358, 361, 415, 422, 423, 426, 449, 450, 451, 452, 454], "get_active_space_hamiltonian": 451, "get_average_process_fidel": 372, "get_best_index": [283, 284], "get_best_paramet": [287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 433, 434, 435, 436, 437], "get_circuit": 137, "get_cluster_op": [188, 451], "get_current_qpu": 361, "get_default_qpu": [0, 1, 2, 3, 16, 28, 29, 30, 31, 47, 48, 50, 55, 97, 116, 119, 120, 189, 239, 332, 361, 423, 441, 442, 443, 444, 445, 446, 449, 450], "get_diamond_norm": 372, "get_electronic_hamiltonian": [208, 448, 449], "get_entanglement_process_fidel": 372, "get_euler_angl": [59, 319], "get_free_ancilla": [268, 279], "get_gate_tim": [232, 234], "get_hf_ket": [188, 451], "get_initial_params_and_cluster_op": 451, "get_ipython": 162, "get_item": 144, "get_item_expr": 151, "get_j_h_and_offset": [293, 306], "get_matrix": [137, 193, 194, 213, 449, 450, 451], "get_nois": 161, "get_noisy_qpu": 361, "get_observ": [23, 24, 25, 288, 290, 293, 306, 308, 309], "get_param_gener": [125, 232], "get_predef_gener": [125, 232], "get_process_dist": 372, "get_q_and_offset": 308, "get_qaoa_gate_set": [288, 290, 293, 306, 308], "get_qc": 427, "get_quantum_channel": [232, 234], "get_routin": 248, "get_spec": [47, 49, 369], "get_state_fidel": [372, 377, 379], "get_terms_ob": [289, 310], "get_trace_dist": [372, 380], "get_vari": [11, 48, 114, 116, 120, 147, 165, 170, 266, 289, 310, 336, 423], "getbbox": 423, "getlength": 423, "getsiz": 423, "getter": 168, "getting_start": 422, "gg": [287, 355, 450], "gh": 422, "ghostscript": 4, "ghz": 47, "gilchrist": 377, "github": [422, 423, 424, 447], "giurgica": 450, "give": [5, 12, 18, 35, 38, 47, 48, 59, 223, 233, 235, 431], "given": [1, 3, 5, 10, 23, 24, 28, 29, 31, 38, 41, 47, 48, 50, 58, 59, 95, 116, 120, 123, 131, 137, 144, 161, 171, 188, 189, 190, 210, 232, 233, 234, 235, 247, 265, 268, 283, 284, 287, 291, 292, 294, 295, 307, 311, 320, 327, 330, 332, 334, 346, 364, 374, 375, 379, 394, 396, 405, 406, 407, 413, 420, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 449, 450], "glibc": 423, "global": [41, 58, 320, 346, 372, 419, 421, 439, 450], "global_metr": [58, 346], "gnu": [35, 37], "go": [3, 46, 60, 61, 210, 315, 355, 413, 417, 442, 443, 444, 445, 446], "goal": [52, 58], "god": 5, "goe": [371, 401, 403], "goldston": [296, 438], "good": [1, 5, 16, 42, 53, 210, 432, 450], "goodwil": 5, "googl": [66, 172, 174, 423, 428], "google_circ": 428, "google_sycamor": 172, "got": 273, "goubault": [51, 415], "govern": 5, "government": 5, "gpu": [3, 9, 106, 275], "grad_norm": 336, "gradient": [50, 58, 120, 328, 330, 336, 343, 346, 422, 423, 447, 450], "gradientdescentoptim": [328, 450], "grai": [286, 417], "grant": 5, "graph": [49, 57, 60, 119, 168, 169, 222, 225, 226, 227, 228, 230, 285, 286, 290, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 308, 311, 315, 340, 344, 346, 405, 406, 411, 413, 414, 415, 417, 420, 422, 423, 434, 435, 437, 439, 440, 441, 442, 444, 445, 453], "graph_colour": 291, "graph_colouring_appl": 446, "graph_colouring_gener": 446, "graph_colouring_problem": 291, "graph_partit": 292, "graph_partitioning_ann_prob": 432, "graph_partitioning_appl": 443, "graph_partitioning_gener": 443, "graph_partitioning_problem": [292, 433], "graphcircuit": [56, 57, 60, 312, 335, 346], "graphcolour": [285, 308, 446], "graphcolouringgener": [222, 446], "graphpartit": [285, 433, 443], "graphpartitioninggener": [222, 433, 443], "graphpartitioningresult": [225, 226, 228, 291, 292, 294, 295, 301], "grasp": 31, "gray_synth": [286, 417], "gray_synth_on_graph": 417, "graysynth": [286, 413, 417], "greater": [423, 438], "greedi": [51, 54, 288, 290, 293, 306, 308, 337, 344, 404, 405, 411, 413, 415, 417], "greedili": [413, 415, 417], "greedy_depth": 413, "greedy_gauss": 415, "greedy_map": [54, 337, 404], "green": 237, "grid": [52, 172, 175, 186, 428], "griddevic": [52, 54, 172], "gridqubit": 428, "griend": 51, "grimslei": 330, "grossli": 5, "ground": [3, 18, 23, 31, 189, 211, 290, 296, 438, 439, 449, 450], "groundstat": 211, "group": [51, 58, 120, 200, 218, 220, 221, 312, 318, 326, 334, 344, 346, 413, 424, 440], "group_swap": 326, "grover": [237, 239, 246, 422], "grover_diffus": 237, "grow": 37, "gset": 432, "gsyntax": 95, "guarante": [52, 210], "guess": [211, 449, 451], "guess_energi": 449, "guess_init_param": [188, 451], "guid": [1, 4, 27, 64, 116, 237, 312, 317, 342, 346, 452], "gushu": 55, "gutmann": [296, 438], "h": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 19, 23, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 47, 50, 52, 53, 56, 57, 58, 59, 60, 61, 83, 95, 116, 120, 165, 189, 192, 193, 194, 198, 200, 202, 207, 208, 210, 213, 215, 216, 217, 226, 227, 230, 232, 233, 234, 235, 239, 248, 249, 253, 278, 279, 287, 289, 292, 293, 294, 295, 296, 306, 307, 308, 311, 326, 336, 344, 364, 407, 413, 416, 423, 429, 430, 439, 440, 448, 449, 453, 454], "h0": 413, "h1": 413, "h2": 422, "h_": [23, 24, 36, 41, 192, 193, 197, 198, 200, 207, 208, 210, 439, 448], "h_0": [296, 438, 439], "h_1": 413, "h_2": [413, 449], "h_a": [226, 227, 230, 287, 292, 294, 311], "h_b": [226, 227, 230, 287, 292, 294, 311], "h_c": [438, 439], "h_el": 210, "h_elec": 448, "h_fermion": 448, "h_fermion1": 448, "h_fermion2": 448, "h_field": [23, 453], "h_gate": 60, "h_hat_ij": 214, "h_hat_ijkl": 214, "h_i": [18, 120, 165, 364, 440], "h_left": 416, "h_pq": [193, 448], "h_pqr": [193, 448], "h_resourc": 370, "h_right": 416, "h_rz": 278, "h_spin": 448, "h_spin1": 448, "h_spin2": 448, "h_target": 370, "h_target_0": 35, "h_target_12": 35, "ha": [5, 10, 12, 15, 16, 20, 23, 24, 28, 31, 33, 39, 40, 41, 46, 47, 55, 57, 58, 60, 64, 78, 92, 95, 116, 120, 144, 161, 167, 198, 223, 251, 252, 253, 257, 258, 259, 266, 279, 286, 289, 315, 332, 363, 385, 394, 396, 403, 422, 423, 436, 437, 445, 450, 451], "had": [14, 16, 25, 88, 89, 91], "hadamard": [17, 51, 120, 423], "half": [1, 363, 423], "halt": 165, "ham": [296, 332, 439], "ham_path": 415, "hamiltonian": [3, 8, 18, 22, 24, 33, 34, 35, 36, 37, 38, 39, 40, 110, 160, 161, 165, 189, 192, 207, 208, 209, 210, 215, 216, 217, 226, 227, 230, 233, 235, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 306, 307, 308, 309, 311, 354, 364, 370, 407, 415, 422, 423, 438, 439, 447, 449, 450, 451], "hamiltonian_sp": 449, "hamitonian": 439, "hamming_weight": 296, "hand": [57, 60, 116, 123, 147, 240, 269, 271, 272, 273, 274, 276], "handl": [3, 16, 38, 41, 52, 188, 189, 237, 285, 288, 290, 293, 306, 308, 348, 365, 417, 423, 438, 448, 452], "handler": [140, 371], "happen": [37, 52, 53, 58, 249, 268, 271, 272, 276, 421], "hard": [16, 25, 41, 54, 58, 332, 431, 439, 453], "harder": 58, "hardwar": [10, 18, 31, 35, 37, 38, 42, 49, 51, 52, 53, 55, 60, 62, 63, 106, 119, 162, 188, 201, 229, 328, 329, 332, 333, 339, 342, 343, 348, 349, 370, 406, 420, 422, 423, 449], "hardware_model": [37, 38, 162, 370], "hardware_spec": 47, "hardwaremodel": [37, 38, 161, 231, 370], "hardwarespec": [42, 46, 47, 49, 55, 110, 116, 120, 123, 168, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 225, 226, 227, 228, 229, 230, 329, 332, 333, 335, 339, 343, 346, 348, 349, 354, 369, 405, 406, 420, 423], "harm": 5, "harmless": 5, "harmon": [38, 39], "harre": 450, "hartre": [188, 191, 196, 197, 211, 450, 451], "has_matric": 116, "has_statevector": [47, 163], "hat": [110, 189, 208, 214, 355, 401, 417, 450], "hate": 405, "have": [1, 2, 4, 5, 7, 10, 11, 14, 15, 16, 18, 19, 28, 31, 35, 41, 42, 48, 52, 53, 55, 58, 60, 78, 88, 89, 91, 95, 96, 114, 115, 116, 119, 120, 131, 144, 147, 160, 161, 163, 165, 168, 169, 188, 202, 233, 235, 237, 268, 273, 276, 278, 283, 293, 306, 308, 313, 315, 326, 327, 332, 334, 340, 342, 343, 344, 346, 352, 365, 370, 402, 405, 413, 417, 423, 424, 432, 438, 439, 448, 449, 450, 451, 454], "haven": 430, "hay": 51, "hbar": 39, "he": 28, "head": [17, 422], "health": 5, "heavi": 79, "heavisid": [20, 38, 144, 423], "heisenberg": 3, "hello": 0, "help": [1, 8, 16, 31, 39, 54, 57, 58, 188, 189, 286, 338, 423, 424, 434, 447, 448, 450], "helper": [168, 188, 208, 209, 211, 432, 449], "henc": [1, 18, 25, 37, 38, 39, 210, 278, 431], "here": [3, 4, 10, 12, 14, 15, 16, 17, 19, 25, 29, 30, 53, 58, 59, 86, 96, 97, 188, 200, 208, 248, 249, 271, 275, 279, 334, 348, 363, 372, 423, 431, 432, 440, 441, 442, 443, 444, 445, 446, 449, 450, 454], "herebi": 5, "herein": 5, "hereinaft": 5, "hermitian": [18, 160, 165], "hess_inv": 3, "heurist": [41, 53, 58, 288, 290, 293, 306, 308, 328, 340, 343, 346, 362, 413, 415, 417, 438], "hf": 191, "hf_init": 450, "hidden": 135, "high": [1, 8, 9, 11, 16, 18, 41, 56, 116, 120, 195, 197, 208, 212, 244, 250, 307, 328, 343, 356, 363, 418, 436, 442, 443, 444, 445, 446], "higher": [8, 37, 48, 114, 115, 116, 119, 163, 164, 168, 207, 209, 237, 268, 332, 343, 345, 417, 423, 440], "highest": [79, 432], "highlight": 423, "hilbert": [37, 39, 110, 160], "hilebrt": 377, "hinder": 54, "hint": [431, 432], "hirata": 55, "hiratanakanishiyamashitanakashima09": [55, 343], "histogram": 163, "histor": 41, "hold": [5, 12, 16, 257, 259, 261, 262, 263, 264], "home": 423, "homebrew": 6, "hood": 345, "hop": [200, 202], "hopefulli": 41, "host_ip": [123, 223, 329, 363, 369], "hostnam": 223, "hous": 53, "household": [237, 239, 246], "how": [1, 3, 5, 7, 16, 17, 18, 20, 22, 31, 33, 35, 39, 41, 46, 48, 49, 55, 57, 58, 59, 61, 116, 200, 248, 279, 346, 411, 413, 415, 438, 448, 449, 450, 451], "howev": [5, 6, 10, 17, 18, 25, 29, 37, 52, 110, 161, 210, 268, 287, 291, 292, 294, 295, 307, 311, 352, 362, 431, 432, 450], "hpq": [193, 449], "hpqr": [193, 449], "hpso_tvac": 347, "html": [69, 423, 429, 430], "http": [5, 23, 55, 69, 250, 256, 260, 353, 377, 422, 427, 429, 430], "hubbard": [188, 202, 422, 448, 449], "huge": [391, 392], "human": [5, 12], "hundr": 19, "hurrican": 5, "hw": 119, "hybrid": [9, 200, 328, 351, 423, 447, 450], "hypercub": 347, "hz": 57, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 69, 71, 74, 75, 78, 79, 80, 82, 83, 84, 86, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 110, 111, 112, 113, 116, 117, 120, 123, 125, 129, 131, 135, 136, 137, 138, 144, 147, 151, 152, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 367, 368, 369, 370, 371, 372, 377, 379, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 396, 397, 398, 400, 401, 403, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "iT": 191, "i_": [190, 192, 197, 200, 208, 209, 214, 248, 363, 448], "i_0i_1i_2i_3": 362, "i_1": [248, 390, 398], "i_2": 390, "i_3i_2i_1i_0": 362, "i_k": 248, "i_l": 248, "i_m": 398, "i_n": 390, "ibm": [52, 55, 59, 78, 79, 82, 172, 176, 177, 178, 179, 180, 181, 182, 322, 342, 423, 426, 454], "ibm_backend": [78, 79, 426], "ibm_brisban": [78, 79, 426], "ibm_burlington": 172, "ibm_johannesburg": 172, "ibm_melbourn": 172, "ibm_quantum": 426, "ibm_rueschlikon": 172, "ibm_singapor": 172, "ibm_tokyo": 172, "ibm_yorktown": 172, "ibmq_qasm_simul": [82, 426], "ic": 450, "icreas": 120, "id": [81, 95, 103], "idea": [210, 440, 450], "ideal": [29, 30, 43], "ident": [17, 56, 61, 268, 355, 377, 379, 380, 388, 390, 450], "identif": 5, "identifi": [5, 69, 104, 197, 310, 354, 372], "identify": 96, "idl": [233, 235, 236, 283], "idle_nois": [233, 235], "idx": [10, 31, 50, 332], "idx_var": 151, "ieee": 55, "ieeexplor": 55, "iff": [163, 168, 329], "ignor": [170, 268, 271, 278, 286, 334, 342, 344, 354, 405, 415, 423], "ignore_large_g": [283, 343], "ii": [5, 190, 208, 454], "iii": 5, "iint": [192, 208], "ij": [23, 24, 41, 190, 195, 197, 200, 202, 208, 214, 336, 364, 400, 403, 440], "ijij": [190, 208], "ijji": [190, 208], "ijkl": [200, 208, 214], "illeg": 131, "illegal_g": 98, "illustr": [3, 29, 50, 54, 209, 332, 413, 449], "im": 95, "imag": [144, 150], "imagemagick": 4, "imagin": [14, 17, 37, 40, 161], "imaginari": [144, 153], "imbric": 363, "immedi": 5, "imp": 200, "impact": 5, "imperfect": [35, 231], "implement": [1, 9, 10, 13, 14, 15, 16, 17, 18, 41, 42, 48, 53, 56, 84, 94, 95, 96, 110, 116, 117, 137, 158, 160, 188, 191, 194, 207, 208, 212, 213, 237, 239, 241, 246, 247, 248, 249, 250, 256, 257, 258, 259, 260, 268, 280, 286, 296, 298, 299, 309, 316, 330, 331, 332, 338, 340, 343, 344, 345, 346, 352, 357, 360, 369, 394, 395, 397, 399, 402, 404, 406, 410, 413, 415, 416, 417, 423, 438, 448, 450], "impli": [5, 415, 417], "implicitli": [273, 394], "import": [0, 1, 2, 3, 5, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 69, 95, 96, 97, 98, 104, 105, 116, 117, 119, 120, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 208, 209, 213, 215, 216, 217, 238, 239, 240, 248, 249, 253, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 306, 307, 308, 311, 315, 316, 321, 322, 323, 324, 325, 326, 332, 334, 340, 342, 346, 348, 351, 362, 365, 372, 387, 388, 394, 396, 402, 409, 413, 415, 416, 418, 419, 421, 423, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 453, 454], "importerror": 368, "impos": [58, 315, 433, 434, 437, 453], "improperli": 54, "improv": [5, 42, 46, 54, 189, 197, 334, 340, 346, 349, 423, 450, 451], "impur": [188, 198, 200, 448, 451], "in_memori": 47, "inabl": 5, "inaccuraci": 5, "inact": [208, 212], "inactive_occupied_so": 212, "inadequ": 5, "inbound": 279, "incident": 5, "includ": [1, 4, 5, 9, 23, 25, 28, 35, 37, 41, 51, 55, 66, 69, 71, 74, 80, 89, 110, 116, 161, 199, 201, 203, 207, 210, 237, 238, 249, 252, 253, 268, 301, 302, 303, 304, 305, 334, 338, 339, 341, 343, 362, 370, 390, 423, 447, 448, 451, 452], "include_default_gate_set": 116, "include_lock": [249, 268], "include_matric": [69, 97, 249, 268], "include_matrix": 339, "inclus": [5, 119], "incom": [46, 48, 116, 334, 337, 340], "incompat": 97, "incorpor": 5, "increas": [16, 41, 60, 116, 117, 210, 218, 219, 249, 315, 326, 355, 438, 439, 450], "increasingli": 37, "increment": 16, "incur": [5, 41], "inde": [16, 24, 48, 53, 210], "indemn": 5, "indemnifi": 5, "indentif": 268, "indep": 237, "independ": [5, 231, 234, 279, 285, 296, 298, 306, 345, 423, 439], "independantli": 52, "independentaqo": [296, 297], "indepent": 237, "index": [10, 17, 31, 47, 48, 92, 96, 99, 100, 101, 116, 147, 151, 163, 168, 169, 188, 196, 199, 202, 203, 233, 235, 242, 270, 271, 272, 276, 283, 284, 286, 289, 310, 315, 336, 363, 402, 413, 416], "indic": [5, 17, 57, 81, 95, 96, 188, 190, 200, 208, 214, 232, 233, 234, 235, 237, 268, 278, 279, 363, 398, 449], "indices_spin_1": [433, 434, 435, 436, 437], "indices_spin_minus_1": [433, 435, 436], "indirect": 5, "individu": [4, 5, 32, 257, 344, 433, 443], "induc": 120, "induct": 289, "inertia": 347, "inertia_funct": 347, "inertia_kwarg": 347, "inertia_weight": 347, "inexact": 296, "infer": [268, 355, 423, 450], "infil": 17, "infinit": [4, 28, 29, 30, 164, 165, 189], "infix": [144, 158], "influenc": [286, 362, 417, 450], "info": [35, 89, 211, 341, 449], "inform": [0, 2, 3, 5, 10, 28, 29, 32, 33, 42, 43, 44, 46, 47, 55, 78, 96, 97, 116, 163, 164, 165, 166, 209, 224, 225, 226, 227, 228, 230, 231, 236, 244, 248, 260, 266, 271, 272, 339, 342, 345, 346, 358, 371, 387, 411, 415, 422, 423, 426, 440, 448, 449, 450], "informatik": 248, "infrastructur": 5, "infring": 5, "infti": 396, "inherit": [33, 42, 47, 48, 139, 237, 285, 290, 293, 306, 308, 338, 340, 345, 363, 404, 423, 438, 448, 454], "init": [39, 57, 169, 283, 284, 315, 327], "init_non": 168, "init_st": 413, "init_vec": 210, "initi": [5, 10, 13, 21, 28, 33, 37, 38, 39, 42, 43, 45, 46, 47, 54, 57, 58, 59, 92, 116, 120, 165, 188, 197, 208, 209, 210, 232, 234, 248, 249, 266, 268, 290, 293, 296, 297, 298, 299, 300, 306, 308, 309, 334, 336, 338, 340, 341, 343, 347, 349, 351, 352, 353, 365, 405, 413, 423, 438, 439, 440, 449, 450, 451], "initial_job": [48, 52], "initial_map": [54, 404], "initial_object": 338, "initialmap": [52, 328], "initialstatebuild": [296, 297, 298], "initil": 351, "inject": 299, "inject_initial_st": [298, 299, 300], "injunct": 5, "inlin": [17, 55, 116, 117, 162, 237, 249, 268, 328, 331, 422, 423], "innov": 248, "inoccupi": 195, "inplac": [331, 411, 414], "input": [10, 16, 23, 52, 61, 67, 69, 83, 86, 92, 117, 120, 165, 195, 222, 248, 249, 265, 273, 278, 279, 286, 290, 293, 306, 308, 312, 320, 333, 334, 340, 342, 348, 363, 407, 408, 410, 411, 413, 414, 415, 417, 423, 440, 442, 443, 444, 445, 446, 448, 449], "ins": 355, "insert": [31, 50, 52, 53, 54, 58, 116, 328, 343, 346, 349, 355, 417], "insert_g": 116, "insert_in": 286, "insid": [4, 9, 10, 13, 14, 15, 16, 19, 48, 53, 54, 97, 110, 116, 117, 118, 123, 147, 162, 163, 210, 223, 226, 227, 230, 243, 251, 252, 253, 254, 255, 268, 277, 278, 279, 287, 288, 290, 292, 293, 294, 306, 308, 311, 328, 329, 330, 336, 338, 342, 344, 345, 347, 351, 352, 353, 363, 369, 371, 417, 422], "inspir": [204, 250, 260, 438], "instal": [0, 3, 5, 9, 64, 210, 275, 422, 423, 425], "instanc": [2, 9, 10, 12, 14, 16, 17, 23, 24, 25, 28, 31, 33, 35, 37, 42, 43, 46, 47, 49, 52, 54, 55, 56, 57, 58, 60, 75, 87, 95, 96, 114, 115, 116, 119, 120, 144, 158, 160, 163, 164, 165, 168, 172, 237, 238, 249, 257, 268, 271, 272, 276, 286, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 313, 314, 315, 326, 327, 332, 340, 342, 346, 362, 372, 394, 396, 413, 415, 423, 426, 430, 432, 438, 439, 441], "instantan": 233, "instanti": [0, 3, 11, 42, 78, 79, 95, 123, 147, 189, 240, 241, 244, 249, 266, 269, 271, 272, 273, 274, 278, 288, 290, 293, 306, 308, 326, 334, 339, 341, 342, 356, 358, 364], "instantli": 432, "instead": [4, 10, 19, 28, 116, 171, 237, 239, 250, 283, 326, 340, 345, 396, 423, 441, 448, 451], "institut": 5, "instruct": [8, 9, 12, 70, 97, 116, 240, 299], "int": [1, 10, 14, 17, 79, 83, 88, 91, 95, 99, 100, 101, 103, 104, 106, 108, 116, 117, 119, 120, 121, 123, 124, 137, 142, 143, 147, 158, 160, 163, 165, 166, 167, 168, 173, 175, 183, 186, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 223, 225, 227, 229, 232, 233, 234, 235, 238, 241, 242, 246, 248, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 276, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 308, 310, 311, 315, 329, 330, 334, 336, 340, 341, 343, 346, 347, 350, 352, 353, 355, 360, 362, 363, 364, 369, 370, 371, 377, 387, 388, 390, 391, 392, 395, 400, 401, 402, 403, 405, 406, 412, 413, 415, 416, 418, 419, 420, 433, 434, 435, 436, 437], "int64": [419, 436], "int_": 396, "int_kernel": 200, "int_msb_valu": 166, "integ": [42, 60, 88, 89, 91, 95, 96, 116, 142, 143, 151, 166, 191, 269, 271, 272, 274, 276, 278, 279, 285, 287, 347, 349, 370, 413, 432], "integer_to_spin": [141, 433, 434, 435, 436, 437], "integr": [37, 40, 42, 188, 190, 192, 197, 208, 209, 211, 214, 315, 396, 449], "intellectu": 5, "intend": [5, 278, 334, 423], "intens": [38, 198, 396, 450], "intention": 5, "intep": 52, "interact": [4, 23, 39, 40, 42, 54, 55, 131, 194, 211, 285, 362, 404, 411, 414, 448, 449], "interest": [11, 16, 18, 36, 189, 210, 355, 448, 450], "interfac": [0, 4, 5, 8, 9, 11, 26, 41, 43, 44, 48, 52, 56, 78, 139, 140, 223, 268, 285, 288, 296, 297, 299, 309, 312, 329, 338, 340, 345, 361, 364, 369, 404, 423, 438, 449, 452], "intermedi": [3, 9, 16, 31, 32, 92, 97, 107, 108, 111, 163, 164, 210, 237, 334, 423], "intermediari": [89, 352], "intermediate_measur": [32, 163, 164], "intermediatemeasur": [92, 107, 163, 164], "intern": [5, 15, 55, 87, 124, 211, 229, 249, 289, 290, 293, 302, 306, 308, 315, 330, 331, 346, 350, 356, 371, 416, 423], "interop": [4, 62, 63, 422, 423, 426, 427, 428, 429, 430], "interoper": [7, 423], "interoperability_ann": 7, "interpol": [290, 293, 306, 308, 309], "interpret": [5, 224, 225, 226, 227, 228, 230, 411, 413, 414], "interrupt": [5, 12], "interv": 210, "intim": 22, "intprob": 89, "intprob_list": 88, "introduc": [11, 27, 31, 50, 404, 413, 415, 417, 449], "introduct": [35, 416, 421], "intuit": 362, "inv": 415, "invalid": [31, 42, 98, 423], "invalid_arg": 98, "invers": [147, 291, 292, 294, 295, 302, 311, 396, 415, 416, 450], "invert": [116, 253], "investig": [5, 161, 341], "involut": 326, "involv": [17, 35, 37, 40, 41, 301, 303, 439], "io": [69, 429, 430], "ion": [52, 59, 319, 321, 342], "ions_decomposit": 319, "iordani": 248, "ip": [31, 33, 46, 124, 229, 350, 371, 427], "ipynb": [4, 422], "ipython": [117, 162, 423], "ipython_dir": 423, "iqm": [52, 342], "irrepar": 5, "irrevoc": 5, "is_completely_posit": 372, "is_conj": 95, "is_ctrl": 95, "is_dag": 95, "is_direct": 168, "is_equal_sign": 448, "is_noiseless": [232, 234], "is_palindrom": 1, "is_result_argu": 332, "is_trace_preserv": 372, "is_trace_reduc": 372, "is_tran": 95, "is_unit": 372, "isclos": 31, "ising": [23, 24, 25, 26, 160, 290, 293, 306, 308], "issu": [5, 423, 450], "iswap": [10, 17, 52, 61], "it_": 195, "itc": 248, "item": [0, 31, 98, 121, 144, 316, 326, 419], "iter": [0, 1, 3, 29, 31, 48, 53, 223, 224, 245, 268, 279, 326, 328, 330, 331, 336, 338, 340, 343, 346, 347, 353, 357, 360, 423, 450], "iterate_simpl": [11, 16, 42, 47, 53, 54, 59, 69, 116, 248, 249, 286, 340, 413, 429, 430], "iterativeexplor": 48, "its": [1, 3, 5, 7, 10, 11, 15, 16, 18, 23, 29, 31, 38, 39, 41, 42, 46, 48, 50, 57, 58, 110, 111, 116, 120, 142, 144, 151, 161, 164, 165, 189, 207, 210, 231, 234, 244, 245, 268, 273, 285, 290, 296, 297, 334, 385, 400, 401, 403, 406, 420, 423, 432, 448, 449, 450], "itself": [9, 11, 53, 290, 345, 449], "iv": 5, "ix": 416, "ixx": 413, "izi": 421, "izz": 413, "j": [16, 23, 24, 41, 47, 51, 189, 194, 195, 197, 200, 202, 208, 213, 214, 278, 292, 293, 295, 296, 306, 307, 364, 387, 388, 394, 396, 400, 403, 423, 440, 448, 450, 453], "j_": [23, 24, 41, 364, 398, 440], "j_1": 398, "j_coupling_matrix": [23, 293, 306], "j_mat": [23, 453], "jac": 3, "jamiolkowski": [372, 380, 401], "januari": [5, 423], "jax": [3, 4, 9, 275, 423], "jaxlib": [3, 9, 275, 423], "jeffrei": [296, 438], "jenkin": [35, 37, 69, 429, 430], "job": [0, 1, 2, 3, 9, 16, 23, 24, 26, 27, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 51, 53, 54, 55, 59, 61, 75, 77, 78, 79, 81, 82, 97, 98, 103, 106, 114, 116, 165, 189, 222, 224, 225, 226, 227, 228, 230, 239, 249, 275, 288, 290, 293, 298, 299, 300, 306, 308, 309, 328, 330, 332, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 360, 361, 362, 363, 364, 365, 369, 405, 413, 422, 425, 426, 427, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454], "job_2": 11, "job_3": 11, "job_count": 106, "job_fixed_angl": 332, "job_id": 81, "job_ob": 35, "job_observ": 39, "job_sampl": [35, 37], "job_to_run": 120, "job_typ": [23, 35, 38, 39, 40, 116, 165, 224, 225, 226, 227, 228, 230, 290, 293, 306, 308, 423, 441, 442, 443, 444, 445, 446, 450], "jobv1": 78, "johannesburg": [172, 177], "join": [423, 424], "joint": 36, "jordan": [188, 193, 194, 207, 210, 216, 354, 423, 447, 448], "journal": 23, "jq": [208, 214], "json": [42, 50, 346], "json_dump": 346, "juan": 260, "judici": 5, "jul": [250, 256], "juli": 423, "jump": [34, 36, 41, 233, 235, 370], "jump_oper": [36, 37, 233, 235, 370], "jun": 55, "junction": [46, 328, 345, 422, 423], "june": 423, "jupyt": [4, 55, 110, 162, 163, 422, 423, 447, 448, 449, 450], "jurisdict": 5, "just": [16, 18, 23, 38, 39, 58, 340, 439], "jw": 216, "k": [1, 4, 51, 91, 111, 120, 164, 200, 202, 207, 227, 248, 265, 267, 278, 280, 285, 294, 296, 301, 336, 402, 413, 422, 432, 434, 441, 448], "k_0": 388, "k_1": [248, 388], "k_2": 388, "k_3": 388, "k_cliqu": 294, "k_clique_problem": 294, "k_i": [248, 388], "k_j": 388, "k_n": 248, "kak": [51, 56, 59, 312], "kakcompress": [52, 56, 59, 312, 316, 319, 321, 322, 323, 324, 325, 328, 335], "kcliqu": [222, 227, 285, 304, 444], "kclique_ann_prob": 432, "kclique_appl": 444, "kclique_gener": 444, "kclique_problem": 434, "kcliquegener": [222, 304, 434, 444], "kcliqueresult": [227, 301], "kdg19": [51, 415], "keen": [188, 206], "keep": [1, 4, 16, 31, 50, 54, 249, 268, 328, 341, 349, 402, 422, 423, 440], "keep_intermea": 111, "keep_topologi": 349, "keepal": [123, 223, 329, 363, 369], "kei": [7, 34, 40, 42, 69, 96, 123, 124, 168, 223, 229, 232, 233, 234, 235, 266, 268, 283, 287, 291, 292, 294, 295, 307, 311, 318, 329, 339, 342, 345, 350, 363, 369, 371, 396, 419], "kept": 343, "kerenidi": [248, 423], "kerinidi": [237, 248], "ket_hf": 191, "keyword": [14, 17, 57, 78, 79, 115, 116, 223, 229, 268, 278, 290, 293, 306, 308, 315, 343, 346, 358, 415, 417, 423], "kickstart": 211, "kill": [123, 223, 329, 363, 369], "kin": 208, "kind": [5, 58, 338, 347, 449], "kissing": [51, 415], "kitaev": [188, 193, 194, 207, 210, 215, 354, 423, 447, 448], "know": [5, 58, 59, 89, 210, 266, 278, 437, 445, 449], "known": [5, 12, 31, 41, 57, 59, 92, 137, 144, 283, 342, 343, 352, 446], "kp": 248, "kp17": 248, "kptree": [237, 423], "kr": [208, 214], "krau": [232, 233, 372, 374, 377, 378, 379, 380, 383, 385, 388, 389, 394, 396, 400, 401, 402, 403], "kraus_oper": 402, "kraus_rank": [399, 402], "kron_circuit": 116, "kroneck": [372, 393, 402], "kunihiro": 256, "kutin": 256, "kwarg": [66, 69, 71, 72, 74, 80, 84, 115, 116, 119, 120, 123, 163, 164, 165, 168, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 238, 266, 268, 271, 275, 278, 279, 287, 288, 290, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 311, 315, 329, 333, 334, 340, 343, 344, 346, 347, 351, 353, 358, 365, 367, 368, 370, 413, 415, 417], "l": [17, 35, 37, 51, 200, 208, 214, 248, 448, 450], "l_": 37, "l_k": [233, 235], "l_m": 37, "label": [144, 147, 158, 202, 289], "lamb": 389, "lambda": [10, 14, 16, 17, 116, 158, 200, 232, 233, 234, 235, 238, 320, 322, 336, 389, 396], "lambda_c": 200, "lambda_i": [18, 165], "lambda_step": 336, "landscap": 23, "lang": [0, 1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 29, 30, 31, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 69, 95, 97, 110, 116, 117, 189, 201, 332, 334, 346, 348, 365, 409, 423, 449, 450], "langl": [1, 11, 28, 30, 50, 111, 120, 161, 164, 189, 234, 239, 246, 247, 336, 355, 381, 438, 450], "langle0": 394, "langle1": 394, "languag": [0, 5, 17, 55, 422], "larg": [16, 18, 41, 52, 53, 120, 193, 194, 210, 213, 283, 286, 296, 340, 413, 415, 439], "larger": [37, 210, 279, 334, 415, 423, 432, 438], "largest": [116, 165], "last": [15, 16, 31, 49, 52, 54, 69, 200, 233, 235, 267, 280, 366, 370, 421], "later": [13, 16, 28, 32, 81, 237, 268], "latest": [69, 423, 429, 430], "latter": [208, 212, 355, 440, 450], "lattic": [290, 293, 306, 308, 431], "law": [5, 16], "lawsuit": 5, "layer": [11, 201, 203, 286, 343, 413, 438, 449], "layout": 423, "layout_bas": 423, "lazi": [51, 328, 340, 417, 422], "lazili": [53, 340], "lazy_synth": 417, "lazysynthesi": [52, 328, 342, 417], "lbrace": [232, 234, 388, 402], "ldca": [188, 199, 203, 449], "ldot": [390, 398], "ldx19": [55, 343], "lead": [19, 53, 54, 329, 423, 431, 439, 450], "leakag": 39, "learn": [5, 57, 58, 423, 450], "learning_paramet": 450, "leas": 5, "least": [5, 16, 48, 53, 163, 334, 362, 413, 423, 432, 438], "leav": [15, 19, 53, 84, 96, 210, 289], "led": [53, 413], "left": [12, 23, 24, 34, 35, 37, 38, 39, 40, 56, 57, 60, 61, 111, 161, 164, 188, 192, 196, 207, 208, 232, 234, 239, 240, 247, 265, 268, 274, 276, 296, 320, 334, 336, 355, 363, 377, 381, 389, 394, 396, 403, 413, 416], "left_pattern": [57, 60], "legaci": 370, "legal": [4, 5], "leibniz": 248, "leighton": 432, "len": [16, 31, 47, 88, 91, 95, 279, 286, 287, 291, 292, 294, 295, 311, 313, 365, 423, 433, 434, 435, 436, 437, 445], "lend": 5, "length": [3, 14, 31, 35, 37, 47, 88, 116, 120, 165, 183, 243, 268, 272, 276, 277, 279, 290, 296, 313, 417, 421], "length1": 14, "length2": 14, "less": [5, 21, 37, 220, 249, 334, 340, 342, 343, 346, 370, 405, 415, 423], "let": [1, 14, 17, 30, 35, 37, 40, 52, 54, 59, 61, 265, 275, 334, 355, 423, 448, 449, 450], "letter": [39, 40], "level": [1, 8, 9, 11, 16, 18, 34, 37, 39, 56, 93, 114, 115, 116, 119, 120, 163, 164, 168, 209, 244, 250, 268, 271, 312, 328, 345, 356, 363, 370, 404, 417, 423, 438, 440, 448, 449, 450, 451], "leverag": [352, 450], "li": [18, 40, 55, 449], "liabil": 5, "liabl": 5, "lib": [35, 37, 69, 429, 430], "lib64": [35, 37, 69, 429, 430], "libcpp_nniz": 343, "libcpp_pbo": 326, "librari": [0, 1, 4, 9, 10, 12, 14, 34, 43, 45, 46, 64, 144, 148, 237, 290, 293, 306, 308, 335, 361, 370, 422, 423, 447, 449, 453], "licenc": 4, "licens": 4, "licensor": 5, "lidar": 23, "lidia": 260, "lie": 210, "life": 22, "lift": [2, 241], "light": 79, "light_circuit": 362, "lih": [422, 449], "like": [4, 5, 6, 14, 16, 18, 23, 37, 39, 40, 42, 47, 48, 52, 59, 60, 96, 116, 164, 165, 210, 285, 326, 334, 339, 370, 423, 432], "limit": [2, 5, 18, 28, 46, 55, 60, 219, 220, 221, 359, 417, 423], "limits_": 200, "linalg": [21, 193, 351, 363, 423, 449, 450, 454], "lindblad": [37, 233, 235, 370, 394, 423], "line": [0, 1, 3, 5, 12, 16, 17, 56, 57, 58, 69, 97, 99, 100, 101, 116, 120, 278, 418, 428, 440], "line_ob": 286, "linear": [24, 51, 53, 55, 169, 172, 183, 285, 287, 290, 293, 306, 308, 309, 334, 355, 361, 362, 363, 404, 408, 410, 415, 417, 418, 422, 423, 438, 450], "linear_method": 417, "linear_oper": 417, "linear_operator_synthesi": [404, 417], "linear_synthesi": [404, 415], "linearli": [210, 293, 306, 308], "linearly_decreas": 347, "linedevic": [53, 172], "linequbit": 428, "link": [5, 10, 13, 15, 16, 31, 64, 79, 168, 237, 250, 253, 256, 257, 268, 283, 284, 288, 290, 293, 306, 308, 326, 327, 346, 422, 423], "link_gat": 249, "link_matric": 249, "linker": [116, 268], "linspac": 48, "linux": [4, 35, 37, 423], "lip": 347, "list": [1, 2, 5, 7, 9, 18, 26, 28, 29, 31, 32, 33, 34, 35, 37, 39, 42, 43, 46, 47, 48, 52, 53, 57, 59, 60, 61, 66, 69, 71, 74, 75, 79, 80, 82, 83, 86, 88, 89, 91, 92, 95, 96, 99, 100, 101, 103, 106, 108, 110, 114, 115, 116, 118, 119, 120, 137, 140, 144, 147, 151, 160, 163, 164, 165, 166, 167, 168, 170, 188, 189, 190, 191, 194, 195, 197, 201, 208, 209, 211, 212, 213, 231, 233, 235, 238, 245, 249, 266, 268, 271, 272, 273, 274, 276, 279, 283, 284, 289, 290, 291, 292, 294, 295, 296, 302, 310, 311, 312, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 330, 334, 336, 339, 342, 343, 345, 346, 355, 358, 362, 363, 369, 370, 371, 372, 381, 390, 391, 392, 393, 395, 397, 398, 400, 402, 403, 409, 413, 415, 423, 426, 429, 430, 433, 434, 435, 436, 437, 449, 450, 451], "list_decomposit": [59, 312, 319], "list_qubit": [66, 71, 74, 80], "listen": [31, 33, 46, 123, 223, 329, 363, 369, 427], "litig": 5, "littl": 244, "ll": [37, 61, 405], "ln": 144, "lnn": [55, 168, 169, 172, 183, 348], "lnn_topologi": 348, "load": [28, 32, 42, 57, 78, 79, 110, 114, 115, 116, 119, 120, 121, 160, 163, 165, 168, 248, 293, 306, 315, 423], "load_circuit": [57, 315], "load_state_vector_from_bin": 110, "loan": 5, "loc": 200, "local": [23, 35, 37, 41, 52, 58, 61, 69, 97, 140, 346, 352, 369, 371, 413, 415, 417, 427, 429, 430, 450], "local_metr": [58, 346], "localhost": [123, 223, 329, 363, 369], "localis": 219, "locat": [5, 248, 296, 448, 449, 451], "lock": [116, 249, 268, 327], "lockout": 5, "log": [16, 60, 163, 248, 415, 446], "log_2": 248, "log_var": 60, "logarithm": [144, 154], "logic": [17, 86, 110, 117, 118, 240, 242, 253, 268, 273, 285, 289, 290, 411, 414, 450], "login": [78, 79], "long": [3, 23, 41, 116, 221, 268, 351, 423], "longer": [415, 417, 423], "look": [0, 1, 4, 14, 16, 23, 30, 35, 37, 40, 41, 42, 47, 57, 60, 61, 165, 293, 308, 355, 363, 370, 411, 414, 423, 439], "loop": [16, 35, 37, 47, 86, 92, 330, 336, 347, 351, 352, 353, 363], "loss": [5, 450], "lost": [31, 33, 46, 279], "lot": [1, 16, 47, 52, 55, 61, 268, 286, 417], "love": 275, "low": [23, 41, 48, 56, 93, 163, 195, 197, 208, 212, 268, 307, 312, 404, 423, 436, 442, 443, 444, 445, 446, 449, 450], "lower": [3, 23, 28, 41, 42, 52, 120, 152, 208, 209, 212, 220, 237, 250, 288, 290, 293, 306, 308, 338, 353, 362, 417, 438, 449, 451], "lower_bound": 152, "lowest": [22, 50, 210, 341, 431, 438], "lsb": [166, 362], "lsb_first": [47, 163], "lsb_int": 166, "luca": [287, 291, 292, 294, 307, 311], "luckili": 59, "ly": 14, "m": [4, 37, 55, 83, 200, 278, 287, 296, 340, 398, 415], "machin": [3, 5, 9, 23, 103, 275, 423, 448], "maco": [4, 423], "made": [5, 15, 33, 41, 201, 244], "magic": 4, "magnet": [18, 23, 24, 287, 291, 292, 293, 294, 295, 306, 307, 311, 364, 423, 453], "magnetic_field_h": [23, 293, 306], "mai": [3, 4, 5, 6, 9, 18, 28, 31, 39, 46, 55, 57, 58, 60, 95, 151, 164, 165, 188, 202, 205, 210, 275, 283, 286, 288, 290, 293, 306, 308, 315, 335, 341, 347, 423, 425, 432, 439, 448], "mail": 5, "main": [7, 8, 42, 53, 56, 96, 131, 210, 249, 268, 296, 315, 331, 342, 348, 363, 365, 426, 427], "main_onli": 315, "mainengin": 429, "mainli": [8, 32, 85, 86, 160], "maintain": [220, 233, 235, 334, 340], "mainten": [423, 451], "majeur": 5, "major": [423, 452], "make": [4, 5, 23, 24, 33, 46, 51, 55, 161, 210, 238, 253, 288, 290, 293, 306, 308, 331, 343, 357, 360, 362, 424, 453], "make_anderson_model": [188, 448], "make_avg_fid_equiv_depol_channel": 372, "make_compressed_ldca_circ": [188, 449], "make_depolarizing_channel": [236, 372, 387], "make_depolarizing_hardware_model": 231, "make_embedded_model": [188, 448], "make_general_hwe_circ": [188, 449], "make_generalized_amplitude_damp": 372, "make_hubbard_model": [188, 448, 449], "make_ldca_circ": [188, 449], "make_mr_circ": [188, 449], "make_mrep_circ": [188, 449], "make_pauli_matrix_basi": 372, "make_shallow_circ": [188, 449], "make_standard_matrix_basi": 372, "make_standard_vector_basi": 372, "make_trotterisation_routin": [188, 449], "malfunct": 5, "manag": [5, 13, 16, 35, 58, 61, 103, 130, 331, 343, 346, 422], "manager_from_target": 61, "mandatori": [12, 31, 123, 223, 329, 363, 369], "mani": [14, 18, 19, 22, 25, 28, 31, 34, 40, 48, 50, 161, 165, 210, 248, 285, 287, 288, 290, 291, 292, 293, 294, 306, 307, 308, 311, 405, 411, 423, 431, 432, 448, 450], "manipul": [8, 9, 17, 18, 25, 27, 46, 56, 116, 160, 240, 273, 274, 278, 328, 346, 363, 372, 422, 423, 447], "manner": [5, 18], "manual": [4, 9, 28, 75, 95, 312, 326, 449], "manufactur": 104, "many_ctrl": 314, "map": [49, 55, 61, 115, 116, 120, 125, 127, 128, 163, 168, 191, 193, 194, 207, 266, 337, 343, 345, 372, 411, 414, 415, 417, 423, 440], "mapsto": [1, 251, 252, 253, 255, 257, 258, 259, 261, 262, 263, 264, 417], "marc": 51, "march": 423, "mark": 5, "market": 5, "markov": [23, 37, 41, 51], "martiel": 51, "master": [37, 370, 422], "mat": [10, 375], "mat2nparrai": 86, "mat_0_0": 320, "mat_0_1": 320, "mat_1_0": 320, "mat_1_1": 320, "mat_list": 393, "match": [23, 51, 53, 60, 116, 268, 278, 289, 306, 310, 313, 343, 349, 352, 402, 423], "matchgat": 203, "materi": [5, 18], "math": [60, 111, 144, 148, 149, 150, 154, 156, 327, 340], "math_util": 372, "mathbb": [193, 200, 208, 417, 421, 448], "mathcal": [1, 190, 195, 197, 208, 355, 377, 379, 380, 386, 387, 388, 400, 401, 402, 403], "mathemat": [10, 41, 327], "mathrm": [29, 36, 191, 192, 198, 200, 201, 208, 210, 232, 234, 265, 336, 355, 377, 379, 380, 381, 382, 387, 396, 401, 403, 450], "matplotlib": [303, 304, 305], "matric": [17, 69, 87, 110, 116, 125, 128, 189, 232, 237, 249, 268, 288, 290, 293, 306, 308, 334, 339, 352, 372, 377, 379, 381, 382, 388, 390, 391, 393, 398, 450], "matrix": [17, 23, 24, 26, 37, 56, 59, 86, 87, 95, 97, 116, 137, 160, 189, 193, 194, 198, 200, 202, 208, 211, 213, 214, 232, 233, 234, 237, 238, 244, 249, 268, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 321, 322, 323, 324, 325, 339, 345, 364, 372, 373, 375, 376, 377, 379, 381, 382, 391, 398, 400, 401, 402, 403, 423, 440, 448, 449, 450, 451, 453], "matrix_": 189, "matrix_basi": [400, 402], "matrix_gen": 238, "matrix_gener": [10, 137, 238], "matrix_h": 189, "matrix_util": [125, 232], "matter": [60, 237, 313, 315], "matthew": 51, "max": [144, 210, 222, 228, 285, 293, 295, 306, 308, 422, 432, 441], "max_cut": 295, "max_cut_ann_prob": 432, "max_cut_appl": [441, 442], "max_cut_gener": 442, "max_cut_problem": 435, "max_depth": [117, 315], "max_it": [53, 347, 405], "max_iter": [343, 346], "max_nb_shot": 42, "max_shot": 81, "max_wir": 279, "maxcut": [54, 61, 285, 293, 306, 340, 422, 423, 435, 439, 442], "maxcutgener": [31, 222, 435, 441, 442], "maxcv": 3, "maxim": [22, 28, 42, 58, 117, 120, 287, 290, 292, 332, 343, 346, 353, 431], "maximis": 287, "maximum": [5, 123, 144, 152, 159, 218, 223, 285, 295, 306, 315, 329, 330, 336, 346, 347, 355, 363, 369, 405, 423, 435, 442], "maxit": [3, 50, 336, 351, 353, 441, 442, 443, 444, 445, 446, 450], "mayb": [61, 423], "mb": 103, "mcsolv": 370, "mdb20": [51, 53], "mea": [17, 91, 232, 234], "mean": [5, 24, 28, 29, 42, 53, 58, 82, 97, 111, 116, 121, 164, 165, 233, 235, 237, 257, 268, 290, 370, 415, 423, 426, 449, 450], "meant": [28, 114, 120, 210, 211, 289, 449], "measur": [2, 3, 5, 9, 12, 17, 18, 28, 29, 30, 32, 33, 34, 35, 38, 40, 42, 46, 49, 50, 66, 69, 71, 74, 80, 82, 83, 86, 89, 91, 92, 96, 97, 107, 108, 111, 116, 117, 120, 163, 164, 165, 189, 210, 232, 234, 237, 253, 268, 275, 334, 344, 349, 352, 355, 362, 422, 423, 426, 430, 439, 449, 450, 454], "measured_qubit": 42, "measureless": [66, 71, 74, 80], "mechan": [5, 11, 14, 28, 50, 110, 312], "media": 5, "medium": 5, "meet": [5, 12], "mehdi": 55, "meijer": 51, "melbourn": [172, 178], "mem_necessary_biggest_job_mb": 106, "mem_ptr": 47, "member": [266, 327], "memori": [28, 43, 44, 51, 103, 106, 248, 249, 362, 391, 392, 448], "mention": [16, 26, 352], "merchant": 5, "mere": [5, 29], "merg": [5, 20, 49, 51, 56, 60, 218, 219, 220, 328, 334, 339, 340, 362, 423], "merging_pattern": 61, "mesolv": 370, "messag": [3, 42, 47, 55, 97, 99, 100, 101, 112, 113, 131, 268], "met": 223, "meta": [33, 42, 48, 50, 53, 114, 115, 119, 328, 338, 346, 415, 423], "meta_data": [3, 28, 32, 42, 47, 48, 49, 50, 75, 79, 82, 111, 114, 115, 119, 120, 163, 189, 290, 293, 306, 308, 338, 345, 346, 362, 363, 369, 423, 449], "metadata": [28, 32], "method": [0, 1, 2, 3, 12, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 38, 41, 46, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 110, 117, 119, 120, 123, 147, 161, 165, 166, 167, 168, 171, 189, 191, 193, 194, 207, 209, 211, 213, 223, 229, 237, 238, 239, 243, 248, 249, 250, 251, 252, 253, 257, 258, 259, 266, 268, 271, 272, 273, 276, 277, 279, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 303, 304, 305, 306, 307, 308, 309, 311, 313, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 336, 337, 338, 340, 343, 344, 345, 346, 347, 351, 352, 354, 357, 360, 362, 363, 369, 370, 372, 387, 388, 397, 399, 408, 410, 413, 415, 417, 418, 419, 423, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453], "method_2q": [387, 388], "metric": [58, 282, 336, 343, 346, 415, 450], "mi": 440, "michel": 51, "micro": 55, "middl": [48, 57, 313], "might": [10, 14, 16, 23, 48, 53, 54, 116, 144, 163, 237, 249, 251, 254, 255, 278, 279, 286, 288, 290, 293, 299, 306, 308, 331, 340, 344, 407, 413, 417, 430, 439, 448, 450], "migrat": 447, "mimimum": 440, "min": [41, 48, 144, 292, 293, 296, 306, 308, 449, 450], "min_": [23, 24], "min_val": 48, "mind": [16, 54, 448], "minim": [2, 3, 11, 22, 24, 31, 48, 50, 54, 56, 58, 283, 284, 290, 306, 315, 328, 332, 347, 351, 353, 369, 415, 422, 423, 431, 433, 438, 440, 442, 443, 449, 450], "minima": 415, "minimize_idle_tim": 283, "minimize_overall_tim": [58, 283], "minimum": [3, 22, 23, 41, 292, 293, 308, 334, 352, 439], "mininm": 369, "minus_1": 150, "mirror": 1, "misc": [17, 237], "miscellan": [5, 43, 44], "mislead": 210, "mismatch": 6, "miss": [288, 290, 293, 306, 308, 334, 423], "mitig": [5, 422, 423, 447, 450], "mix": [285, 290, 293, 296, 297, 298, 306, 308, 309, 355, 413, 428, 439], "mixing_factori": [63, 285], "mixingfactori": [285, 439], "mod": [251, 252, 253, 255], "mode": [0, 1, 3, 11, 29, 30, 31, 33, 35, 37, 38, 39, 42, 46, 47, 82, 116, 124, 165, 198, 229, 332, 349, 350, 370, 371, 423, 426], "model": [1, 18, 35, 36, 41, 60, 104, 162, 188, 198, 202, 232, 233, 236, 237, 290, 293, 306, 308, 370, 448, 449, 450, 451, 453], "modern": 23, "modif": [5, 28], "modifi": [5, 32, 116, 120, 209, 249, 298, 299, 300, 411, 414, 415], "modul": [1, 2, 5, 8, 9, 12, 18, 40, 46, 54, 55, 56, 57, 58, 64, 69, 85, 86, 93, 95, 99, 100, 101, 102, 110, 144, 158, 172, 188, 218, 231, 237, 245, 249, 250, 260, 268, 282, 285, 312, 317, 319, 334, 356, 363, 372, 374, 404, 423, 424, 426, 427, 447, 448, 449, 451], "modular": 250, "modular_exp": 250, "modulenam": [97, 99, 100, 101], "modulenotfounderror": 423, "modulo": [250, 252, 253, 257, 259, 261, 262, 263, 264], "modulu": [251, 252, 253, 255], "mol_h": [208, 209, 449], "mol_h_act": 449, "mol_h_new_basi": 449, "molecul": [209, 211, 422, 423, 447, 449, 450], "molecular": [192, 197, 208, 211, 449], "molecular_hamiltonian": 208, "molecularhamiltonian": [188, 209, 448], "moleculeinfo": 188, "mollet": 451, "moment": 454, "monei": 5, "mont": [37, 287, 291, 292, 294, 295, 307, 311, 370], "month": 5, "more": [0, 1, 3, 5, 11, 16, 17, 21, 23, 25, 26, 27, 31, 34, 35, 37, 39, 40, 41, 42, 46, 48, 54, 57, 58, 60, 61, 66, 71, 74, 80, 96, 110, 116, 120, 167, 209, 210, 224, 236, 248, 249, 271, 272, 275, 276, 286, 334, 339, 340, 342, 346, 347, 355, 358, 359, 362, 370, 387, 405, 415, 421, 423, 426, 432, 439, 440, 448, 449, 450], "moreov": [13, 31, 46, 60, 116, 271, 276, 279, 296, 406, 423], "morgan": 16, "mosca": 51, "most": [11, 14, 17, 18, 25, 28, 48, 60, 69, 93, 110, 120, 188, 250, 265, 276, 296, 362, 404, 413, 423, 431, 432, 450, 454], "mostli": [8, 93, 147, 432], "mother": [244, 266], "moulton": 256, "move": [296, 439], "mp2": 197, "mr": [188, 204, 449], "mrep": [188, 205, 449], "msb": [47, 166], "mu": [198, 200, 202, 449], "much": [423, 448], "mul": 327, "mult": [16, 20, 260], "mult_const": [250, 260], "mult_const_mod": [250, 253], "multi": [123, 188, 204, 205, 223, 329, 363, 369, 449], "multi_qubit": 236, "multikron": 372, "multipl": [5, 16, 20, 23, 27, 42, 95, 211, 250, 254, 260, 263, 264, 269, 423, 450], "multiplelaunchesanalyz": [50, 328, 450], "multiplelaunchesplugin": 422, "multiplexor": 248, "multipli": [26, 60, 226, 227, 230, 263, 264, 287, 292, 294, 311, 315, 450], "multiply_right": 416, "multiqubit": [236, 422, 423, 447, 450], "multivari": 423, "must": [2, 5, 9, 31, 47, 48, 57, 60, 117, 120, 169, 190, 192, 193, 195, 200, 201, 233, 235, 283, 284, 315, 332, 336, 341, 344, 346, 352, 369, 397, 399, 408, 415, 423, 426, 451], "mutliplexor": 248, "mutual": [339, 415], "mwi": [285, 290, 293, 308, 423], "my": 46, "my_add": 14, "my_angl": 59, "my_aqasm": 17, "my_circuit": 116, "my_cnot_implement": 249, "my_condit": [42, 47], "my_custom_g": 69, "my_cz": 17, "my_funct": [275, 332], "my_gat": [241, 346], "my_ibm_token": 426, "my_job": [351, 423], "my_lib": 17, "my_list": 151, "my_min": 144, "my_minus_z": 10, "my_num": [153, 155], "my_observ": 26, "my_plugin": [288, 290, 293, 306, 308], "my_program": [10, 12], "my_qft": 17, "my_qpu": [46, 47], "my_routin": 10, "my_rxrz": 17, "my_rz": [238, 266], "my_spec": 49, "my_stack": [31, 46], "my_var": 60, "my_z": 17, "mybind": 422, "myplugin": 47, "myproblem": 290, "myqlmmyqpu": 42, "m\u00f6ller": 211, "m\u00f8ller": [188, 197, 449], "n": [10, 14, 17, 19, 20, 23, 24, 25, 31, 39, 41, 43, 47, 51, 55, 57, 59, 92, 207, 208, 215, 216, 217, 257, 259, 261, 262, 263, 264, 265, 267, 278, 280, 286, 287, 292, 296, 315, 334, 340, 349, 355, 363, 370, 387, 390, 398, 413, 415, 416, 417, 418, 421, 423, 433, 434, 435, 436, 437, 439, 446, 448, 450], "n1": 14, "n2": 14, "n_": [29, 201, 202, 355, 401, 403, 450], "n_0": 40, "n_adiab_step": 210, "n_b": 198, "n_calibr": 353, "n_cycl": 201, "n_e": 208, "n_electron": [195, 196, 197, 208, 209, 212, 449], "n_excit": 39, "n_fsim_cycl": 205, "n_i": [195, 197, 208], "n_in": 355, "n_iter": [330, 450], "n_mode": 39, "n_monte_carlo_upd": [287, 291, 292, 294, 295, 307, 311], "n_phase_bit": 210, "n_proc": 370, "n_qbit": 195, "n_run": 341, "n_sampl": [38, 370], "n_shot": 210, "n_site": 202, "n_spin": 142, "n_state": 39, "n_step": [191, 364, 370, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "n_thread": 402, "n_trotter": [287, 291, 292, 294, 295, 307, 311], "n_trotter_step": [207, 210, 449], "n_u": 306, "n_v": [306, 423], "n_w": [306, 423], "na": [24, 425], "nabla": [336, 450], "naiv": [48, 218, 221, 334, 344, 406, 413, 415, 420], "naivestrategi": [218, 334], "nakanishi": [55, 352, 450], "nakashima": 55, "name": [0, 5, 8, 10, 13, 17, 21, 42, 46, 56, 57, 58, 69, 78, 79, 81, 82, 95, 96, 97, 106, 114, 115, 116, 117, 119, 120, 125, 129, 137, 138, 147, 160, 162, 163, 165, 168, 170, 233, 235, 237, 241, 244, 249, 266, 268, 278, 283, 286, 290, 293, 306, 312, 313, 314, 315, 318, 340, 342, 343, 354, 358, 362, 372, 374, 394, 396, 400, 401, 402, 403, 413, 423, 453], "name_method_us": 347, "nameerror": 69, "namespac": [14, 17, 237, 257, 358], "nan": 23, "nano": 55, "narrow": 210, "natgrad_opt": 450, "nativ": [1, 15, 28, 52, 116, 342], "natur": [5, 28, 79, 144, 150, 154, 188, 195, 197, 204, 208, 209, 212, 328, 336, 422, 423, 447, 449, 450], "natural_gradi": [336, 450], "nb_adiab_step": 210, "nb_fermionic_mod": [199, 203], "nb_node": 106, "nb_sampl": 88, "nb_shot": 42, "nbcbit": [98, 116], "nbctrl": [95, 402], "nbit": [239, 246, 267, 280, 281, 296], "nbqbit": [0, 14, 26, 31, 42, 47, 49, 52, 95, 98, 106, 116, 119, 160, 163, 168, 173, 194, 213, 253, 269, 276, 334, 344, 412, 418, 419, 449, 450], "nbqbits_target": 219, "nbshot": [26, 28, 29, 30, 42, 97, 111, 116, 120, 165, 189, 210, 288, 290, 293, 306, 308, 363, 423], "nbterm": [412, 419], "nbvar": 290, "ncol": 95, "ncycl": [189, 199, 203, 352], "nd": 91, "ndarrai": [87, 88, 89, 91, 92, 120, 137, 160, 165, 189, 190, 192, 193, 194, 197, 198, 200, 202, 208, 209, 211, 212, 213, 214, 248, 298, 300, 345, 347, 352, 363, 375, 376, 390, 391, 392, 393, 398, 402, 406, 408, 410, 415, 417, 418], "nearest": [55, 172, 183, 201, 205], "nearshor": 5, "necessari": [5, 8, 28, 218, 231, 235, 266, 357, 360], "necessarili": [3, 5, 16, 315], "need": [1, 4, 5, 6, 10, 12, 18, 19, 23, 24, 28, 31, 41, 46, 47, 48, 57, 59, 61, 78, 79, 88, 91, 93, 106, 110, 116, 158, 161, 168, 195, 253, 275, 278, 279, 287, 291, 292, 294, 295, 307, 311, 315, 329, 334, 342, 346, 364, 369, 370, 411, 423, 424, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 445, 446, 448, 449, 450], "need_flip": 47, "neg": [240, 273, 289, 423, 442], "neg_claus": 289, "negat": 289, "neglect": 417, "neglig": [5, 41], "neighbor": [55, 172, 183], "neighbour": [201, 205], "neither": [5, 31, 42, 58], "nel": 211, "nenergi": 449, "neq": [16, 24, 439], "nest": 15, "network": [5, 250, 256], "networkx": [16, 49, 54, 61, 119, 168, 225, 226, 227, 228, 230, 291, 292, 294, 295, 303, 304, 305, 311, 340, 405, 411, 413, 414, 417, 423, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 453], "neutral": 211, "never": [53, 60, 244, 279], "nevertheless": [3, 46, 57, 58, 449, 451], "new": [10, 16, 35, 46, 47, 48, 50, 53, 57, 96, 116, 123, 131, 136, 144, 188, 199, 208, 210, 214, 220, 222, 223, 238, 249, 256, 266, 268, 279, 290, 306, 313, 315, 329, 338, 339, 351, 363, 369, 406, 426, 449, 451], "new_circuit": [52, 54, 61, 116, 426], "new_gate_set": 136, "new_group": [58, 61, 326, 346], "new_job": 53, "new_pattern": 315, "new_tabl": 415, "new_var": [3, 11, 25, 31, 110, 116, 189, 268, 290, 332, 449, 450], "new_wir": [1, 10, 14, 15, 16, 239, 249, 269, 271, 272, 273, 274, 276, 279], "next": [58, 333, 413, 415, 421, 454], "nfev": 3, "nice": [9, 16, 50, 89], "niel": 51, "nisq": [3, 51, 55, 328, 342, 452], "nisqcompil": [52, 61, 328, 422, 423], "nit": 3, "niter": 415, "njev": 3, "nn": 446, "nnizat": [328, 340, 343], "nnize": [58, 62, 63, 343, 423], "nnizer": [52, 53, 54, 282, 283, 284, 328, 342, 423], "no_trivi": 419, "noboru": 256, "node": [16, 57, 102, 105, 106, 147, 168, 289, 290, 291, 292, 293, 294, 295, 303, 304, 305, 306, 308, 311, 432, 433, 434, 435, 437, 440, 442, 443, 444, 445, 446], "node_s": [303, 304, 305], "node_typ": [105, 106], "nodetyp": [102, 106], "nois": [29, 30, 34, 36, 37, 43, 50, 161, 231, 232, 233, 234, 235, 236, 328, 355, 370, 372, 394, 395, 396, 422, 423, 447, 450], "noise_channel": 395, "noise_spectrum": 396, "noiseless": [34, 232, 234, 370], "noisi": [3, 5, 34, 37, 40, 43, 189, 231, 355, 361, 368, 370, 450], "non": [5, 17, 24, 41, 58, 60, 95, 97, 116, 163, 248, 279, 340, 344, 361, 370, 413, 417, 419, 423, 432, 439], "nondisclosur": 5, "none": [17, 29, 42, 47, 52, 53, 61, 69, 75, 76, 78, 79, 82, 83, 95, 96, 97, 108, 114, 116, 117, 119, 120, 123, 124, 136, 137, 140, 147, 158, 160, 161, 162, 163, 164, 165, 166, 168, 189, 193, 194, 195, 197, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 223, 229, 232, 233, 234, 235, 239, 240, 241, 244, 249, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 288, 290, 293, 296, 302, 306, 308, 309, 313, 315, 329, 330, 334, 336, 339, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 355, 357, 358, 360, 362, 363, 364, 369, 370, 371, 374, 377, 379, 380, 396, 397, 398, 402, 405, 406, 413, 415, 416, 417, 420, 421, 441, 442, 443, 444, 445, 446], "noneresult": 98, "noon": [195, 197, 208, 209, 212, 449], "nor": [31, 42], "norm": [21, 28, 89, 330, 372, 378, 383, 384, 386], "normal": [5, 66, 71, 74, 80, 194, 248, 423], "normal_ord": 194, "not_simulat": 98, "notat": [26, 237], "note": [9, 17, 20, 51, 116, 191, 202, 207, 236, 283, 306, 344, 381, 385, 387, 450, 452], "notebook": [4, 35, 41, 50, 55, 57, 58, 110, 116, 117, 162, 163, 422, 423, 432, 433, 434, 435, 436, 437, 447, 448, 449, 450], "noth": [5, 42, 47, 53, 233, 272, 276, 332], "notic": [1, 5, 16, 17, 21, 48, 52, 53, 61, 252, 334, 369, 413, 415, 416], "notion": 279, "notwithstand": 5, "novemb": 423, "now": [1, 3, 4, 14, 15, 30, 49, 52, 57, 59, 61, 170, 189, 288, 290, 293, 306, 308, 346, 423, 448, 449, 450, 451, 454], "nowarn": 423, "np": [1, 3, 10, 11, 21, 23, 24, 25, 31, 35, 37, 38, 39, 40, 41, 48, 59, 92, 95, 120, 137, 158, 160, 165, 171, 189, 190, 192, 193, 194, 197, 198, 200, 202, 208, 209, 211, 212, 213, 214, 238, 248, 275, 278, 287, 291, 292, 293, 294, 306, 307, 308, 311, 334, 345, 351, 352, 353, 363, 375, 376, 390, 391, 392, 393, 398, 400, 401, 402, 403, 406, 408, 410, 415, 417, 418, 419, 431, 433, 434, 435, 436, 437, 439, 440, 444, 446, 448, 449, 450, 453], "nqbit": [119, 160, 165, 168, 171, 194, 195, 196, 201, 208, 209, 213, 376, 387, 388, 390, 403, 448, 449], "nqbits_phas": 449, "nrow": 95, "nstep": [1, 37, 38, 40, 48, 370, 413], "ntheta": 449, "nuclear": [211, 449], "nuclear_repuls": [211, 449], "null": [5, 28, 120], "number": [0, 1, 2, 10, 15, 16, 23, 24, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 42, 43, 44, 49, 52, 53, 56, 59, 60, 61, 76, 88, 95, 97, 98, 103, 106, 116, 119, 120, 121, 124, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 168, 170, 173, 183, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 219, 220, 225, 229, 233, 235, 248, 252, 253, 257, 259, 261, 262, 263, 264, 265, 267, 268, 269, 278, 279, 280, 281, 284, 285, 287, 290, 291, 292, 294, 295, 296, 307, 311, 315, 326, 328, 330, 332, 334, 336, 340, 341, 342, 343, 345, 346, 347, 350, 352, 353, 355, 360, 362, 363, 364, 370, 371, 387, 388, 390, 402, 405, 407, 412, 413, 415, 416, 417, 418, 419, 422, 423, 432, 433, 435, 437, 438, 442, 443, 445, 446, 448, 449, 450, 453], "number_1": 159, "number_2": 159, "number_of_colour": [225, 291, 437], "number_of_edg": [16, 173], "number_partit": 307, "number_partitioning_ann_prob": 432, "number_partitioning_problem": [307, 436], "numberpartit": [285, 293, 306, 436], "numbers_arrai": 307, "numbers_set": 436, "numer": [37, 144, 147, 158, 170, 189, 417], "numpi": [1, 3, 10, 11, 21, 23, 24, 31, 35, 37, 38, 39, 40, 43, 45, 48, 60, 86, 87, 88, 89, 91, 92, 110, 121, 137, 142, 143, 158, 160, 161, 163, 189, 193, 194, 208, 209, 248, 275, 278, 287, 291, 292, 293, 294, 296, 298, 300, 306, 307, 308, 311, 334, 347, 351, 364, 402, 415, 418, 419, 423, 433, 434, 435, 436, 437, 440, 444, 446, 448, 449, 450, 453], "nvidia": [3, 9, 275], "nx": [16, 49, 54, 61, 168, 291, 292, 294, 295, 306, 311, 340, 411, 414, 415, 417, 423, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 453], "nx_graph": [119, 168], "nyquist": 38, "o": [4, 23, 24, 28, 30, 34, 35, 37, 110, 189, 190, 195, 197, 208, 296, 340, 355, 418, 427, 446, 450], "o3": [35, 37], "o_i": 189, "ob": [3, 11, 26, 28, 30, 31, 35, 38, 39, 40, 50, 116, 160, 165, 275, 290, 364, 450], "obei": [38, 287, 432], "object": [0, 1, 2, 5, 8, 9, 12, 14, 15, 16, 17, 18, 19, 28, 29, 31, 32, 33, 42, 46, 47, 48, 49, 55, 57, 60, 67, 69, 78, 79, 81, 83, 84, 93, 96, 114, 115, 116, 119, 120, 123, 147, 151, 160, 163, 164, 165, 167, 168, 169, 170, 172, 198, 201, 223, 229, 231, 235, 237, 240, 241, 245, 248, 249, 268, 271, 278, 279, 285, 289, 290, 293, 296, 299, 306, 308, 313, 315, 326, 327, 328, 329, 335, 338, 343, 345, 346, 361, 362, 369, 404, 406, 420, 423, 447, 448, 450], "oblig": 5, "obs1": 26, "obs2": 26, "obs3": 26, "obs_typ": [288, 290, 293, 306, 308, 309], "observ": [2, 3, 8, 9, 11, 18, 20, 21, 24, 25, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 46, 48, 49, 50, 53, 82, 109, 116, 120, 165, 167, 189, 233, 235, 275, 286, 288, 289, 290, 293, 296, 298, 306, 308, 310, 328, 330, 332, 340, 341, 344, 354, 355, 363, 364, 370, 404, 407, 412, 413, 422, 423, 426, 448, 449, 450, 452, 454], "observablesplitt": [28, 30, 328, 423], "obtain": [5, 8, 28, 32, 111, 160, 164, 199, 211, 336, 415, 436, 450, 451], "occup": [40, 188, 195, 197, 208, 209, 212, 449], "occupi": [40, 190, 195, 208, 449], "occupied_indic": [190, 449], "occur": [4, 56, 57, 61, 88, 89, 91, 92, 116, 423, 450], "occurr": [58, 315, 355, 423], "octob": 423, "ocup": 40, "od": 37, "odd": 201, "oei": 432, "off": [5, 449], "offer": [5, 8, 10, 11, 32, 48, 222, 328, 340, 361, 432], "offset": [23, 24, 116, 120, 121, 243, 277, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 364, 423, 453], "offset_i": [23, 293, 306, 364, 453], "offset_q": [24, 308], "often": [8, 18, 19, 42, 286, 411, 439, 448], "ohmic": 396, "old": 57, "old_method": 402, "old_pattern": 315, "older": 423, "omega": [39, 396, 421], "omega0": 38, "omega_0": 38, "omega_param": 38, "omega_v": [306, 423], "omit": [158, 280], "ommit": 417, "omp_num_thread": 362, "onc": [1, 11, 12, 22, 26, 34, 96, 248, 330, 438, 449, 450], "one": [0, 3, 5, 9, 10, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 42, 46, 48, 51, 53, 56, 57, 58, 59, 60, 89, 91, 92, 95, 97, 116, 123, 130, 147, 158, 161, 165, 167, 168, 188, 190, 192, 201, 204, 208, 209, 210, 211, 214, 223, 233, 235, 236, 237, 248, 268, 275, 278, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 306, 307, 308, 311, 315, 321, 322, 323, 324, 325, 327, 328, 329, 332, 333, 334, 338, 339, 343, 346, 347, 348, 352, 355, 359, 362, 363, 369, 370, 372, 388, 402, 413, 415, 422, 423, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 449, 450], "one_body_integr": [190, 192, 208, 209, 211, 214, 449], "ones": [23, 26, 33, 37, 55, 57, 60, 210, 415, 431, 432], "onli": [1, 4, 5, 12, 15, 16, 17, 18, 21, 25, 26, 28, 29, 30, 32, 39, 40, 42, 47, 48, 49, 50, 52, 55, 56, 57, 58, 60, 61, 76, 114, 115, 116, 117, 119, 120, 123, 130, 131, 144, 158, 163, 164, 168, 169, 188, 189, 194, 199, 203, 210, 211, 223, 236, 243, 249, 252, 257, 259, 261, 263, 264, 266, 268, 271, 273, 274, 277, 279, 288, 290, 293, 303, 304, 305, 306, 308, 315, 329, 334, 340, 342, 343, 344, 352, 361, 362, 363, 365, 369, 370, 377, 396, 408, 410, 415, 417, 423, 430, 431, 432, 442, 443, 444, 445, 446, 449, 450], "onlin": 5, "onlt": 286, "onsit": 200, "onto": [23, 86, 89, 349, 366], "op": [11, 16, 47, 54, 59, 86, 90, 94, 95, 116, 167, 189, 248, 249, 279, 286, 413, 423, 429], "op_po": 90, "open": [11, 15, 18, 19, 48, 188, 279, 334, 423, 447], "openmpi": [35, 37], "openqasm": [63, 64, 422, 425], "openqasm_cod": 69, "oper": [1, 9, 10, 11, 16, 17, 18, 19, 20, 23, 31, 34, 35, 36, 39, 40, 43, 45, 47, 48, 50, 53, 55, 87, 94, 96, 116, 117, 144, 147, 158, 160, 165, 167, 188, 189, 191, 194, 195, 207, 208, 213, 232, 233, 234, 235, 237, 239, 240, 242, 244, 247, 249, 250, 251, 253, 255, 256, 260, 267, 268, 269, 273, 274, 275, 276, 285, 289, 296, 327, 330, 334, 338, 340, 363, 370, 383, 385, 386, 388, 389, 394, 396, 402, 405, 406, 407, 408, 409, 410, 413, 415, 416, 417, 418, 420, 421, 422, 423, 449, 450, 451], "operand": [269, 273], "operator_pool": 330, "operatortableau": [404, 407, 409, 421], "opim": 56, "opinion": 5, "oplu": [289, 417], "opportun": 5, "oppos": [232, 415], "opposit": 58, "opt": [23, 24, 25, 54, 61, 62, 63, 340, 423, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 453], "opt_circ": [58, 189], "optim": [0, 3, 5, 7, 11, 12, 22, 23, 25, 31, 32, 41, 46, 48, 50, 51, 52, 56, 59, 60, 79, 189, 224, 225, 226, 227, 228, 230, 268, 288, 290, 293, 296, 298, 299, 302, 303, 306, 308, 309, 312, 332, 336, 339, 340, 341, 342, 343, 346, 347, 349, 351, 352, 353, 355, 369, 405, 413, 415, 417, 423, 432, 442, 447, 449, 450, 451, 452], "optima": 41, "optimization_level": 79, "optimization_trac": 50, "optimize_initi": [52, 53, 405], "optimized_circ": 57, "optimizer_arg": 50, "optimizer_data": [3, 345], "optimizer_scipi": 3, "optimum": 41, "option": [3, 18, 28, 31, 33, 42, 47, 50, 57, 58, 60, 66, 69, 71, 74, 79, 80, 82, 83, 88, 95, 96, 97, 99, 100, 101, 103, 104, 106, 108, 111, 116, 117, 120, 121, 123, 124, 137, 140, 147, 158, 160, 161, 163, 164, 165, 166, 168, 171, 189, 193, 194, 195, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 219, 220, 221, 223, 226, 227, 229, 230, 232, 233, 234, 235, 236, 239, 248, 249, 252, 253, 268, 269, 271, 272, 273, 274, 278, 279, 280, 283, 286, 287, 288, 290, 292, 293, 294, 296, 302, 303, 304, 305, 306, 308, 311, 315, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 362, 363, 364, 369, 370, 371, 377, 378, 379, 380, 383, 387, 388, 396, 401, 402, 403, 405, 406, 411, 413, 414, 415, 417, 419, 420, 423, 441, 442, 443, 444, 445, 446, 448, 450], "optionn": 402, "optyp": 96, "oqasm2circ": 430, "oqasm_cod": 69, "oqasm_tab": 69, "oqasmpars": [68, 430], "or_claus": 289, "oracl": [9, 237, 239, 276, 280, 365], "orbit": [188, 192, 195, 196, 197, 200, 202, 204, 208, 209, 211, 212, 328, 449], "orbital_energi": [197, 209, 211, 449], "order": [5, 10, 14, 17, 18, 23, 26, 28, 46, 52, 53, 54, 59, 60, 61, 96, 116, 120, 158, 163, 188, 194, 195, 197, 200, 207, 208, 210, 211, 212, 237, 238, 253, 265, 273, 276, 279, 286, 288, 290, 293, 298, 299, 300, 306, 308, 313, 315, 334, 340, 343, 362, 370, 413, 414, 415, 417, 422, 423, 428, 432, 438, 448, 449, 451], "org": [4, 5, 6, 23, 55, 250, 256, 260, 353, 377, 422, 423], "orial": [35, 37, 69, 429, 430], "orient": [432, 452], "origin": [1, 5, 43, 44, 450], "os": 423, "oscil": 39, "ostaszewski": [352, 450], "ot": 370, "other": [4, 5, 16, 23, 31, 33, 34, 35, 37, 46, 58, 60, 110, 116, 131, 151, 160, 207, 210, 211, 240, 244, 268, 269, 273, 274, 276, 296, 334, 352, 355, 363, 388, 405, 415, 425, 430, 447, 450], "other_exc_typ": 131, "other_var": [147, 170], "otherwis": [4, 5, 47, 60, 75, 82, 116, 120, 168, 349], "otim": [30, 57, 296, 388, 390, 393, 398, 401, 439], "our": [0, 1, 2, 3, 4, 14, 16, 22, 23, 28, 31, 33, 37, 42, 46, 47, 48, 54, 57, 58, 59, 60, 250, 273, 287, 296, 332, 363, 404, 422, 423, 424, 434, 436, 437, 438, 440, 449, 450], "out": [5, 17, 28, 29, 46, 47, 50, 53, 88, 116, 147, 165, 208, 256, 265, 293, 306, 341, 398, 415, 434, 444], "outbreak": 5, "outcom": [12, 107, 108, 232, 234], "outermost": 10, "outfil": 17, "outperform": 450, "output": [1, 3, 16, 31, 32, 33, 35, 37, 42, 52, 53, 57, 61, 69, 92, 96, 116, 120, 163, 165, 210, 265, 269, 271, 273, 274, 279, 283, 340, 363, 378, 409, 415, 417, 418, 422, 432], "outsid": [48, 210], "outstand": 5, "over": [0, 1, 5, 11, 23, 29, 41, 47, 72, 75, 86, 92, 96, 110, 116, 160, 161, 167, 248, 268, 275, 279, 296, 308, 315, 355, 370, 398, 406, 413, 418, 419, 421], "overal": [46, 58, 116, 283, 286, 288, 290, 293, 306, 308, 413, 432, 450], "overflow": [35, 37], "overhead": [54, 290, 293, 306, 308, 337, 340], "overlap": [189, 296, 315, 438, 439], "overload": [11, 20, 48, 116, 140, 147, 158, 166, 276, 285, 289, 397, 423], "overrid": [42, 249, 346, 348, 404], "overview": [4, 12], "overwhelm": 16, "own": [1, 5, 9, 10, 14, 18, 31, 33, 46, 57, 95, 110, 161, 188, 297, 338, 345, 422], "owner": 5, "ownership": 5, "p": [51, 69, 120, 197, 198, 200, 203, 208, 214, 232, 234, 265, 278, 352, 387, 388, 389, 394, 396, 403, 415, 421, 450], "p1": 402, "p2": 402, "p_": [41, 111, 164, 421], "p_0": 421, "p_i": 388, "p_k": [111, 164], "pack": 97, "packag": [0, 5, 6, 12, 35, 37, 69, 211, 257, 268, 367, 368, 429, 430, 447, 449], "pad": 248, "page": [1, 4, 5, 11, 26, 29, 33, 42, 43, 44, 50, 57, 58, 61, 64, 362, 423, 424, 425, 440, 448, 449], "paid": 5, "pair": [0, 9, 19, 29, 30, 49, 54, 55, 167, 168, 169, 232, 234, 296, 339, 349, 355, 409, 410, 411, 417, 421, 422, 430, 450], "paler": 55, "palindrom": 1, "paradigm": [1, 7, 8, 431], "parallel": [20, 103, 370], "parallel_job_count": 103, "param": [17, 116, 232, 233, 234, 266, 340, 353, 389], "param_dict": 454, "param_gener": 232, "paramet": [0, 3, 10, 11, 12, 17, 19, 23, 29, 32, 38, 42, 47, 48, 52, 57, 66, 67, 69, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 91, 92, 95, 99, 100, 101, 103, 104, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 131, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 315, 318, 320, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 432, 433, 434, 435, 436, 437, 438, 441, 449, 450, 451, 454], "parameter": [10, 330, 352, 450], "parameter_map": [2, 31, 48, 50, 120, 163, 189, 332], "parametr": [0, 3, 11, 17, 50, 56, 76, 110, 120, 125, 127, 188, 191, 197, 201, 232, 233, 234, 237, 238, 266, 342, 343, 352, 372, 397, 413, 417, 438, 449], "parametricamplitudedamp": 372, "parametricgatenois": 372, "parametricpuredephas": 372, "parametricquantumchannel": [233, 235, 372, 395], "paramg": [237, 238], "params_specif": [36, 38, 233, 235, 370], "parent": [33, 42, 48, 237, 244, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311], "pari": 5, "pariti": [188, 193, 194, 207, 210, 217, 354, 417, 419, 423, 447, 448], "pars": [31, 69, 222, 223, 224, 225, 226, 227, 228, 230, 301, 302, 303, 304, 305, 441, 442, 443, 444, 445, 446], "parse_result": [291, 292, 294, 295, 311], "parse_vers": [69, 429, 430], "parsedpostprocessedresult": 223, "parser": [68, 69, 430], "parsiad": 51, "part": [7, 14, 15, 18, 23, 24, 48, 110, 144, 153, 155, 188, 210, 223, 244, 290, 293, 306, 308, 338, 340, 346, 423, 440, 447], "parti": [5, 64], "partial": [120, 336, 372, 398, 423], "partial_trac": 372, "particl": [208, 328, 347], "particul": 345, "particular": [5, 15, 28, 37, 39, 43, 45, 48, 50, 52, 61, 116, 225, 226, 227, 228, 230, 257, 268, 279, 296, 298, 299, 300, 301, 340, 347, 348, 351, 352, 353], "particularli": [1, 97], "partit": [222, 226, 285, 291, 292, 294, 295, 301, 303, 304, 305, 307, 422, 432, 435, 441, 442], "pass": [15, 34, 35, 53, 116, 120, 123, 161, 210, 229, 238, 249, 266, 268, 278, 279, 286, 290, 293, 303, 304, 305, 306, 308, 315, 316, 326, 332, 334, 339, 342, 343, 345, 346, 347, 348, 351, 367, 368, 370, 405, 413, 415, 417, 441, 442, 443, 444, 445, 446], "past": 20, "patel": 51, "patent": 5, "path": [12, 36, 123, 124, 223, 229, 283, 284, 329, 350, 363, 369, 371, 415, 422], "path_graph": [16, 54], "pathfind": 415, "patter": 59, "pattern": [51, 52, 56, 199, 201, 313, 315, 317, 318, 321, 322, 323, 324, 325, 326, 328, 335, 339, 343, 346, 422], "pattern_to_remov": [58, 61, 326], "patterngroup": [312, 318, 346], "patternmanag": [52, 56, 58, 60, 312, 317, 326, 328, 343, 422], "pauli": [17, 19, 26, 37, 61, 110, 160, 167, 207, 232, 233, 236, 288, 290, 293, 306, 308, 342, 352, 372, 375, 376, 377, 379, 387, 388, 390, 403, 404, 405, 407, 409, 413, 416, 421, 423, 450], "pauli_op": 167, "pauli_oper": 421, "pauli_str": 421, "pauli_synth": [404, 413], "pauli_term": [19, 20, 21, 26, 30, 35, 37, 38, 39, 40, 160, 450], "pauli_vec": 376, "payment": 5, "pbm": [423, 440], "pbn": 343, "pbo": [52, 56, 57, 58, 59, 60, 61, 62, 63, 346, 423], "pd": 396, "pdf": [4, 162, 423], "per": [25, 34, 58, 92, 103, 332, 339, 343, 363, 413, 433, 434, 435, 436, 437, 442, 444, 445], "perceiv": 5, "percent": [5, 387], "perez": 260, "perf_count": 334, "perfect": [210, 231, 232, 233, 234, 236, 296, 362, 402, 413, 423], "perfectli": [31, 171], "perfom": 331, "perform": [1, 3, 5, 9, 16, 18, 28, 30, 33, 34, 35, 37, 41, 42, 43, 45, 46, 48, 50, 52, 53, 58, 60, 61, 86, 102, 116, 120, 165, 188, 207, 210, 211, 237, 239, 248, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 273, 280, 290, 293, 296, 306, 308, 309, 328, 329, 330, 331, 334, 336, 344, 345, 346, 354, 355, 370, 398, 405, 411, 413, 415, 417, 423, 450], "perform_phase_estim": [188, 449], "perform_pyscf_comput": [188, 449], "period": 5, "perman": 5, "permiss": [5, 423], "permit": [4, 5], "permut": [58, 96, 337, 340, 415, 417], "perpetu": 5, "person": 5, "pertain": 5, "perturb": [188, 197, 211, 328, 353, 449, 451], "petri": 256, "ph": [10, 15, 17, 51, 52, 60, 61, 69, 116, 253, 256, 296, 314, 344, 377, 409, 410], "ph_gate": 60, "phase": [10, 17, 51, 52, 60, 210, 237, 239, 267, 271, 273, 274, 276, 320, 372, 373, 404, 410, 416, 417, 419, 421, 422, 423, 447], "phase_estim": [188, 237, 449], "phase_g": 10, "phase_matrix": 10, "phase_polynomi": [404, 417], "phase_polynomial_synthesi": 404, "phase_reg": 253, "phi": [205, 208, 320, 322, 421, 449, 454], "phi_": [192, 208], "phi_u": [192, 208], "phy": [250, 256, 377, 379, 380], "physic": [5, 18, 22, 23, 33, 43, 104, 295, 402, 411, 414, 448], "physreva": [250, 256], "pi": [1, 10, 17, 35, 37, 38, 40, 48, 52, 59, 60, 61, 69, 148, 149, 150, 156, 158, 208, 210, 214, 237, 265, 275, 278, 318, 321, 322, 334, 342, 344, 416, 417, 421, 450], "pick": [4, 53, 296, 334, 347, 367, 413, 415, 416, 421, 438, 450], "pictur": [12, 41], "piec": [14, 16, 29, 53, 96, 120, 144, 248, 269, 271, 288, 290, 293, 306, 308, 417, 439], "pillow": 423, "pin": [69, 429, 430], "pip": 4, "pip3": 4, "pipe": [20, 47, 48, 78, 123, 222, 223, 338, 369, 423, 441], "pivot": 417, "pkg_resourc": [69, 429, 430], "place": [1, 5, 17, 47, 116, 120, 249, 257, 259, 261, 268, 293, 298, 299, 300, 306, 331, 411, 414, 415, 421, 439], "placehold": [116, 312, 369], "placement": 52, "planar": 432, "plane": [144, 146], "platform": [4, 423], "pleas": [4, 5, 9, 26, 32, 42, 43, 44, 48, 51, 57, 58, 60, 64, 78, 79, 95, 116, 210, 283, 313, 315, 326, 339, 340, 342, 343, 346, 358, 362, 405, 422, 423, 424, 425, 426, 440, 450], "plesset": [188, 197, 211, 449, 451], "plot": [161, 162, 163, 275], "plot_in_notebook": [110, 116, 117], "plugabl": 84, "plugin": [2, 3, 27, 28, 30, 31, 32, 42, 48, 49, 50, 51, 55, 56, 58, 59, 61, 62, 63, 75, 78, 79, 93, 97, 100, 110, 116, 119, 120, 140, 189, 218, 222, 223, 225, 226, 227, 228, 230, 282, 288, 290, 293, 306, 308, 316, 321, 322, 323, 324, 325, 326, 363, 369, 371, 405, 417, 438, 441, 442, 443, 444, 445, 446, 447, 449, 452], "plugin1": 46, "plugin2": 46, "plugin_exception_onli": 130, "pluginexcept": [47, 55, 97, 112, 130, 133], "pm": [60, 169, 355, 450], "pmatrix": 23, "pmh": 415, "pmh03": [51, 415], "pmh_opt": 415, "po": [57, 315], "point": [48, 148, 161, 278, 341, 345, 355, 363, 423], "polynomi": [51, 296, 404, 410, 417, 419, 422], "polynomila": 404, "ponder": 20, "pool": [123, 223, 279, 329, 330, 363, 369, 450], "pop": [15, 48, 279], "pop_prohibited_valu": 327, "port": [31, 33, 46, 123, 124, 223, 229, 329, 350, 363, 369, 371, 427], "portion": [116, 340], "posit": [95, 108, 116, 144, 154, 157, 200, 226, 227, 230, 287, 292, 294, 311, 313, 315, 347, 358, 372, 383, 411, 414], "possibl": [5, 10, 11, 14, 15, 16, 17, 19, 21, 23, 26, 27, 28, 48, 57, 59, 109, 110, 116, 160, 165, 207, 210, 211, 233, 236, 238, 278, 288, 290, 293, 296, 297, 306, 308, 334, 336, 340, 342, 356, 365, 423, 424, 436, 438, 439, 454], "possibli": [120, 150, 153, 155, 165, 166, 232, 233, 234], "post": [5, 32, 33, 35, 37, 46, 47, 48, 53, 61, 116, 120, 165, 223, 224, 229, 328, 329, 349, 371, 423], "post_process": [31, 32, 46, 223, 224, 229, 329], "postprocess": 423, "pot": 208, "potenti": [17, 192, 198, 200, 202, 208, 268, 337, 436], "povm": [232, 234], "pow": 327, "power": [0, 3, 5, 9, 27, 34, 38, 41, 161, 237, 248, 396, 421, 452], "ppol": 419, "pq": [192, 193, 198, 200, 207, 208, 210, 214, 448], "pqr": [192, 193, 198, 200, 207, 208, 214, 448], "practic": [1, 15, 18, 28, 30, 41, 42, 53, 59, 89, 290, 417, 431, 432, 438, 439], "practis": [31, 42, 332], "prakash": [237, 248], "prakashqram": 423, "pre": [33, 46, 47, 61, 237, 319, 362, 439], "precis": [22, 48, 96, 108, 121, 210, 353, 357, 362, 449], "predecessor": 334, "predef_gener": 232, "predefg": 201, "predefin": 17, "predict": 54, "predif": [283, 284], "prefer": [5, 448, 449], "prefix": [60, 96, 118, 237], "preliminari": 210, "premis": 5, "prepar": [3, 5, 28, 188, 189, 191, 204, 210, 231, 232, 237, 247, 248, 267, 280, 281, 296, 297, 298, 299, 300, 413, 420, 423, 439, 447, 450], "prepart": 423, "prepend": [297, 298, 299], "preprint": 296, "presenc": [34, 38, 39], "present": [3, 5, 9, 18, 22, 33, 37, 41, 54, 57, 58, 89, 116, 160, 233, 235, 237, 249, 275, 312, 330, 332, 336, 342, 347, 351, 352, 353, 370, 432, 449, 453], "preserv": [188, 199, 203, 205, 296, 327, 372, 384, 402, 449], "preset": [52, 342], "press": 333, "pretti": [59, 147, 158, 164], "pretty_print": 147, "pretty_token": 158, "prevent": [5, 48, 61], "previou": [10, 31, 50, 52, 57, 59, 60, 210, 426, 448], "previous": [26, 449, 450], "primari": [5, 244, 423], "primit": [82, 357, 360, 426], "primitiveresult": [357, 360], "print": [0, 1, 2, 3, 5, 9, 11, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 35, 37, 38, 39, 40, 47, 48, 50, 52, 53, 54, 55, 58, 59, 61, 69, 71, 95, 97, 116, 119, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 208, 209, 213, 215, 216, 217, 239, 240, 248, 249, 253, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 286, 287, 290, 291, 292, 294, 295, 307, 311, 326, 332, 333, 334, 340, 341, 346, 352, 362, 365, 387, 388, 394, 396, 402, 409, 413, 415, 416, 418, 419, 421, 429, 430, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 448, 449, 450, 454], "printer": [110, 116], "prior": [5, 273, 328], "prioriti": 220, "pro": [379, 380], "prob": [88, 91, 171, 388, 389, 394, 396, 397, 449], "probabl": [1, 2, 14, 29, 31, 32, 35, 37, 41, 42, 47, 53, 61, 88, 89, 91, 108, 111, 116, 120, 163, 164, 165, 171, 210, 236, 239, 278, 332, 363, 388, 394, 396, 439], "probail": 120, "problem": [1, 4, 9, 11, 16, 22, 23, 24, 31, 39, 41, 51, 54, 55, 58, 142, 160, 188, 189, 222, 224, 225, 226, 227, 228, 230, 287, 288, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 328, 343, 352, 364, 370, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 453], "problem_is": [23, 453], "problem_ising_job": 23, "problem_ising_ob": 23, "problem_job": [433, 434, 435, 436, 437], "problem_parameters_dict": [433, 434, 435, 436, 437], "problem_qubo": 24, "problem_qubo_ising_ob": 24, "problem_qubo_job": 24, "problem_result": [433, 434, 435, 436, 437], "problem_s": [23, 24, 453], "proce": [52, 449], "procedur": [7, 16, 17, 48, 57, 64, 189, 275, 306], "proceed": 5, "process": [0, 2, 5, 8, 12, 22, 27, 28, 29, 32, 35, 37, 38, 41, 42, 46, 47, 48, 49, 52, 53, 55, 61, 107, 109, 110, 116, 119, 123, 165, 223, 224, 229, 249, 260, 268, 328, 329, 331, 349, 361, 364, 369, 370, 371, 372, 377, 380, 387, 405, 423, 450, 452], "processing_typ": [49, 119, 423], "processingtyp": [42, 49, 107, 119, 120, 363], "processor": [0, 3, 28, 110, 116, 165, 172, 342, 363, 422, 423, 452], "prod": 31, "prod_": 207, "prod_i": 413, "prod_j": 413, "produc": [16, 23, 24, 26, 52, 116, 120, 210, 248, 276, 285, 290, 293, 302, 306, 308, 340, 348, 405, 413, 415, 417, 418, 419, 438, 439], "produce_j_h_and_offset": [292, 295, 307], "produce_q_and_offset": [287, 291, 294, 311], "product": [4, 5, 15, 26, 120, 160, 207, 236, 279, 296, 352, 372, 377, 388, 393, 398, 402, 413, 421, 439, 450], "profile_default": 423, "profit": 5, "prog": [3, 9, 11, 14, 15, 16, 31, 52, 53, 54, 55, 57, 58, 95, 97, 116, 117, 189, 240, 248, 249, 250, 268, 279, 332, 334, 348, 365, 409, 423, 449, 450], "program": [0, 3, 4, 7, 10, 11, 13, 14, 15, 16, 29, 30, 31, 47, 48, 52, 53, 54, 55, 57, 58, 66, 74, 80, 95, 97, 110, 116, 117, 189, 191, 239, 240, 248, 249, 250, 253, 271, 272, 276, 277, 279, 285, 287, 315, 332, 334, 348, 365, 409, 431, 432, 439, 449, 450, 452], "program_pragma": 76, "progress": 362, "prohibit": [60, 327], "prohibited_valu": 60, "project": [28, 86, 88, 189], "projectq": [4, 63, 64, 422, 423, 425], "projectq_bind": 4, "projectq_to_qlm": [71, 429], "promin": 5, "prompt": 4, "promptli": 4, "propag": 438, "proper": [14, 16, 48, 116, 158, 271, 272, 275, 438, 453], "properli": [10, 64], "properti": [5, 18, 114, 115, 116, 119, 120, 161, 163, 164, 166, 168, 293, 304, 305, 306, 308, 362, 372, 403, 416, 432], "proport": 248, "proportion": 5, "propos": [43, 44, 188, 206], "propto": 355, "prost": 329, "protect": [5, 131], "protest": 5, "protocol": [363, 369], "provabl": 417, "prove": [5, 293, 306, 308, 440], "provid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 19, 26, 28, 31, 34, 42, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 69, 75, 78, 79, 82, 84, 86, 92, 93, 96, 102, 110, 116, 119, 124, 137, 144, 172, 188, 189, 191, 210, 218, 229, 237, 238, 260, 268, 286, 290, 293, 303, 306, 308, 312, 317, 319, 330, 332, 334, 336, 338, 339, 345, 347, 348, 350, 351, 352, 353, 362, 363, 369, 370, 371, 404, 413, 415, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 438, 441, 447, 448, 449, 451, 452], "provis": 5, "prune": [53, 116, 165], "psd": [34, 38, 161, 370, 401, 403], "psd_expr": 161, "pseudo": [41, 450], "psi": [11, 28, 29, 30, 50, 120, 189, 296, 336, 363, 381, 402], "psi_": 265, "psi_0": [21, 38, 39, 40, 120, 165, 296, 299, 300, 370, 423], "psi_i": 120, "pso": [328, 347], "psominimizeplugin": 328, "ptild": 396, "ptm": [372, 374, 377, 378, 379, 380, 401, 402, 403], "pub": [357, 360], "public": [5, 251, 252, 253, 258, 259, 279, 330, 336, 415, 423, 450], "publicli": 5, "publish": [5, 123, 223, 329, 363, 369, 404, 423], "pull": 413, "purchas": 5, "pure": [9, 12, 13, 114, 115, 116, 119, 120, 163, 168, 237, 372, 396], "purpos": [5, 17, 41, 53, 160, 166, 209, 249, 268, 296, 334, 365, 450], "pursuant": 4, "push": 366, "put": [1, 66, 71, 74, 80, 200], "py": [17, 69, 422, 423, 429, 430], "pyaqasm": [9, 10, 11, 12, 14, 16, 17, 66, 74, 80, 96, 110, 116, 237, 240, 248, 249, 422], "pybind11": [43, 44, 404], "pybindlinalg": 97, "pydo": 4, "pylinalg": [44, 62, 63, 268, 332, 348, 361, 362, 367, 423, 426], "pyopenssl": 4, "pypa": [69, 429, 430], "pypi": [4, 6, 423], "pyplot": [303, 304, 305], "pyquil": [4, 63, 64, 422, 423, 425], "pyquil_bind": 4, "pyquil_circuit": 427, "pyquil_prog": 74, "pyquil_to_qlm": [73, 427], "pyquilqpu": [73, 427], "pyscf": [188, 211, 449], "pyscf_tool": [188, 449], "python": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 33, 44, 123, 137, 158, 164, 170, 229, 245, 249, 268, 269, 271, 272, 275, 315, 331, 332, 361, 404, 425, 427, 430], "python3": [35, 37, 69, 429, 430], "pyx": [35, 37], "q": [16, 17, 24, 60, 69, 82, 91, 191, 197, 198, 200, 208, 214, 265, 268, 276, 287, 291, 294, 308, 311, 326, 333, 429, 430, 440, 454], "q1": 349, "q2": 349, "q_": 24, "q_3": 16, "q_4": 16, "q_5": 16, "q_mat": 24, "q_matrix": [24, 308], "qalloc": [0, 1, 3, 9, 10, 11, 12, 14, 15, 16, 29, 30, 31, 52, 53, 54, 55, 57, 58, 95, 97, 116, 117, 189, 239, 248, 249, 250, 253, 268, 271, 272, 276, 277, 279, 332, 334, 348, 365, 409, 449, 450], "qaoa": [9, 25, 54, 58, 61, 224, 225, 226, 227, 228, 230, 286, 288, 290, 293, 306, 308, 334, 340, 422, 431, 441, 442, 443, 444, 445, 446, 452], "qaoa_circuit": 286, "qaoa_job": [288, 290, 293, 306, 308, 441], "qaptiva": [0, 1, 11, 12, 18, 27, 28, 30, 31, 33, 41, 42, 43, 46, 47, 48, 50, 65, 69, 70, 73, 77, 103, 105, 114, 115, 116, 119, 120, 144, 160, 163, 165, 168, 171, 188, 210, 222, 288, 290, 293, 306, 308, 316, 328, 340, 342, 343, 346, 356, 357, 358, 360, 372, 405, 408, 410, 413, 415, 417, 418, 419, 423, 425, 429, 430, 432, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 454], "qaptivaaccessbackend": [357, 358, 360], "qaptivajob": [357, 360], "qaptivaqpu": 104, "qaptivaservic": [356, 454], "qarithexp": [237, 276], "qasm": 430, "qat": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 423, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453], "qat_circ": 331, "qatdisplai": 4, "qb": [17, 31, 52, 116, 286, 332], "qb1": [168, 416], "qb2": [168, 416], "qbit": [0, 1, 9, 11, 14, 15, 16, 17, 29, 30, 31, 47, 50, 52, 53, 54, 55, 57, 58, 95, 96, 97, 110, 116, 117, 120, 160, 167, 219, 220, 221, 232, 234, 237, 239, 248, 249, 250, 257, 259, 261, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 286, 320, 332, 334, 340, 344, 348, 365, 387, 388, 402, 403, 409, 412, 416, 418, 419, 449], "qbit_idx": 11, "qbit_limit": [219, 220, 221], "qbit_list": [17, 272], "qbits_compilation_threshold": [334, 423], "qbits_list": [271, 272, 273, 274, 276, 277], "qbits_reg": [10, 12, 238], "qblist": 268, "qbool": [16, 237, 268, 279], "qbool_arrai": [271, 272], "qboolarrai": [16, 237, 268, 271, 273], "qchan": 378, "qchem": 451, "qclaus": [237, 271, 272, 276], "qcompexp": [237, 276], "qcs_settings_applications_pyquil_qvm_url": 427, "qdldl": 6, "qft": [9, 10, 16, 17, 55, 60, 95, 116, 237, 250, 253, 260], "qftarith": [9, 15, 16, 17, 55, 63, 95, 116, 117, 237, 250, 251, 252, 253, 254], "qfunc": [1, 3, 9, 237, 423], "qi": [208, 214], "qiksit": 423, "qint": [16, 237, 239, 268, 271, 279], "qint1": [16, 276], "qint2": [16, 276], "qint3": [16, 276], "qiskit": [4, 7, 62, 63, 64, 422, 423, 425], "qiskit_bind": 4, "qiskit_circuit": [80, 426], "qiskit_ibm_runtim": 426, "qiskit_interoper": 7, "qiskit_pub": 454, "qiskit_result": 426, "qiskit_to_qlm": [77, 356, 426], "qiskit_token": [78, 79], "qiskitjob": [77, 78, 426], "qiskitruntimeqpu": [77, 423, 426], "qiskitruntimeservic": [82, 426], "qj": [208, 214], "qlm": [5, 48, 66, 67, 69, 71, 74, 75, 76, 78, 80, 83, 84, 119, 286, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 316, 338, 342, 345, 356, 359, 411, 412, 413, 414, 423, 426, 429], "qlm_batch": [78, 81], "qlm_circ": 428, "qlm_circuit": [67, 76, 83, 426, 427], "qlm_job": [75, 427], "qlm_obj": 275, "qlm_object": 338, "qlm_to_cirq": [65, 428], "qlm_to_pyquil": [73, 427], "qlm_to_qiskit": [77, 426], "qlmaa": 423, "qpe": 210, "qprog": [0, 29, 30], "qpu": [0, 1, 2, 3, 7, 8, 9, 14, 16, 18, 23, 24, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 51, 52, 55, 62, 63, 73, 75, 77, 78, 79, 82, 84, 85, 93, 97, 98, 101, 102, 104, 106, 110, 116, 119, 120, 123, 124, 161, 163, 165, 171, 189, 210, 222, 225, 226, 227, 228, 229, 230, 233, 235, 239, 288, 290, 293, 306, 308, 319, 329, 330, 332, 334, 336, 338, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 360, 422, 425, 431, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454], "qpu_exception_onli": 130, "qpuexcept": [42, 97, 113, 130, 134, 210, 423], "qpuhandl": [33, 42, 84, 116, 120, 139, 189, 361, 362, 363, 371], "qpuskeleton": 42, "qputobackend": [77, 426], "qr": 454, "qram": 248, "qreg": [47, 69, 116, 164, 166, 268, 423, 430], "qreg_list": 163, "qregist": [47, 116, 164, 165, 166, 237, 268, 279], "qrout": [0, 1, 2, 9, 10, 11, 47, 48, 50, 52, 59, 237, 275, 423, 449], "qroutin": [1, 9, 10, 13, 14, 15, 16, 17, 191, 207, 210, 237, 239, 241, 246, 247, 248, 249, 251, 253, 254, 255, 265, 267, 269, 271, 272, 273, 274, 276, 278, 280, 281, 344, 449], "qse": 188, "qtcoeff_215454d98b7325a10fc2e32716cac7": 37, "qtcoeff_557b8c38ee62aedf3ef06ba9ab1f91": 35, "quad": 24, "quadrat": [1, 22, 41, 290, 293, 306, 308, 417, 423, 453], "qualiti": [5, 41, 54, 189, 417], "qualnam": 374, "quameleon": [119, 348], "quameleonplugin": [55, 119, 328, 423], "quant": [51, 256, 296, 377], "quantiti": [110, 332, 438], "quantiz": [23, 198, 200], "quantul": 237, "quantum": [0, 3, 4, 5, 7, 9, 11, 15, 18, 21, 23, 24, 25, 26, 28, 31, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 50, 55, 57, 58, 59, 61, 75, 78, 79, 82, 86, 87, 89, 94, 95, 96, 107, 109, 110, 116, 163, 164, 165, 166, 172, 189, 210, 222, 231, 232, 233, 234, 235, 238, 239, 244, 247, 248, 249, 250, 256, 260, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 298, 299, 306, 307, 308, 309, 311, 312, 328, 334, 335, 342, 343, 346, 351, 364, 365, 370, 374, 378, 379, 383, 384, 385, 386, 395, 397, 399, 400, 401, 402, 403, 405, 409, 410, 413, 417, 425, 431, 441, 447, 448, 450, 454], "quantum_channel": [232, 234, 383, 384, 385, 386], "quantum_circuit": 454, "quantum_count": 237, "quantum_info": 454, "quantumchannekrau": 384, "quantumchannel": [232, 233, 234, 235, 372, 377, 378, 379, 380, 383, 384, 385, 386], "quantumchannelchi": [372, 402], "quantumchannelchoi": [372, 402, 403], "quantumchannelkrau": [232, 234, 372, 387, 388, 389, 400, 401, 403], "quantumchannelptm": [372, 384, 401, 402], "quantumcircuit": [83, 454], "quantumcostmetr": [282, 343], "quantumregist": 454, "qubit": [1, 9, 10, 13, 15, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 34, 35, 37, 39, 42, 43, 44, 46, 49, 51, 52, 55, 56, 57, 58, 61, 66, 69, 71, 74, 80, 82, 83, 86, 88, 89, 91, 92, 95, 96, 98, 106, 110, 119, 120, 160, 163, 165, 167, 168, 169, 173, 183, 188, 194, 195, 196, 199, 201, 203, 204, 205, 206, 208, 209, 210, 213, 232, 233, 234, 235, 236, 237, 239, 248, 251, 252, 253, 254, 255, 258, 259, 267, 268, 271, 272, 273, 274, 276, 279, 280, 288, 290, 293, 296, 306, 308, 310, 313, 315, 321, 322, 323, 324, 325, 326, 328, 332, 334, 337, 339, 340, 342, 343, 344, 346, 349, 362, 363, 365, 370, 387, 388, 390, 401, 402, 403, 404, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 426, 428, 430, 448, 449, 450, 453], "qubo": [22, 23, 25, 41, 287, 290, 291, 293, 294, 306, 311, 423, 432, 438, 453], "question": 424, "quick": 422, "quickli": [16, 58, 275, 415], "quit": [10, 15, 16, 46, 48, 52, 61, 306], "quop": [62, 63, 232, 233, 423], "qutip": [4, 34, 35, 37, 361, 370, 423], "qutip_opt": 370, "qutipqpu": [34, 35, 37, 38, 39, 40, 361, 422, 423], "qvm": 427, "qx": 55, "r": [17, 37, 52, 55, 59, 83, 120, 144, 147, 170, 192, 197, 198, 200, 208, 209, 448], "r_": [192, 208, 322, 403], "r_x": [60, 321, 322, 438], "r_y": 320, "r_z": [38, 60, 238, 320, 321, 322], "rabi": [306, 423], "radian": [146, 148, 149, 156], "radiu": 3, "rais": [42, 47, 55, 60, 86, 90, 97, 98, 99, 100, 101, 112, 113, 116, 117, 125, 129, 130, 131, 132, 133, 134, 135, 136, 138, 233, 235, 268, 290, 293, 306, 308, 367, 368, 417, 423], "raise_break": 86, "ramp": 438, "rand": [23, 24, 208, 209, 453], "randint": [307, 436], "randn": [208, 209], "random": [1, 11, 21, 23, 24, 38, 41, 208, 209, 236, 248, 275, 307, 334, 341, 347, 351, 352, 353, 362, 364, 365, 387, 388, 412, 415, 418, 419, 422, 432, 436, 450, 453], "random_circuit": 334, "random_linear_oper": [404, 415], "random_phase_polynomi": 404, "randomli": [336, 353], "rang": [1, 3, 10, 11, 17, 20, 31, 42, 46, 50, 52, 53, 59, 189, 210, 239, 278, 279, 286, 296, 334, 365, 415, 432, 440], "rangl": [1, 11, 13, 15, 16, 28, 29, 30, 31, 50, 53, 57, 86, 92, 111, 120, 161, 164, 189, 191, 234, 237, 239, 246, 247, 248, 251, 252, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 268, 275, 276, 279, 281, 290, 296, 332, 336, 355, 362, 363, 381, 394, 417, 420, 438, 439], "rangle_": 450, "rank": 402, "rate": [37, 236, 387, 450], "rather": [10, 17, 31, 48, 58, 114, 120, 210, 240, 269, 271, 272, 274, 276, 448], "ration": 423, "raw": [114, 116, 120, 163, 164, 168, 301], "raw_data": [32, 47, 111, 163, 365, 433, 434, 435, 436, 437], "rb": 387, "rb_ep": 387, "rbrace": [232, 234], "rbrace_": [388, 402], "rdm1": [211, 449], "re": [3, 5, 16, 37, 38, 40, 42, 46, 47, 51, 95, 116, 131, 163, 336, 449], "reach": [3, 23, 24, 46, 52, 123, 218, 223, 329, 355, 363, 369, 449], "read": [4, 5, 37, 50, 114, 115, 116, 119, 120, 163, 168, 210], "readabl": [5, 12, 23], "readi": [23, 24, 283, 284, 285, 288, 290, 293, 306, 308, 413, 423, 438], "readonly_statevector": 362, "readout": [231, 236], "real": [22, 23, 24, 57, 75, 120, 144, 145, 146, 150, 151, 152, 159, 160, 248, 296, 385, 417, 423, 432, 436, 440], "realiz": [18, 38, 161, 306, 370], "reason": [5, 116, 448], "reasonn": 61, "receiv": [5, 41, 48, 70, 96, 97, 116, 233, 235, 338, 352], "recent": 69, "recept": [48, 338, 345], "recip": [238, 438], "recipi": 5, "recit": 5, "recommend": [5, 6, 194, 248, 362], "recomput": 89, "reconstruct": [28, 32], "record": 432, "recov": 429, "recurs": [15, 238, 290, 413, 415, 417], "redefin": [125, 129, 135, 136, 138], "redesign": 423, "redistribut": 5, "reduc": [5, 16, 31, 54, 56, 58, 59, 61, 211, 279, 283, 286, 290, 293, 306, 308, 328, 337, 340, 372, 385, 413, 449], "reduct": 52, "refer": [5, 23, 26, 32, 43, 44, 57, 58, 95, 97, 116, 188, 200, 202, 204, 205, 241, 278, 279, 287, 291, 292, 294, 295, 307, 311, 326, 334, 339, 342, 346, 353, 358, 362, 377, 379, 380, 413, 415, 422, 423, 425, 426, 432, 440, 449, 450, 452], "referenc": 17, "refrain": [5, 69, 429, 430], "refus": 327, "reg": [3, 189, 449, 450], "reg1": 239, "reg2": 239, "reg_control_s": 253, "reg_siz": [250, 251, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265], "reg_size_2": [257, 259, 261, 263, 264], "regard": [5, 22, 42, 116, 210, 296], "regener": 116, "regim": 450, "region": 3, "regist": [10, 13, 16, 28, 35, 37, 58, 60, 69, 116, 163, 164, 166, 232, 234, 243, 248, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 268, 269, 271, 272, 276, 277, 279, 280, 312, 313], "regroup": [286, 372], "regul": 5, "regular": [60, 66, 71, 74, 80, 172, 314, 336], "relat": [22, 28, 161, 265, 372, 396], "relax": 394, "releas": [16, 116, 249, 268, 279, 452], "relev": [5, 96, 356], "reli": [1, 23, 51, 52, 377, 423, 431, 448], "relief": 5, "reloc": 451, "remain": [0, 5, 208, 210, 212, 248, 249, 340, 423], "remap": [46, 54, 95, 96, 116, 253, 328, 337, 411, 414, 417], "remap_circuit": [54, 411, 414], "remark": [43, 44], "remedi": 5, "rememb": 1, "remot": [5, 31, 33, 42, 46, 47, 97, 122, 144, 222, 229, 328, 350, 356, 358, 423], "remote_stack": 423, "remoteappl": 122, "remotebatchgener": [31, 222], "remoteplugin": [46, 328, 423], "remoteqpu": [33, 361, 423], "remov": [4, 42, 51, 53, 55, 57, 60, 61, 69, 116, 120, 233, 235, 249, 268, 286, 315, 326, 327, 328, 349, 398, 423, 429, 430], "remove_lock": [116, 268], "renam": 451, "renaming_dict": [117, 162], "render": 4, "renorm": [53, 88, 89], "rent": 5, "reorder": [340, 417], "repair": [46, 47], "repeat": [1, 28, 30, 48, 263, 264, 432, 436], "repeatedli": 279, "repetit": [28, 268], "replac": [5, 52, 53, 56, 57, 58, 60, 116, 237, 249, 275, 278, 312, 315, 328, 335, 346, 355, 422, 426, 450, 451], "replace_pattern": [57, 58, 60, 315, 346], "replica": [287, 291, 292, 294, 295, 307, 311], "report": [111, 423, 424], "repositori": 422, "repr": 402, "reprensent": 166, "repres": [5, 14, 16, 18, 19, 22, 27, 35, 39, 49, 95, 96, 108, 110, 136, 143, 144, 147, 158, 160, 161, 165, 166, 208, 237, 248, 279, 285, 289, 290, 293, 301, 302, 306, 308, 310, 327, 363, 364, 372, 402, 404, 406, 408, 416, 419, 421, 431, 432, 450], "represent": [5, 12, 43, 88, 91, 110, 142, 147, 160, 166, 189, 191, 193, 194, 207, 213, 215, 216, 217, 226, 227, 230, 232, 233, 237, 287, 291, 292, 293, 294, 295, 303, 306, 307, 308, 311, 315, 372, 374, 379, 380, 396, 400, 401, 402, 403, 404, 431, 440, 449, 450], "reproduc": [5, 424], "reproduct": 5, "repuls": [198, 200, 208, 209, 211, 449], "request": [28, 82, 102, 123, 163, 223, 329, 363, 369], "requir": [1, 3, 4, 5, 6, 16, 26, 31, 39, 42, 47, 48, 50, 52, 53, 93, 96, 103, 106, 116, 120, 158, 163, 168, 250, 268, 279, 299, 309, 329, 331, 332, 339, 344, 352, 415, 417, 423, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 453, 454], "res_ob": 35, "res_reg_s": 263, "res_sampl": 35, "res_valu": 39, "rescal": [20, 352], "resdata": 47, "research": 5, "resel": 5, "resembl": 41, "reserv": [5, 102, 103, 105, 106], "reservation_id": 103, "reset": [12, 13, 17, 86, 89, 96, 116, 249, 253, 268, 283, 362, 423], "resili": 50, "resiz": 362, "resolut": 5, "resolv": [4, 423], "resort": 58, "resourc": [15, 16, 17, 35, 63, 93, 163, 369], "resourcemodel": [102, 369], "resp": [192, 195, 208], "respect": [19, 23, 24, 33, 34, 36, 39, 60, 161, 165, 210, 290, 293, 306, 308, 342, 364, 370, 379, 385, 390, 432, 450, 453], "respons": [5, 84, 102], "ressourc": 17, "rest": [28, 31, 41, 47, 48, 52], "restart": 423, "restrain": 5, "restrict": [5, 23, 188, 190, 208, 296, 370, 439, 449], "restrict_active_spac": 209, "restrict_to": 296, "restructur": 423, "resubmit": [46, 47], "result": [0, 1, 2, 3, 5, 8, 14, 15, 16, 17, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 41, 42, 46, 47, 48, 50, 54, 55, 63, 66, 67, 71, 74, 75, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 96, 97, 98, 108, 115, 116, 120, 122, 123, 142, 152, 165, 171, 189, 207, 210, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 239, 248, 254, 257, 259, 261, 262, 263, 264, 267, 268, 273, 274, 276, 278, 279, 280, 285, 288, 289, 290, 291, 292, 293, 294, 295, 306, 308, 310, 311, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 336, 338, 340, 341, 343, 345, 346, 347, 349, 351, 352, 353, 357, 360, 361, 362, 363, 364, 365, 369, 371, 402, 407, 413, 415, 416, 417, 423, 426, 427, 432, 440, 441, 442, 443, 444, 445, 446, 449, 450, 454], "result_fixed_angl": 332, "resulting_circuit": [66, 71, 74, 80], "retain": 5, "retri": 415, "retriev": [27, 49, 72, 78, 248, 332, 423], "retrieve_job": [78, 81], "return": [1, 3, 9, 10, 14, 16, 17, 27, 28, 29, 31, 32, 33, 35, 41, 42, 46, 47, 48, 57, 58, 59, 60, 66, 67, 69, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 92, 96, 110, 111, 114, 115, 116, 118, 119, 120, 123, 125, 127, 128, 136, 137, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 241, 246, 247, 248, 249, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 318, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 333, 334, 336, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 426, 441, 454], "return_matric": 189, "reus": [13, 30, 279], "rev": [250, 256, 377, 379, 380], "revers": [1, 5, 15, 20, 46, 51, 53, 265, 276, 286, 343, 362, 415, 449], "reverse_bit_ord": [269, 276], "revert": [1, 116, 163], "review": 23, "revis": 5, "revmodphi": 23, "rewir": 96, "rewrit": [7, 52, 53, 57, 58], "rewriting_method": 343, "rhel": 423, "rho": [37, 232, 234, 377, 388, 400, 401, 402], "rho1": [381, 382], "rho2": [381, 382], "rho_": [355, 379, 380], "rho_0": [232, 234], "rho_1": [381, 382], "rho_2": [381, 382], "rho_i": 379, "rich": [4, 18], "richardson": 450, "rigetti": [75, 172, 184, 185], "rigetti_agav": 172, "rigetti_aspen": [119, 172, 340], "right": [5, 10, 12, 23, 24, 31, 34, 35, 37, 38, 39, 40, 56, 57, 60, 111, 161, 164, 188, 192, 196, 207, 208, 212, 232, 234, 239, 240, 247, 265, 274, 276, 287, 292, 294, 296, 311, 320, 334, 336, 346, 355, 363, 377, 381, 389, 394, 396, 403, 413, 416, 432, 433, 434, 437], "right_pattern": [57, 60], "rightarrow": [1, 233, 235], "riot": 5, "rippl": [237, 256], "risk": 5, "rm": 17, "rmp": 23, "robert": 55, "role": 413, "rolf": 55, "root": [5, 60, 144, 157, 253], "ross": 51, "rotat": [17, 35, 37, 38, 53, 59, 60, 116, 120, 199, 201, 203, 238, 268, 288, 290, 293, 306, 308, 340, 342, 352, 404, 405, 409, 413, 416, 417, 438], "rotation_g": 201, "rotosolv": 352, "round": [103, 449], "rout": [16, 54, 241, 249, 269, 271, 272, 273, 274, 276, 279, 415], "rout_0": 248, "rout_1": 248, "rout_2": 248, "routin": [1, 9, 10, 15, 16, 17, 28, 48, 116, 201, 203, 205, 210, 239, 246, 247, 248, 250, 251, 252, 253, 254, 255, 258, 259, 260, 265, 267, 268, 279, 280, 281, 344, 417, 423], "routine_1": 248, "routine_state_prep": 248, "routop_l": 279, "row": 95, "royalti": 5, "rpf": 96, "rpge17": 260, "rpn": [147, 170], "rst": [0, 7, 8, 9, 13, 18, 22, 27, 28, 33, 34, 36, 46, 51, 52, 56, 425, 431, 432, 441, 447, 452], "rueschlikon": [172, 179], "ruiz": 260, "rule": [5, 51, 53, 56, 57, 58, 60, 116, 120, 210, 312, 328, 336, 352, 423, 450], "run": [0, 1, 2, 3, 5, 11, 14, 23, 24, 27, 35, 37, 42, 43, 44, 46, 48, 51, 59, 75, 106, 116, 120, 123, 222, 223, 225, 226, 227, 228, 230, 268, 278, 285, 288, 290, 293, 306, 308, 328, 329, 330, 334, 338, 348, 351, 356, 357, 360, 363, 369, 370, 415, 423, 426, 427, 438, 450, 452, 454], "run_fci": 211, "runtim": [5, 77, 417, 423, 426], "runtime_linux": [69, 429, 430], "rx": [2, 10, 17, 31, 49, 52, 59, 60, 61, 83, 116, 238, 275, 278, 323, 324, 332, 334, 342, 352, 409, 416, 423, 449, 450, 454], "rx_conj": 61, "rx_i": 31, "rx_minus_left": 416, "rx_minus_right": 416, "rx_plus_left": 416, "rx_plus_right": 416, "rx_rz": 278, "rxx": 83, "ry": [3, 10, 11, 17, 48, 50, 59, 61, 83, 116, 189, 201, 238, 248, 325, 344, 352, 416, 449, 450, 454], "ry_minus_left": 416, "ry_minus_right": 416, "ry_plus_left": 416, "ry_plus_right": 416, "ryd": [224, 290, 293, 306, 308, 423, 431, 440, 441], "ryd_job": [290, 293, 306, 308, 440], "rydber": 423, "rydberg": [290, 293, 306, 308, 431, 440, 441], "rz": [10, 11, 17, 49, 50, 52, 53, 59, 60, 61, 83, 95, 97, 189, 232, 234, 237, 238, 268, 278, 315, 323, 324, 325, 334, 342, 352, 410, 416, 450], "rz_minus_left": 416, "rz_minus_right": 416, "rz_plus_left": 416, "rz_plus_right": 416, "rzz": 83, "s11128": [55, 260], "s_": [23, 24, 41, 189, 296], "s_i": [364, 440], "s_j": [364, 440], "sa": [4, 5, 23, 25, 41, 287, 290, 291, 292, 293, 294, 295, 306, 307, 308, 311, 432, 433, 434, 435, 436, 437], "sa_qpu": [433, 434, 435, 436, 437], "sabr": 343, "saeedi": 55, "saemlessli": 338, "safe": [59, 245, 417], "sai": [16, 37, 61, 201, 275], "said": 450, "sake": [449, 450], "sam": [296, 438], "same": [5, 9, 10, 14, 16, 19, 21, 22, 23, 29, 31, 35, 57, 58, 60, 61, 78, 96, 110, 116, 120, 125, 129, 147, 198, 209, 232, 233, 234, 235, 236, 248, 250, 268, 327, 336, 340, 346, 348, 352, 407, 413, 417, 423, 431, 446, 450, 454], "sampl": [0, 1, 2, 8, 9, 11, 16, 21, 26, 28, 30, 31, 32, 33, 35, 37, 42, 46, 47, 49, 53, 82, 86, 88, 89, 109, 110, 116, 120, 142, 160, 161, 163, 165, 224, 239, 271, 272, 275, 276, 278, 291, 292, 294, 295, 301, 302, 303, 304, 305, 311, 328, 332, 344, 349, 355, 357, 360, 362, 363, 365, 405, 413, 423, 424, 426, 433, 434, 435, 436, 437, 440, 441], "sampler": [82, 356, 426, 454], "samplerpublik": 360, "sampling_frequ": [38, 161], "samuel": 256, "sat": [25, 285], "satfisfi": 48, "satisfactori": 5, "satisfi": [5, 12, 37, 285, 289, 422], "save": [16, 47, 53, 162, 249, 268, 340, 426], "save_account": 426, "scalabl": 296, "scalar": [19, 20, 26, 32, 163, 233, 235, 275, 377, 421], "scale": 3, "sched": 165, "schedul": [0, 2, 8, 18, 21, 23, 24, 33, 34, 35, 37, 38, 39, 40, 41, 42, 110, 120, 161, 233, 235, 290, 293, 296, 297, 299, 306, 308, 370, 422, 423, 431, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "schedule1": 20, "schedule2": 20, "schedule_gener": 285, "schedulegener": 285, "schema": [397, 399], "scheme": [11, 15, 50], "schloss": 248, "schmidt": 377, "scienc": [18, 51, 248], "scipi": [3, 46, 50, 160, 328, 351, 422], "scipy_arg": [442, 443, 444, 445, 446], "scipyminimizeplugin": [2, 3, 31, 50, 288, 290, 293, 306, 308, 328, 332, 423, 441, 442, 443, 444, 445, 446, 449, 450], "scope": [13, 16, 47, 245, 269, 270, 271, 272, 273, 274, 276, 277, 279, 422, 423], "score": [58, 302, 343, 346], "screen": 47, "script": 430, "seamless": [431, 452], "search": [1, 48, 60, 210, 239, 415, 417, 422, 439], "sec": 432, "second": [1, 15, 16, 23, 24, 29, 30, 31, 35, 52, 57, 60, 159, 168, 175, 198, 200, 205, 223, 237, 252, 264, 290, 293, 306, 308, 313, 315, 343, 363, 370, 377, 379, 380, 381, 382, 405, 413, 416, 417, 432, 433, 435, 436, 442, 443], "second_half": 1, "section": [0, 1, 2, 3, 5, 7, 9, 10, 14, 17, 18, 22, 25, 26, 31, 33, 35, 42, 46, 47, 49, 50, 51, 52, 58, 64, 95, 96, 116, 223, 229, 237, 287, 291, 292, 294, 307, 311, 312, 317, 339, 342, 343, 346, 350, 370, 423, 427, 431, 432, 440, 449, 451], "secur": 5, "see": [1, 4, 5, 17, 19, 22, 23, 26, 29, 30, 31, 37, 38, 41, 48, 52, 57, 58, 59, 69, 88, 96, 99, 100, 101, 116, 120, 147, 200, 203, 209, 220, 236, 242, 248, 268, 271, 272, 273, 275, 276, 278, 283, 292, 294, 295, 307, 311, 334, 337, 340, 342, 344, 345, 347, 351, 353, 387, 413, 415, 417, 423, 429, 430, 438, 448, 449, 450], "seed": [23, 24, 61, 161, 340, 353, 362, 364, 415, 418, 419, 423, 453], "seek": 5, "seem": 14, "seen": [24, 26, 48, 60, 96, 290, 338, 440, 448, 449, 450], "segment": [6, 349, 423], "seiichiro": 256, "select": [2, 57, 58, 120, 188, 208, 212, 315, 330, 343, 346, 423, 447, 449, 450], "select_active_orbit": 188, "select_active_spac": [208, 209, 449], "select_excitation_oper": 451, "self": [10, 31, 42, 47, 48, 271, 276, 310, 345, 416, 421, 426], "sell": 5, "semant": [0, 9, 27, 46, 158, 452], "send": [18, 34, 35, 37, 39, 42, 47, 55, 70, 72, 110, 144, 165, 423, 433, 434, 435, 436, 437], "sens": [52, 362], "sensit": [50, 450], "sent": [5, 12, 18, 22, 28, 69, 71, 72, 223, 225, 226, 227, 228, 230, 290, 293, 306, 308, 355, 371], "sep": 51, "sep_measur": [66, 71, 74, 80, 359], "separ": [5, 14, 23, 57, 66, 71, 74, 80, 237, 451], "septemb": 423, "seqoptim": [50, 189, 328, 450], "sequenc": [8, 9, 13, 16, 17, 52, 59, 116, 238, 248, 268, 328, 409], "sequenti": [0, 1, 3, 11, 46, 352, 422, 423, 447, 450], "sequential_round_count": 103, "seri": [8, 28, 210], "serial": [12, 17, 28, 32, 42, 47, 86, 87, 110, 114, 116, 120, 163, 167, 423], "serializ": [114, 115, 116, 119, 163, 164, 168, 170], "serv": [31, 33, 46, 123, 223, 229, 329, 363, 369, 414], "server": [31, 33, 42, 46, 47, 82, 97, 123, 124, 222, 223, 229, 328, 329, 350, 358, 361, 363, 369, 371, 415, 454], "server_typ": [123, 223, 329, 363, 369], "servic": [5, 12, 31, 82, 358, 364, 423, 454], "sesolv": 370, "set": [1, 2, 5, 10, 12, 13, 17, 28, 29, 31, 37, 38, 40, 42, 46, 48, 49, 50, 51, 53, 56, 58, 60, 61, 66, 71, 74, 75, 80, 82, 84, 88, 95, 96, 110, 116, 117, 119, 125, 126, 128, 136, 137, 144, 147, 158, 163, 164, 165, 168, 189, 194, 197, 205, 208, 210, 211, 212, 213, 232, 234, 238, 245, 249, 266, 268, 271, 273, 276, 278, 279, 280, 285, 286, 288, 289, 290, 293, 296, 306, 308, 313, 315, 326, 327, 331, 333, 334, 338, 339, 343, 345, 346, 348, 349, 351, 352, 353, 360, 362, 397, 405, 411, 413, 414, 415, 417, 419, 422, 423, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 450, 451], "set_ancilla": [15, 16, 279], "set_circuit_gener": [10, 137], "set_compile_attribut": 346, "set_dag": 238, "set_gate_set": 249, "set_gate_tim": [58, 283], "set_matrix_gener": [10, 137], "set_nbqbit": 168, "set_nniz": [283, 284], "set_opt": 351, "set_phi_to_0": 205, "set_qpu": [75, 84], "set_qreg": 164, "set_valu": [16, 276, 327], "settl": [5, 41], "setup": 299, "setuptool": [69, 429, 430], "sever": [1, 5, 9, 12, 28, 31, 32, 42, 43, 52, 53, 57, 60, 81, 86, 88, 89, 110, 115, 116, 120, 147, 315, 327, 328, 352, 422, 448, 450], "sgd": 450, "shall": [5, 42, 334], "shape": [87, 208, 209, 248, 275, 278, 363, 403, 413, 438, 449], "share": [5, 35, 37, 49, 58, 63, 92, 93], "shell": 162, "shift": [10, 17, 20, 116, 120, 233, 235, 352, 423, 431, 450], "shift_jump_oper": [233, 235], "shift_qbit": [116, 120], "sho": 39, "shor": 253, "short": [88, 422], "shorter": [42, 53], "shorthand": 26, "shot": [2, 28, 29, 30, 33, 42, 50, 116, 120, 164, 165, 189, 210, 360, 363, 423, 426, 450, 454], "should": [2, 5, 16, 22, 31, 33, 35, 42, 46, 47, 48, 54, 57, 58, 60, 66, 71, 74, 80, 81, 96, 116, 120, 144, 160, 161, 165, 193, 194, 210, 211, 213, 238, 243, 244, 249, 250, 257, 266, 267, 268, 271, 273, 277, 278, 280, 287, 288, 290, 293, 294, 306, 308, 311, 315, 326, 330, 331, 332, 334, 338, 339, 345, 349, 352, 357, 360, 364, 369, 370, 404, 405, 410, 415, 417, 423, 431, 448, 449, 451], "show": [28, 39, 116, 210, 279, 432, 433, 436, 440, 449, 450], "showcas": 27, "shown": [35, 355, 432, 442, 443, 444, 445, 446], "shuffl": 116, "siam": 198, "side": [31, 42, 46, 47, 57, 60, 116, 348], "sigma": [35, 37, 192, 198, 202, 208, 448], "sigma_": [23, 26, 390], "sigma_1": [192, 208], "sigma_2": [192, 208], "sigma_i": [3, 26, 296, 388], "sigma_v": [306, 423], "sigma_x": [3, 11, 19, 26, 38, 50, 296, 388, 413, 438, 439], "sigma_z": [3, 19, 26, 31, 35, 37, 38, 48, 275, 289, 296, 310, 388, 413], "sign": [1, 59, 116, 123, 210, 223, 290, 329, 355, 363, 369, 416], "signa": 136, "signal": [20, 161], "signatur": [10, 17, 116, 136, 241, 249], "signifi": [95, 268], "signific": [163, 265, 276, 362, 413], "significantli": 340, "sigsegv": 423, "sim_method": [37, 38, 370], "similar": [5, 17, 18, 24, 40, 52, 200, 226, 227, 230, 278, 287, 292, 294, 311, 423], "similarili": 275, "similarli": [10, 12, 16, 17, 21, 243, 276, 277, 293, 371, 442, 443, 444, 445, 446, 448], "simmon": 51, "simon": 51, "simpl": [0, 1, 16, 17, 19, 25, 26, 28, 29, 30, 31, 35, 37, 38, 39, 40, 46, 48, 54, 57, 58, 114, 115, 116, 119, 123, 158, 163, 164, 168, 219, 223, 268, 278, 300, 310, 329, 334, 341, 363, 365, 369, 395, 422, 423, 438, 439, 442, 443, 444, 445, 446, 449, 450], "simplefilt": 423, "simpleinitialst": [296, 297], "simpler": [48, 296], "simplest": [16, 50, 116], "simplfi": 14, "simpli": [19, 21, 48, 52, 53, 170, 268, 271, 275, 290, 299, 300, 337, 438, 453], "simplic": [10, 449, 450], "simplif": 57, "simplifi": [1, 13, 53, 236, 237, 312, 448, 449], "simul": [0, 3, 5, 7, 9, 10, 12, 18, 21, 22, 23, 25, 28, 29, 32, 37, 38, 41, 42, 58, 63, 75, 78, 79, 85, 97, 110, 116, 164, 165, 171, 210, 218, 237, 238, 250, 268, 287, 290, 291, 292, 293, 294, 295, 296, 306, 307, 308, 311, 331, 334, 343, 346, 348, 362, 363, 364, 365, 370, 431, 433, 434, 435, 436, 437, 452], "simulat": [98, 423], "simulated_ann": [364, 433, 434, 435, 436, 437], "simulatedann": [41, 142, 290, 293, 306, 308, 361, 423, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446], "simultan": [58, 328, 353], "simultaneous_perturbation_stochastic_approxim": 353, "simutil": 110, "sin": [17, 35, 37, 40, 144, 147, 158], "sinc": [12, 16, 28, 52, 53, 54, 57, 58, 60, 78, 97, 233, 235, 237, 244, 249, 250, 271, 275, 279, 396, 431, 439, 442, 450], "singapor": [172, 180], "singl": [14, 16, 17, 20, 28, 31, 41, 48, 49, 52, 53, 56, 57, 58, 61, 75, 78, 79, 82, 96, 110, 123, 170, 188, 194, 198, 208, 223, 233, 235, 236, 237, 239, 248, 299, 322, 328, 329, 330, 336, 339, 344, 345, 347, 351, 352, 353, 362, 363, 369, 405, 413, 448], "single_qubit": 236, "singleton": 310, "sinu": [144, 156], "site": [35, 37, 40, 200, 202, 448], "situat": 413, "six": [5, 165], "sixti": 5, "size": [37, 42, 47, 60, 96, 198, 208, 210, 218, 219, 220, 221, 227, 248, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 268, 279, 287, 292, 294, 295, 303, 304, 305, 307, 315, 334, 336, 339, 340, 343, 346, 347, 398, 402, 415, 419, 432, 433, 434, 436, 443, 444], "size_initial_vector_spac": 347, "size_interv": [210, 449], "size_slic": 343, "skeleton": [42, 237], "sketch": 340, "skip": [53, 75, 82, 237, 244, 249, 268, 413], "skip_transpil": 82, "slack": 424, "slate": [69, 429, 430], "slater": [199, 203], "sleep": 426, "slic": 286, "slice": [243, 277, 286, 343], "slightli": [48, 423], "slow": 438, "slower": 450, "slowli": 439, "small": [40, 57, 188, 189, 204, 210, 211, 220, 296], "small_group": 220, "smaller": [37, 220, 276, 432], "smallest": [437, 445], "smart_dagg": 116, "smarter": 116, "smartli": 415, "snippet": [0, 3, 16, 35, 39], "so": [1, 3, 5, 8, 16, 28, 35, 37, 41, 48, 57, 58, 59, 60, 61, 92, 116, 165, 198, 200, 201, 208, 210, 279, 293, 306, 352, 365, 423, 431, 432, 442, 448, 449, 450], "softwar": [5, 33, 423, 452], "sold": 5, "sole": [5, 10], "solut": [22, 31, 41, 197, 290, 291, 292, 294, 295, 296, 303, 311, 364, 415, 432, 433, 434, 435, 436, 437, 438, 439, 441], "solution_configur": [143, 433, 434, 435, 436, 437], "solv": [1, 22, 24, 25, 41, 55, 58, 188, 189, 222, 224, 225, 226, 227, 228, 230, 285, 287, 291, 292, 294, 295, 301, 302, 307, 309, 311, 328, 343, 370, 415, 422, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 450], "solver": [41, 48, 52, 287, 291, 292, 294, 295, 307, 311, 343, 364, 370, 432, 451], "some": [0, 5, 7, 9, 11, 14, 15, 16, 17, 18, 20, 21, 26, 28, 29, 31, 33, 34, 35, 41, 42, 46, 47, 48, 53, 55, 57, 58, 60, 61, 86, 97, 116, 119, 120, 160, 161, 162, 165, 188, 205, 223, 237, 238, 244, 247, 248, 251, 254, 255, 266, 267, 268, 271, 272, 276, 278, 279, 280, 286, 288, 290, 293, 297, 299, 300, 306, 308, 312, 315, 320, 328, 329, 331, 334, 335, 338, 340, 346, 349, 356, 362, 372, 404, 405, 406, 413, 415, 417, 420, 423, 431, 432, 439, 442, 443, 444, 445, 446, 449], "some_random_point": 275, "someon": 4, "someth": [47, 423], "sometim": [16, 23, 54, 381, 413], "sort": [18, 114, 116, 120, 165, 195, 197, 208, 411, 423], "sourc": [17, 48, 69, 86, 188, 423, 432, 447, 449], "space": [1, 23, 37, 39, 48, 110, 160, 188, 208, 212, 268, 372, 423, 447, 449, 450], "span": [110, 160], "spars": [160, 193, 194, 213, 362, 402, 423], "sparsepauliop": 454, "spatial": 212, "speak": 28, "spec": [31, 47, 49, 52, 55, 116, 119, 120, 223, 224, 225, 226, 227, 228, 229, 230, 329, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 346, 348, 349, 350, 354, 355, 405, 406, 420], "special": [5, 23, 41, 94, 225, 226, 227, 228, 230, 285, 287, 291, 292, 294, 295, 297, 307, 311, 328, 404, 452], "specif": [5, 18, 23, 31, 32, 40, 51, 55, 188, 232, 234, 257, 333, 342, 343, 346, 348, 355, 357, 359, 360, 363, 396, 423, 438, 440], "specifi": [1, 2, 3, 14, 16, 17, 18, 19, 25, 26, 28, 34, 35, 36, 37, 40, 41, 52, 59, 78, 79, 86, 88, 89, 91, 116, 161, 167, 168, 210, 231, 232, 233, 234, 235, 237, 239, 248, 249, 257, 259, 261, 262, 263, 264, 268, 274, 275, 278, 287, 290, 293, 297, 306, 308, 332, 344, 360, 364, 370, 413, 417, 423, 433, 434, 435, 436, 437, 438, 439, 453], "spectral": [34, 38, 161, 394, 396], "spectral_funct": 396, "speed": [19, 188, 448], "spend": 405, "spin": [7, 23, 40, 41, 63, 110, 189, 193, 194, 195, 197, 200, 202, 207, 211, 213, 215, 216, 217, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 364, 370, 423, 432, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 449], "spin_1_subset": 436, "spin_comutator_matrix": 448, "spin_hamiltonian": [215, 216, 217], "spin_minus_1_subset": 436, "spinhamiltonian": [188, 189, 191, 193, 194, 207, 210, 215, 216, 217, 354, 448, 450], "spins_arrai": 143, "spins_to_integ": 141, "split": [42, 43, 344, 451], "splitter": 422, "splitting_method": 344, "spmatrix": 160, "spsa": [328, 353], "spsaminimizeplugin": 328, "sqa": [23, 24, 33, 224, 225, 226, 227, 228, 230, 287, 290, 291, 292, 293, 294, 295, 306, 307, 308, 311, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446], "sqa_best_paramet": [442, 443, 444, 445, 446], "sqa_best_parameters_dict": [442, 443, 444, 445, 446], "sqa_job": [290, 293, 306, 308], "sqaqpu": [23, 24, 290, 293, 306, 308, 433, 434, 435, 436, 437], "sqrt": [1, 17, 28, 29, 30, 37, 38, 111, 144, 164, 265, 381, 382, 388, 389, 394, 396, 402], "sqrt2": 38, "sqrtswap": [10, 17, 52, 61], "squar": [144, 157, 172, 186, 381, 391, 398, 415], "squaregriddevic": 172, "ssl": [123, 124, 223, 229, 329, 350, 363, 369, 371], "ssl_ca": [123, 223, 329, 363, 369], "ssl_cert": [123, 124, 223, 229, 329, 350, 363, 369, 371], "ssl_kei": [123, 124, 223, 229, 329, 350, 363, 369, 371], "stabil": [51, 53, 404, 420], "stack": [3, 10, 30, 31, 32, 46, 47, 48, 50, 54, 116, 119, 120, 189, 222, 223, 224, 225, 226, 227, 228, 230, 279, 328, 331, 332, 338, 340, 341, 351, 355, 423, 441, 449, 450, 452], "stack1": 54, "stack2": 54, "stack_default": 334, "stack_improv": 334, "stage": [47, 48, 49, 52, 59, 210, 268, 273, 342], "stai": [14, 334, 335], "stand": [17, 50, 210], "standalon": 340, "standard": [1, 23, 28, 29, 30, 52, 53, 61, 84, 111, 144, 164, 231, 236, 238, 274, 296, 338, 340, 342, 362, 391, 392, 415, 450], "star": 189, "start": [1, 4, 16, 17, 21, 23, 24, 29, 30, 31, 33, 35, 38, 40, 42, 46, 47, 48, 50, 52, 53, 54, 86, 116, 123, 210, 223, 229, 249, 272, 276, 287, 291, 292, 294, 295, 296, 297, 307, 311, 329, 334, 341, 350, 363, 369, 374, 411, 422, 438, 449, 452], "start_ham": 298, "startegi": 423, "startup": 423, "state": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 15, 16, 18, 21, 23, 26, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 53, 57, 86, 88, 89, 91, 92, 107, 109, 110, 111, 116, 120, 121, 142, 143, 160, 163, 164, 165, 188, 189, 191, 196, 204, 210, 211, 231, 232, 234, 239, 247, 248, 265, 267, 271, 273, 275, 276, 278, 279, 280, 281, 289, 290, 296, 297, 298, 299, 300, 332, 355, 362, 363, 365, 370, 372, 381, 402, 404, 405, 406, 413, 420, 423, 433, 434, 435, 436, 437, 438, 439, 447, 450, 451], "state_prep": [232, 234, 239, 247], "state_prep_circ": 189, "state_vec": [88, 89, 91], "statement": [5, 15, 273, 275, 279, 363], "statevector": [32, 47, 163, 349, 381, 423], "static": [10, 116, 147, 168, 278, 286, 289, 290, 293, 296, 306, 308, 327, 423], "statist": [28, 61, 116, 253, 423], "statu": [3, 81, 423, 454], "statutori": 5, "stdin": [23, 24, 69, 433, 434, 435, 436, 437], "stdout": 423, "steepest": 450, "steer": 18, "steiner": 340, "steiner_gauss": 415, "steiner_method": 340, "step": [11, 12, 14, 27, 37, 38, 40, 42, 46, 48, 52, 191, 207, 210, 237, 239, 268, 336, 346, 349, 362, 364, 370, 413, 449, 450], "steven": 256, "still": [14, 18, 25, 116, 210, 268, 276, 278, 348, 349, 451], "stim": [4, 405, 406, 407, 420], "stinespr": 374, "stochast": [34, 36, 37, 41, 161, 164, 328, 353, 370, 423, 450], "stock": 5, "stop": [98, 268, 330, 333, 336, 353], "stop_condit": 353, "stop_crit": 336, "stoppabl": [123, 223, 329, 363, 369], "stoppag": 5, "store": [12, 15, 16, 17, 48, 49, 53, 61, 86, 92, 95, 96, 116, 118, 120, 160, 163, 165, 170, 188, 196, 244, 263, 267, 268, 273, 274, 280, 287, 291, 292, 294, 295, 307, 311, 345, 363, 423, 426], "str": [42, 69, 78, 79, 82, 95, 96, 99, 100, 101, 103, 104, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 136, 137, 147, 158, 160, 163, 165, 167, 168, 170, 193, 194, 200, 207, 210, 211, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 249, 266, 268, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 300, 306, 307, 308, 311, 315, 316, 318, 329, 334, 336, 337, 339, 342, 343, 344, 345, 346, 347, 350, 354, 355, 358, 363, 369, 371, 387, 388, 396, 400, 401, 403, 405, 413, 415, 417, 421, 423, 433, 434, 435, 436, 437, 450], "straight": [19, 210, 370], "straightforward": [16, 23, 30, 46, 116, 297], "straightfoward": 17, "strat_arg": 334, "strategi": [51, 52, 200, 218, 237, 286, 288, 290, 293, 306, 308, 334, 340, 405, 413, 417, 438], "stream": 72, "strength": 355, "strict": [35, 37, 95, 343, 346], "strictli": [53, 58, 340], "strike": 5, "string": [1, 17, 49, 60, 69, 96, 116, 118, 147, 165, 167, 210, 232, 234, 266, 268, 290, 293, 296, 306, 308, 314, 336, 354, 370, 387, 388, 394, 396, 402, 403, 413, 421, 423, 439], "strip": 53, "strong": 448, "strongli": [17, 352], "structur": [1, 12, 17, 31, 32, 87, 93, 96, 103, 104, 106, 108, 110, 116, 158, 165, 188, 193, 194, 208, 210, 211, 238, 248, 266, 268, 288, 290, 293, 296, 306, 308, 312, 315, 331, 338, 340, 345, 346, 357, 360, 362, 363, 369, 416, 440, 441, 448, 449, 454], "strucur": [357, 360], "struggl": 18, "stuctur": 356, "student": 5, "studi": [209, 211, 423, 447, 449, 450], "su": 59, "sub": [5, 10, 52, 53, 58, 116, 117, 251, 252, 253, 254, 255, 327], "sub_register_1": 313, "sub_register_2": 313, "subcircuit": [14, 15, 17, 57, 95, 116, 237, 249, 279, 315, 335, 346, 413], "subclass": 369, "subclaus": 289, "subgat": [95, 116], "subgraph": [432, 433, 434, 435, 442, 443, 444, 445], "subject": [5, 287], "sublicens": 5, "submatric": [249, 268], "submatrices_onli": [116, 249, 268, 423], "submiss": [5, 31, 423], "submit": [0, 1, 2, 3, 5, 16, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 51, 55, 75, 78, 79, 81, 82, 97, 116, 120, 189, 239, 332, 334, 338, 343, 348, 351, 357, 360, 362, 363, 365, 369, 371, 423, 426, 427, 433, 434, 435, 436, 437, 441, 449, 450], "submit_job": [75, 338, 363, 364, 369], "submodul": [9, 237, 451], "subresult": 28, "subroutin": [14, 95, 331], "subsect": 16, "subsequ": [5, 334, 448], "subset": [28, 88, 91, 294, 296, 305, 344, 417, 422, 432, 436, 441, 442, 443, 446], "subspac": [189, 398, 422, 439], "substanti": 5, "substitut": 5, "substract": [269, 423], "subtract": 23, "subtyp": 46, "success": [3, 81, 86, 353], "successfulli": 3, "successor": 5, "sugar": 16, "suggest": 210, "sugisaki": [204, 205], "suit": [3, 188], "sum": [17, 20, 23, 24, 31, 46, 50, 54, 120, 160, 200, 237, 248, 285, 286, 290, 296, 332, 340, 345, 413, 423, 432, 436, 439], "sum_": [1, 23, 24, 37, 41, 190, 193, 198, 200, 202, 208, 214, 248, 265, 290, 296, 306, 363, 364, 400, 401, 402, 417, 423, 440, 448], "sum_i": [11, 18, 120, 165, 202, 248, 296, 364, 388, 438, 440], "sum_k": 385, "sum_v": [306, 423], "summar": [32, 61], "super": [42, 48], "superconduct": [52, 172], "superimpos": 5, "superposit": [1, 35, 37, 165, 273, 296], "supersed": 5, "supplementari": 4, "suppli": [39, 78, 79, 396], "supplier": 5, "support": [1, 2, 4, 5, 6, 7, 12, 15, 28, 30, 37, 40, 41, 42, 46, 49, 52, 55, 61, 83, 97, 116, 119, 120, 137, 167, 210, 248, 293, 306, 308, 362, 370, 407, 419, 423, 430], "suppos": [78, 79, 84, 99, 100, 101], "suppress": 423, "supremaci": 334, "sure": [4, 296], "surround": 201, "suzuki": 422, "svg": 162, "svgwrite": 4, "swap": [10, 17, 40, 52, 53, 54, 57, 58, 60, 61, 83, 253, 313, 326, 328, 343, 346, 416], "swap_left": 416, "swap_right": 416, "swarm": [328, 347], "swarm_numb": 347, "swd11": [55, 343], "switch": 41, "sycamor": [172, 174], "symbol": [144, 147, 151], "symengin": 423, "symmetr": [23, 24, 293, 306, 308, 440, 453], "synchron": [31, 33, 46, 78, 79, 426], "syndrom": [51, 53, 405, 406, 413, 415, 420], "syntact": [16, 39], "syntax": [5, 9, 17, 57, 58, 95, 116, 237, 266, 423], "synth": [286, 417], "synthes": [51, 53, 286, 288, 290, 293, 306, 308, 340, 404, 413, 415, 417], "synthesi": [51, 53, 54, 55, 286, 340, 405, 406, 413, 415, 417, 420, 422, 438], "synthesize_fin": 417, "synthesize_stabilizer_st": 404, "synthoplin": [52, 54, 62, 63, 199, 340, 342, 423], "system": [5, 6, 7, 8, 15, 18, 22, 23, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 51, 55, 188, 195, 196, 197, 210, 248, 296, 306, 370, 372, 423, 439, 448, 449, 450], "systemat": [268, 306], "t": [1, 2, 5, 10, 11, 16, 17, 18, 19, 20, 21, 34, 35, 37, 38, 40, 41, 48, 50, 51, 52, 55, 57, 60, 61, 66, 71, 74, 78, 80, 83, 89, 116, 120, 147, 158, 161, 165, 170, 191, 192, 200, 207, 208, 210, 233, 235, 268, 283, 290, 293, 296, 306, 308, 339, 364, 394, 396, 407, 430, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 449, 450], "t_": [34, 195, 202, 396, 413], "t_1": 394, "t_f": 161, "t_loc": 200, "t_mat": [202, 449], "t_phi": 396, "t_variabl": [19, 20, 21], "tab": [69, 118], "tabl": [4, 69, 343, 406, 408, 415, 417, 418, 422, 423], "table_impl": 415, "tableau": [404, 405, 406, 407, 409, 416, 420, 421], "tableaux": 404, "tabmodul": 69, "tackl": [23, 55, 431, 432], "tag": 279, "takahashi": 256, "take": [2, 4, 12, 16, 21, 29, 31, 33, 35, 36, 38, 39, 40, 41, 42, 46, 47, 48, 50, 56, 58, 97, 144, 149, 150, 156, 166, 210, 231, 238, 248, 275, 278, 279, 332, 339, 345, 363, 370, 402, 413, 415, 438, 439, 440, 449], "taken": [205, 232, 417], "talk": 405, "tameem": 23, "tangent": 148, "tani": 256, "target": [31, 49, 61, 96, 116, 120, 168, 210, 219, 285, 298, 309, 318, 342, 406, 415, 416, 420, 431, 438, 439], "target_entangling_g": 318, "target_gate_set": [52, 342], "task": [0, 344, 431], "tau": [394, 396], "tau_k": 330, "technic": 5, "techniqu": [53, 286, 352, 431, 440, 450], "technologi": [5, 51, 55], "tell": [75, 369], "temp": [35, 37, 364], "temp_max": [287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "temp_min": [287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "temp_t": [364, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "temparatur": 346, "temperatur": [41, 287, 291, 292, 293, 294, 295, 306, 307, 308, 311, 343, 346, 364, 396, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446], "tempor": 20, "temporari": [5, 16, 56, 274, 422], "temporarli": 42, "ten": 19, "tend": [23, 50], "tensor": [26, 167, 198, 236, 248, 336, 352, 398, 403, 450], "tensor_1q_channel": [387, 388], "tensordot": [92, 363], "tensori": 116, "term": [3, 4, 5, 11, 16, 19, 20, 21, 23, 24, 25, 30, 32, 35, 37, 38, 39, 40, 42, 50, 110, 160, 188, 189, 194, 200, 202, 210, 213, 215, 216, 217, 226, 227, 230, 276, 286, 287, 288, 290, 292, 293, 294, 306, 308, 311, 344, 370, 407, 412, 413, 419, 423, 448, 449, 450], "termin": [3, 5, 110, 116, 117, 328], "test": [5, 41, 55, 120, 383, 384, 386, 423, 430, 432], "text": [5, 12, 268, 363, 430, 432], "textrm": [251, 253, 255], "tf": 161, "than": [1, 5, 25, 28, 31, 34, 39, 41, 42, 58, 60, 110, 120, 160, 167, 208, 276, 279, 286, 294, 311, 334, 340, 342, 343, 346, 353, 405, 417, 423, 448, 450], "thank": [57, 59, 61, 88, 197], "thant": 423, "thatrepres": 291, "thei": [3, 4, 5, 7, 8, 16, 23, 25, 26, 36, 48, 54, 58, 61, 86, 87, 93, 110, 116, 131, 137, 231, 233, 235, 237, 238, 243, 268, 277, 279, 285, 294, 311, 330, 334, 338, 369, 371, 372, 423, 430, 438, 441, 448, 449], "them": [1, 2, 4, 5, 6, 8, 13, 15, 16, 18, 20, 22, 23, 40, 56, 61, 116, 123, 195, 219, 222, 237, 279, 315, 327, 346, 352, 413, 414, 423, 432, 436, 449], "themselv": 285, "theorem": [23, 439], "theoret": [248, 295], "theori": [5, 188, 197, 438, 449, 451], "therefor": [5, 6, 12, 14, 16, 18, 31, 33, 41, 46, 210, 432, 442, 443, 444, 445, 446], "thereof": 5, "thereund": 5, "theta": [2, 3, 10, 11, 17, 50, 52, 61, 116, 120, 189, 191, 238, 275, 278, 320, 322, 336, 352, 423, 449, 450, 454], "theta_": [3, 189, 197, 450], "theta_0": 450, "theta_1": 450, "theta_2": 450, "theta_3": 450, "theta_4": 450, "theta_a": 197, "theta_i": [3, 336], "theta_init": 450, "theta_j": [120, 336], "theta_k": 330, "theta_list": 197, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 69, 71, 74, 78, 79, 80, 81, 82, 84, 85, 89, 93, 95, 96, 97, 98, 102, 105, 108, 110, 111, 116, 117, 119, 120, 123, 142, 144, 147, 158, 160, 161, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 193, 194, 195, 198, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 218, 222, 223, 224, 226, 227, 229, 230, 231, 233, 235, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 355, 357, 358, 359, 360, 362, 363, 365, 367, 368, 369, 370, 372, 374, 379, 394, 396, 404, 405, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 453], "thing": [1, 15, 23, 250, 340, 423], "think": [10, 210], "thinli": 201, "third": [5, 35, 55, 64, 263, 315], "thoma": 256, "thorough": 449, "those": [5, 6, 26, 28, 36, 43, 123, 266, 278, 334, 349], "though": [14, 362], "thread": [103, 106, 123, 223, 329, 362, 363, 369, 402, 423], "three": [6, 8, 30, 52, 95, 169, 237, 268, 320, 342, 344, 352, 413, 426, 431, 438, 448], "threshold": [28, 29, 42, 111, 116, 120, 165, 189, 208, 209, 212, 221, 268, 330, 334], "threshold_1": [208, 209, 212, 449], "threshold_2": [208, 209, 212, 449], "thrift": [4, 97, 114, 115, 116, 119, 120, 124, 131, 147, 163, 164, 167, 168, 170, 229, 293, 306, 350, 371], "thrift_str": 147, "thriftresult": 163, "thrifttopologi": 168, "through": [5, 17, 27, 32, 35, 40, 46, 53, 211, 243, 245, 248, 266, 277, 279, 287, 291, 292, 293, 294, 295, 304, 305, 307, 311, 315, 330, 336, 340, 347, 351, 352, 353, 362, 371, 372, 401, 403, 422, 426, 429, 452, 454], "throught": [362, 427, 428], "throw": 423, "thu": [1, 16, 28, 33, 53, 61, 76, 97, 210, 232, 234, 236, 248, 249, 268, 276, 278, 279, 293, 331, 337, 340, 348, 405, 413, 414, 417, 423, 439, 448, 450], "thumb": [53, 210], "ticket": [423, 424], "tild": [161, 233, 235, 241, 265, 396], "time": [0, 1, 4, 5, 10, 11, 13, 16, 18, 19, 20, 22, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 47, 53, 57, 60, 95, 103, 110, 116, 123, 161, 165, 198, 207, 210, 223, 231, 232, 234, 251, 252, 253, 255, 258, 259, 263, 264, 268, 283, 290, 293, 298, 306, 308, 315, 329, 334, 340, 352, 353, 363, 364, 369, 370, 372, 394, 395, 396, 398, 405, 411, 415, 422, 423, 426, 432, 439, 450], "time_budget_sec": [290, 293, 306, 308], "timeout": [123, 223, 329, 363, 369, 405], "timeplot": 162, "timoth": 51, "timoth\u00e9": 51, "tiron": 450, "titl": 5, "tmax": [19, 20, 21, 23, 35, 37, 38, 39, 40, 165, 290, 293, 296, 298, 306, 308, 309, 433, 434, 435, 436, 437, 439], "tmax_expr": 19, "tmax_psi_0": 296, "tname": 165, "to_bqm": [290, 293, 306, 308, 453], "to_chi": [372, 402], "to_choi": [402, 403], "to_circ": [0, 1, 3, 9, 11, 12, 14, 15, 16, 29, 30, 31, 52, 53, 54, 55, 57, 58, 66, 71, 74, 80, 95, 97, 116, 117, 189, 237, 239, 248, 249, 250, 251, 252, 253, 257, 258, 259, 268, 279, 286, 315, 332, 334, 348, 365, 409, 423, 449, 450], "to_circ_arg": [286, 288, 290, 293, 306, 308], "to_combinatorial_problem": [23, 24, 293, 306, 308], "to_cpp": [114, 120], "to_electron": [194, 448], "to_fermion": [193, 448], "to_is": [24, 25, 290, 308], "to_job": [0, 1, 2, 3, 11, 16, 18, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 47, 48, 50, 52, 53, 54, 55, 59, 61, 97, 116, 165, 167, 189, 239, 290, 293, 306, 308, 332, 334, 340, 348, 365, 370, 423, 433, 434, 435, 436, 437, 439, 440, 441, 449, 450], "to_krau": [400, 401, 403], "to_matrix": [160, 423], "to_nx": [119, 168, 173], "to_pauli": [416, 421], "to_ptm": [401, 402], "to_qubo": [23, 25, 290, 293, 306], "to_spin": [193, 194, 448, 449], "to_thrift": [114, 115, 116, 119, 120, 147, 163, 168, 170], "tobject": [114, 115, 116, 119, 120, 163, 164, 168, 293, 306], "todai": 344, "todo": 42, "toffoli": [16, 17, 257, 259], "togeth": [5, 34, 46, 54, 116, 120, 165, 285, 328, 342, 362, 432], "toi": 448, "token": [78, 79, 144, 158, 426], "tokyo": [172, 181], "tol": [3, 50, 236, 336, 351, 373, 383, 384, 385, 386, 441, 442, 443, 444, 445, 446, 450], "tol_vanishing_grad": 330, "toler": [336, 373, 383, 384, 385, 386], "too": [193, 194, 210, 213, 359, 423, 448], "took": 29, "tool": [0, 1, 8, 9, 11, 12, 16, 31, 46, 50, 51, 52, 56, 57, 58, 69, 110, 188, 432, 447, 448, 452], "toolset": [0, 46], "top": 320, "topo": 168, "topolog": [51, 343], "topologi": [2, 42, 49, 51, 55, 110, 119, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 342, 343, 348, 349], "topologytyp": [55, 110, 168, 348], "tort": 5, "tot": 36, "total": [52, 116, 194, 208, 209, 213, 220, 279, 355, 370, 423], "touch": 423, "toward": 273, "tqdm": 362, "tqx": 440, "tr": [232, 234, 355, 381, 382, 398, 403], "tr_": 398, "trace": [32, 50, 346, 372, 378, 380, 382, 384, 385, 398, 402], "traceback": 69, "traced_out_subspac": 398, "track": [5, 402], "trade": 5, "trademark": 5, "tradeoff": 11, "trajectori": 370, "tran": 17, "transfer": [5, 232, 233, 288, 290, 293, 306, 308, 372, 377, 379, 403], "transform": [5, 18, 39, 46, 48, 55, 57, 95, 161, 193, 194, 207, 208, 210, 214, 239, 246, 247, 260, 265, 268, 290, 293, 306, 308, 315, 328, 354, 400, 422, 423, 447, 448, 449, 450], "transform_basi": [208, 449], "transform_integrals_to_new_basi": 188, "transform_to_bk_basi": [188, 354, 448], "transform_to_jw_basi": [188, 354, 448], "transform_to_parity_basi": [188, 354, 448], "transformation_matrix": 208, "transformobserv": 328, "translat": [5, 16, 20, 23, 24, 25, 41, 69, 76, 83, 141, 142, 143, 290, 293, 306, 308, 342, 423, 425, 453], "transmiss": [114, 120], "transmit": [48, 97, 163, 167, 338], "transpar": 53, "transpil": [46, 56, 61, 82, 423, 426], "transpos": [23, 24, 60, 95, 193, 194, 213, 283, 453], "trap": 52, "treat": 23, "treati": 5, "treatment": 48, "tree": [15, 237, 248, 266, 289, 340, 432], "tri": [2, 31, 41, 58, 342, 415], "trial": 197, "triangular": 440, "trigger": [5, 16, 97, 276, 340], "triplet": 345, "trivial": [48, 52, 58, 60, 248, 271, 344, 419, 439], "trotter": [188, 191, 207, 210, 287, 291, 292, 294, 295, 307, 311, 404, 413, 422, 423, 447], "trotteris": [188, 449], "true": [3, 9, 16, 42, 47, 52, 53, 54, 55, 57, 66, 69, 71, 74, 75, 80, 82, 86, 90, 95, 96, 111, 112, 113, 116, 117, 124, 158, 160, 163, 164, 165, 167, 189, 194, 205, 211, 229, 249, 268, 269, 271, 273, 274, 275, 276, 278, 280, 286, 288, 290, 293, 296, 302, 303, 304, 305, 306, 308, 315, 329, 331, 332, 333, 336, 338, 339, 340, 349, 350, 362, 365, 371, 377, 379, 384, 385, 396, 401, 402, 403, 405, 411, 413, 414, 417, 419, 421, 423, 439, 440, 450], "true_psi_0": 298, "trust": 3, "truthi": 302, "try": [23, 48, 52, 54, 55, 60, 61, 97, 116, 165, 219, 288, 290, 293, 306, 308, 332, 334, 340, 343, 405, 414, 423, 424, 449], "ttype": [49, 55, 86, 87, 92, 94, 97, 102, 107], "tune": [12, 52, 352, 432], "tunnel": 198, "tupl": [39, 42, 57, 60, 66, 71, 74, 80, 88, 89, 91, 92, 116, 131, 161, 165, 189, 190, 192, 208, 210, 211, 212, 214, 232, 233, 234, 293, 303, 304, 305, 306, 308, 315, 320, 327, 357, 360, 364, 370, 417, 421, 423], "tuppl": 19, "turn": [14, 16, 21, 48, 61, 110, 116, 237, 268, 275, 278, 318, 328], "tutori": [4, 35, 37, 450], "twice": 120, "two": [0, 1, 5, 6, 12, 16, 17, 20, 23, 25, 26, 28, 36, 37, 39, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 82, 96, 116, 120, 144, 152, 159, 168, 169, 188, 190, 192, 197, 200, 208, 209, 211, 214, 232, 234, 236, 237, 248, 252, 257, 259, 261, 263, 268, 273, 276, 279, 289, 290, 293, 296, 306, 315, 332, 334, 337, 344, 346, 349, 353, 363, 364, 370, 372, 377, 379, 380, 382, 388, 402, 413, 422, 423, 433, 435, 436, 441, 442, 443, 449, 450], "two_body_integr": [190, 192, 197, 208, 209, 211, 214, 449], "type": [4, 5, 9, 13, 17, 23, 26, 27, 28, 29, 30, 31, 32, 33, 37, 42, 47, 48, 49, 52, 53, 55, 58, 66, 71, 74, 75, 79, 80, 82, 86, 87, 88, 89, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 116, 119, 120, 123, 130, 131, 136, 137, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 246, 247, 248, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 306, 308, 310, 313, 315, 316, 320, 321, 322, 323, 324, 325, 327, 329, 330, 332, 334, 336, 338, 345, 346, 347, 348, 351, 352, 353, 354, 358, 362, 363, 364, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 431, 441, 442, 443, 444, 445, 446, 448], "typeerror": 116, "typic": [23, 38, 201, 210], "typo": 423, "typograph": 5, "u": [8, 14, 16, 17, 30, 35, 39, 40, 52, 53, 54, 59, 61, 69, 83, 190, 192, 198, 200, 202, 208, 214, 237, 239, 247, 265, 275, 306, 320, 334, 405, 431, 448, 449, 450], "u2": 423, "u3": [52, 59, 319, 322, 342, 423], "u3_decomposit": 319, "u_": [208, 214, 265, 306, 423], "u_d": 1, "u_f": 1, "u_mat": 214, "ucc": [422, 423, 447, 448, 449, 451], "ucc_deprec": 451, "uccsd": [191, 413], "uminu": 144, "unauthor": 5, "unbias": 210, "unbound": 256, "uncertainti": 28, "unchang": [208, 212, 423], "unclear": 450, "uncomput": [1, 13, 16, 249, 279, 422], "unconstrain": [22, 41, 285, 308, 423], "uncorrel": 200, "under": [4, 5, 8, 12, 111, 116, 120, 165, 221, 303, 330, 345, 357, 360, 370, 407, 422, 423, 450], "undergo": 89, "underli": [5, 14, 16, 17, 144, 158, 163, 237, 241, 271, 272, 273, 274, 276, 348, 415, 442, 443, 444, 445, 446, 448, 451], "underneath": [42, 275, 362], "understand": [31, 57, 58], "understood": [248, 275], "undirect": [168, 313, 326, 433, 434, 435, 437, 442, 443, 444, 445, 446], "undo": 1, "unexpect": 423, "unifi": [9, 52, 357, 360], "uniform": [1, 237, 246, 281], "uniform_distribut": 237, "unimpl": 16, "union": [5, 136, 207, 209, 215, 216, 217], "uniqu": [96, 103, 104, 310], "unit": [0, 2, 8, 27, 28, 41, 58, 306, 364, 372, 386, 394, 396, 423, 452], "unitari": [43, 45, 51, 56, 57, 59, 95, 116, 237, 239, 244, 247, 267, 320, 339, 340, 377, 402, 417, 449, 450], "uniti": 276, "univers": [59, 328, 348, 422], "unix": [123, 223, 329, 363, 369], "unknown": [98, 210], "unless": [5, 232, 234, 257, 259, 261, 262, 263, 264], "unlik": [116, 165], "unoccupi": 40, "unpack": [120, 163], "unrest": 5, "unrol": [1, 278], "unset": 413, "unspecifi": 116, "unstabl": 415, "unstructur": 1, "until": [48, 210, 218, 334], "untouch": 268, "unus": [279, 328, 349], "up": [11, 15, 16, 17, 19, 25, 27, 38, 42, 46, 52, 53, 54, 116, 188, 198, 237, 268, 320, 340, 372, 373, 413, 415, 416, 421, 423, 432, 448, 450], "uparrow": [198, 200, 202], "upcom": 103, "updat": [5, 14, 17, 23, 41, 42, 51, 60, 75, 92, 116, 168, 208, 252, 268, 287, 291, 292, 294, 295, 307, 311, 327, 336, 340, 343, 346, 449, 450, 451], "update_angl": 60, "update_initial_ord": 343, "upon": [5, 15, 16, 29, 48, 97, 197, 310, 338, 340, 345], "upper": [48, 152, 208, 209, 210, 212, 440], "upper_bound": 152, "upstream": 341, "url": [23, 55, 123, 250, 256, 260, 329, 363, 369], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 69, 71, 74, 75, 78, 79, 80, 81, 82, 84, 88, 89, 92, 94, 95, 96, 97, 102, 105, 106, 110, 114, 115, 117, 119, 120, 123, 124, 125, 129, 131, 144, 158, 160, 161, 162, 163, 165, 166, 168, 170, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 192, 193, 194, 197, 199, 207, 208, 210, 211, 213, 214, 218, 223, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 243, 244, 248, 249, 250, 251, 252, 253, 257, 258, 259, 261, 263, 268, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 319, 321, 322, 323, 324, 325, 326, 327, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 360, 362, 363, 364, 370, 371, 372, 377, 396, 402, 404, 405, 406, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 454], "usabl": 268, "usag": [11, 16, 102, 116, 163, 229, 238, 248, 268, 278, 339, 340, 342, 343, 348, 350, 416, 422, 448], "use_choi": 379, "use_formula": 377, "use_nbthreads_heurist": 362, "use_result": 332, "use_sum_heurisit": 343, "use_sum_heurist": 343, "useabl": [77, 317], "useful": 97, "useless": [53, 57], "user": [0, 1, 4, 5, 27, 28, 31, 32, 33, 34, 46, 47, 48, 49, 53, 56, 58, 60, 64, 66, 71, 74, 75, 78, 80, 92, 93, 116, 117, 119, 144, 163, 188, 222, 237, 312, 317, 328, 330, 333, 334, 342, 346, 352, 357, 360, 361, 370, 371, 441, 449, 452], "user_custom_g": 336, "userwarn": [23, 24, 69, 429, 430, 433, 434, 435, 436, 437], "usr": [35, 37, 69, 429, 430], "usual": [9, 15, 16, 19, 23, 37, 116, 163, 210, 232, 236, 334, 388, 417, 423, 438, 439, 450], "util": [130, 218, 253, 342, 413, 423, 439, 451], "uv": [190, 192, 208, 209, 306, 448], "uvwx": [190, 192, 197, 208, 209, 448], "ux": [192, 208], "v": [5, 11, 16, 31, 120, 190, 192, 198, 208, 289, 306, 332, 423, 433, 434, 435, 437, 440, 442, 443, 444, 445, 446, 448], "v2": [5, 422], "v_dictionari": 116, "v_i": 198, "v_name": 116, "v_valu": 116, "val": [48, 271, 272, 276, 327], "valid": [42, 57, 58, 99, 100, 101, 110, 279, 432], "valiron": 51, "valu": [2, 3, 5, 9, 10, 17, 23, 28, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 46, 48, 50, 57, 59, 60, 75, 84, 86, 89, 91, 92, 96, 109, 115, 116, 118, 120, 142, 144, 145, 146, 148, 158, 159, 161, 163, 165, 166, 168, 170, 189, 210, 233, 235, 237, 238, 239, 253, 255, 257, 259, 261, 263, 266, 268, 271, 272, 273, 274, 275, 276, 278, 283, 289, 290, 293, 297, 300, 302, 306, 308, 310, 320, 327, 330, 336, 339, 341, 342, 343, 345, 346, 351, 352, 353, 355, 357, 362, 363, 364, 365, 370, 374, 417, 419, 439, 449, 450], "value_data": [32, 34, 47, 163, 423], "valueerror": [116, 233, 235], "values_data": [34, 47], "van": 51, "var": [25, 35, 37, 41, 59, 60, 61, 69, 285, 289, 290, 312, 313, 315, 321, 322, 323, 324, 325, 339, 429, 430], "var1": 290, "var2": 290, "var_dic": [116, 147], "var_nam": [268, 345], "var_typ": [170, 268], "varepsilon_": [111, 164], "varepsilon_1": [208, 209, 212], "varepsilon_2": [208, 209, 212], "vari": [18, 413, 450], "variabl": [10, 14, 20, 21, 24, 25, 28, 35, 37, 38, 40, 41, 46, 48, 50, 59, 60, 63, 78, 79, 103, 114, 116, 117, 120, 125, 129, 161, 165, 266, 268, 275, 278, 285, 286, 288, 289, 290, 293, 298, 306, 308, 310, 312, 320, 321, 322, 323, 324, 325, 327, 336, 339, 345, 347, 351, 353, 364, 413, 417, 423, 433, 434, 435, 436, 437, 442, 443, 444, 445, 446, 450], "variablenam": 345, "variablenamenotavail": [125, 268], "varianc": 450, "variant": [396, 413], "variat": [0, 2, 7, 9, 27, 28, 31, 32, 46, 48, 76, 110, 120, 189, 275, 285, 288, 290, 293, 306, 308, 332, 334, 336, 345, 347, 351, 352, 353, 413, 423, 438, 441, 447, 450, 452], "variational_circ": 48, "varieti": [18, 41, 43], "variou": [5, 8, 9, 12, 29, 59, 96, 116, 160, 172, 188, 211, 237, 238, 240, 245, 260, 268, 328, 337, 370, 415, 423, 432, 449], "varphi": 396, "ve": 11, "vec": [21, 50, 189, 191, 336], "vector": [0, 23, 32, 43, 44, 88, 89, 91, 92, 110, 121, 163, 171, 188, 196, 198, 210, 287, 293, 308, 330, 372, 373, 375, 376, 381, 392, 402, 421, 423], "vedral": [250, 256], "vee": 289, "venu": 5, "venv": [35, 37], "verbal": 5, "verbos": [53, 210, 341, 352, 370, 378, 405], "veri": [14, 18, 27, 31, 53, 60, 116, 211, 244, 268, 297, 300, 341, 422, 423, 442, 443, 444, 445, 446, 448, 449, 450], "verifi": [16, 30], "vers": 427, "versa": [23, 58, 60, 425, 426, 428], "versatil": 452, "version": [4, 5, 17, 95, 147, 170, 188, 199, 209, 301, 302, 303, 304, 305, 334, 423, 430, 449, 451], "versu": [51, 161], "vert": [191, 363], "vertex": [16, 222, 230, 285, 301, 305, 311, 422, 432, 433, 434, 435, 440, 441, 442, 443, 444, 446], "vertex_cov": 311, "vertex_cover_ann_prob": 432, "vertex_cover_appl": 445, "vertex_cover_gener": 445, "vertex_cover_problem": [311, 437, 453], "vertexcov": [285, 305, 308, 437, 445, 453], "vertexcovergener": [222, 305, 437, 445], "vertexcoverresult": [230, 301], "vertic": [306, 432, 437, 445, 446], "vfidel": 377, "vi": 5, "via": [0, 9, 10, 14, 16, 17, 18, 20, 23, 24, 25, 26, 34, 35, 36, 38, 39, 40, 41, 51, 52, 56, 57, 110, 116, 120, 137, 144, 161, 165, 172, 207, 210, 240, 242, 249, 268, 269, 271, 272, 273, 274, 276, 278, 279, 285, 289, 290, 293, 296, 306, 308, 312, 329, 334, 336, 338, 342, 350, 358, 370, 404, 413, 415, 416, 417, 421, 423, 432, 438, 448, 449, 450, 451], "vice": [23, 58, 60, 425, 426, 427, 428], "view": [28, 423], "violat": 5, "virtu": 5, "visual": [117, 303], "vlatko": [250, 256], "vmap": 168, "vmatrix": 17, "vmax": 144, "vname": 120, "void": 5, "volcan": 5, "vqe": [3, 46, 50, 189, 330, 341, 422, 423, 447, 450, 452], "vsolv": [285, 288, 290, 293, 306, 308], "vw": [192, 208, 306, 423], "w": [35, 37, 120, 147, 170, 190, 192, 208, 306, 423], "w1": [1, 279], "w2": [1, 279], "w_": [290, 440], "w_c": 396, "w_i": 440, "w_ir": 396, "wa": [5, 16, 43, 45, 52, 81, 89, 116, 161, 199, 271, 275, 276, 320, 346, 355, 366, 413, 423, 432], "wai": [5, 6, 8, 10, 12, 18, 25, 37, 40, 46, 47, 48, 50, 57, 59, 95, 96, 110, 116, 160, 238, 265, 306, 349, 362, 423, 432, 440, 449, 450], "wait": [117, 333, 426], "wall": [1, 31, 35, 37], "walsh_hadamard": 14, "wand": 4, "want": [3, 4, 23, 28, 40, 46, 48, 57, 60, 161, 163, 189, 238, 249, 275, 278, 287, 288, 290, 293, 306, 307, 308, 315, 342, 352, 437, 445, 450], "war": 5, "warn": [3, 9, 275, 283, 284, 427], "warranti": 5, "wavefunct": [28, 39, 110, 192, 208], "we": [1, 3, 5, 8, 10, 11, 14, 15, 16, 17, 23, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 48, 49, 52, 53, 54, 58, 59, 61, 71, 89, 96, 111, 116, 161, 188, 189, 210, 237, 238, 244, 248, 249, 253, 273, 275, 287, 292, 293, 306, 307, 308, 334, 336, 351, 352, 370, 398, 413, 416, 427, 431, 432, 436, 437, 439, 440, 445, 446, 447, 448, 449, 450], "weakli": 37, "web": 422, "wedg": 289, "weight": [25, 285, 290, 296, 306, 332, 343, 347, 402, 411, 413, 414, 423, 439], "weightiest": 440, "weigth": 332, "well": [3, 5, 17, 34, 41, 48, 110, 231, 293, 306, 308, 334, 423, 432, 438, 448, 449, 451, 452], "were": [16, 89, 413, 423, 431, 432], "weyl": [404, 421], "weyl_oper": 421, "weyloper": [404, 416], "what": [2, 14, 33, 37, 42, 47, 49, 89, 237, 266, 275, 369], "whatev": 449, "whatsoev": 5, "whch": 450, "wheel": [6, 423], "when": [1, 10, 11, 12, 14, 16, 23, 27, 28, 32, 35, 37, 39, 41, 46, 50, 53, 54, 57, 58, 60, 87, 88, 89, 91, 93, 97, 98, 110, 116, 117, 120, 125, 129, 135, 137, 138, 158, 210, 220, 237, 238, 250, 268, 271, 272, 275, 276, 278, 279, 283, 286, 288, 290, 293, 296, 306, 308, 330, 340, 342, 344, 352, 353, 370, 371, 372, 415, 417, 423, 428, 431, 432, 439, 448, 449, 450], "where": [1, 5, 11, 17, 23, 24, 35, 41, 48, 53, 57, 59, 60, 111, 116, 120, 148, 158, 161, 164, 189, 192, 197, 200, 208, 210, 239, 246, 248, 257, 259, 261, 262, 263, 264, 267, 280, 290, 293, 296, 306, 308, 310, 326, 340, 342, 352, 362, 363, 394, 396, 398, 413, 415, 417, 421, 423, 433, 434, 435, 436, 437, 438, 446], "wherea": [37, 41, 110, 355, 370], "wherev": 5, "whether": [5, 28, 69, 81, 163, 171, 193, 194, 199, 203, 205, 211, 213, 336, 352, 353, 362, 373, 383, 384, 386, 396, 402, 434, 444, 446], "which": [1, 3, 5, 9, 12, 13, 16, 18, 19, 20, 23, 24, 29, 31, 33, 35, 37, 41, 42, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 60, 71, 72, 78, 82, 86, 89, 95, 96, 99, 100, 101, 110, 116, 121, 123, 142, 160, 161, 162, 165, 168, 169, 197, 200, 208, 210, 223, 226, 227, 230, 232, 233, 234, 235, 237, 257, 259, 261, 262, 267, 268, 271, 272, 276, 280, 282, 283, 284, 285, 287, 288, 290, 292, 293, 294, 296, 302, 306, 308, 311, 315, 326, 327, 329, 330, 332, 342, 343, 346, 351, 352, 355, 362, 363, 369, 370, 396, 397, 398, 402, 403, 404, 413, 418, 422, 423, 426, 431, 432, 437, 438, 440, 445, 448, 449, 450], "while": [5, 8, 25, 28, 31, 35, 40, 57, 60, 116, 165, 340, 342, 348, 370, 377, 415, 423, 426, 448, 449, 450], "white": [38, 394, 396, 440], "who": [4, 5], "whole": [5, 18, 58, 210, 423], "whom": 5, "whose": [3, 16, 96, 220, 233, 235, 269, 275, 289, 330, 334, 387, 423, 438, 439, 449], "wht": 14, "why": 306, "wick": [194, 448], "wide": [46, 48, 440, 448, 454], "width": [48, 88, 91, 296, 415], "wigner": [188, 193, 194, 207, 210, 216, 354, 423, 447, 448], "wiki": 353, "wikipedia": [295, 353], "window": [4, 161, 210, 343, 346, 423], "window_s": [343, 346], "wire": [1, 10, 14, 15, 249, 268, 273, 279, 417], "wise": [232, 233, 234, 415], "wish": [5, 8, 39, 257, 287, 291, 292, 294, 295, 307, 311, 342, 370], "wished_thread_count": 106, "with_figur": [303, 304, 305], "with_label": 440, "within": [5, 40, 42, 89, 92, 110, 279, 357, 360, 363, 385, 426], "without": [5, 9, 14, 16, 18, 37, 53, 54, 89, 96, 218, 219, 268, 278, 288, 290, 293, 306, 308, 326, 328, 333, 339, 341, 381, 413, 422, 423, 450, 454], "won": [2, 57, 66, 71, 74, 80, 268], "word": [23, 266, 268, 355, 405, 415, 432], "work": [4, 5, 39, 43, 44, 48, 50, 53, 57, 60, 91, 163, 210, 232, 234, 253, 355, 360, 362, 370, 377, 423, 430, 450, 453], "workflow": 48, "workspac": [35, 37, 69, 429, 430], "world": 0, "worldwid": 5, "wors": [54, 58], "worst": [331, 340], "would": [18, 23, 31, 33, 37, 38, 39, 40, 48, 52, 59, 66, 71, 74, 80, 116, 197, 210, 238, 275, 278, 287, 291, 292, 294, 295, 307, 311, 329, 342, 370, 423, 432, 436, 437, 445, 450, 454], "wouldn": 158, "wrap": [8, 9, 10, 13, 16, 28, 33, 35, 37, 39, 41, 50, 54, 77, 82, 163, 164, 237, 268, 278, 279, 303, 304, 305, 328, 337, 340, 356, 358, 362, 363, 423, 426, 427], "wrap_sampl": 163, "wrapper": [42, 75, 77, 78, 79, 81, 110, 114, 115, 116, 119, 120, 163, 164, 168, 188, 241, 245, 275, 415, 423, 454], "wrapper_post_process": 223, "write": [0, 3, 5, 7, 10, 11, 16, 17, 23, 24, 37, 38, 48, 50, 56, 57, 58, 95, 188, 189, 238, 253, 275, 306, 313, 326, 332, 339, 342, 422, 448, 449, 452], "write_t": 69, "written": [5, 24, 26, 43, 44, 45, 110, 363, 376, 423, 448], "wrong": 423, "wrote": 17, "wsign": [35, 37], "www": 5, "x": [1, 3, 9, 10, 11, 12, 16, 17, 19, 20, 26, 38, 52, 57, 59, 60, 69, 83, 86, 91, 120, 148, 152, 158, 167, 181, 189, 190, 192, 202, 208, 210, 211, 213, 215, 217, 253, 265, 278, 287, 296, 306, 308, 315, 327, 344, 365, 376, 382, 390, 416, 417, 421, 423, 429, 439, 440, 448, 450], "x0": [3, 25, 189, 336, 347, 351, 352, 353, 449, 450], "x1": 25, "x2": 25, "x3": 25, "x4": 25, "x86_64": [4, 35, 37], "x86_64_cpython_python312": [35, 37, 69, 429, 430], "x_": [24, 340, 421, 448], "x_0": [30, 37, 421], "x_1": [35, 60, 417, 421], "x_2": [35, 417], "x_basis_chang": 344, "x_cp": 327, "x_i": 421, "x_left": 416, "x_n": 417, "x_right": 416, "xie": 55, "xk": 265, "xla_bridg": [3, 9, 275], "xor": [1, 16, 240, 273, 289, 290], "xor_claus": 289, "xore": 276, "xx": [35, 52, 61, 189, 216, 318, 342, 409, 413, 416, 454], "xx_left": 416, "xx_right": 416, "xxi": 413, "xxy": 167, "xy": [216, 340], "xz": [26, 30, 215, 217, 340, 448], "xzx": [59, 319], "xzx_decomposit": 319, "y": [10, 17, 26, 35, 37, 55, 60, 83, 148, 167, 211, 215, 217, 249, 327, 344, 390, 416, 417, 448, 450], "y_": [340, 448], "y_0": 35, "y_1": 417, "y_2": 417, "y_basis_chang": 344, "y_cp": 327, "y_left": 416, "y_n": 417, "y_right": 416, "yamashita": 55, "yan": 55, "yasuhiro": 256, "ye": [34, 425], "yet": [35, 278], "yield": [28, 29, 30, 31, 116, 223, 330, 417, 438], "yorktown": [172, 182], "you": [1, 4, 5, 10, 11, 12, 14, 15, 16, 20, 46, 50, 57, 58, 60, 66, 71, 74, 78, 79, 80, 117, 144, 188, 229, 238, 257, 266, 268, 288, 290, 293, 306, 308, 326, 334, 338, 339, 342, 345, 362, 405, 415, 422, 423, 424, 438, 447, 448, 449, 451], "your": [4, 5, 6, 9, 10, 12, 14, 33, 46, 48, 57, 59, 60, 95, 116, 117, 144, 168, 188, 288, 290, 293, 306, 308, 313, 329, 338, 343, 345, 423, 424, 426, 429, 448], "your_google_circ": 428, "your_pyquil_circuit": 427, "your_qiskit_circuit": 426, "your_qlm_circ": 428, "your_qlm_circuit": [426, 427], "yufei": 55, "yx": [35, 216, 340], "yy": [189, 216, 340, 454], "yz": [26, 215, 217, 340], "z": [1, 2, 10, 16, 17, 19, 20, 21, 23, 25, 26, 28, 29, 31, 35, 37, 38, 52, 59, 60, 83, 167, 211, 215, 216, 217, 268, 271, 288, 290, 293, 306, 308, 327, 344, 390, 416, 421, 448], "z_": [340, 448], "z_0": 421, "z_1": [30, 421], "z_cp": 327, "z_i": [31, 406, 421], "z_left": 416, "z_right": 416, "zentrum": 248, "zero": [23, 24, 29, 39, 95, 116, 165, 193, 197, 210, 232, 293, 306, 328, 349, 355, 415, 417, 419, 423, 447, 448, 449, 450], "zeronoiseextrapol": [328, 450], "zip": [1, 31, 120, 422], "zuchongzhi": [172, 423], "zulehn": 55, "zulehnerpalerwille18": [55, 343], "zx": [26, 340], "zxz": [59, 319], "zxz_decomposit": 319, "zxzx": 26, "zy": [213, 340, 448], "zyz": [59, 319], "zyz_decomposit": 319, "zz": [25, 26, 35, 52, 53, 61, 116, 189, 215, 216, 217, 286, 290, 318, 340, 342, 409, 413, 416, 448, 454], "zzi": 413, "zzx": 26, "zzz": [25, 286], "\u00e8": 51, "\u00e9": 51, "\u00ee": 51, "\u03b8": 454, "\u03c0": [52, 278], "\u03c3": 31, "\u03c6": 454}, "titles": ["Getting started", "Writing quantum programs", "Executing quantum programs", "Variational algorithms with Qaptiva", "Installing myQLM", "myQLM license", "myQLM Installation on MacOS", "User guide", "Writing quantum programs", "Gate-based programming", "Creating and adding quantum gates to a circuit", "Creating variational circuits", "Quantum programs", "Quantum routines (and Oracles)", "Naming quantum routines", "Ancillae management and compute scopes", "Oracles and quantum types", "Atos Quantum Assembler (AQASM)", "Analog programming", "Building schedules", "Manipulating schedules", "Analog Jobs", "Annealing programming", "Ising Hamiltonians", "Quadratic Unconstrained Binary Optimization (QUBO)", "General Combinatorial Problems", "Creating observables", "Executing / Simulating quantum programs", "Constructing one or multiple Jobs (using Batch)", "Sample Job", "Observable Job", "Automated batch generation", "Result of a quantum program", "Quantum Processing Unit (QPU)", "Analog computing", "Noiseless simulations", "Noisy simulations", "Jump operators", "Stochastic noise", "Bosonic simulations", "Fermionic simulations", "SQA computing", "Make your own QPU", "Gate based computing", "CLinalg: C++ Linear-algebra-based simulator", "PyLinalg: Python Linear-algebra-based simulator", "Extending a QPU (by using Plugins)", "Make your own plugin", "Make you own junction", "Getting information from the QPU", "Running variational algorithms", "Compiling and rewriting quantum circuits", "Compiling quantum jobs using plugins", "LazySynthesis: quantum circuit compilation", "InitialMapping: a qubit placement optimization plugin", "Nnizer: Swap Insertion Solver", "Rewriting quantum circuits", "Low-level optimization", "High-level optimization", "Compressing single qubit gates", "Writing patterns", "Pattern collections (to be used with PatternManager)", "API reference", "qat", "qat.interop", "qat.interop.cirq", "qat.interop.cirq.cirq_to_qlm", "qat.interop.cirq.qlm_to_cirq", "qat.interop.openqasm", "qat.interop.openqasm.OqasmParser", "qat.interop.projectq", "qat.interop.projectq.AqasmEngine", "qat.interop.projectq.AqasmPrinter", "qat.interop.pyquil", "qat.interop.pyquil.pyquil_to_qlm", "qat.interop.pyquil.PyquilQPU", "qat.interop.pyquil.qlm_to_pyquil", "qat.interop.qiskit", "qat.interop.qiskit.AsyncBackendToQPU", "qat.interop.qiskit.BackendToQPU", "qat.interop.qiskit.qiskit_to_qlm", "qat.interop.qiskit.QiskitJob", "qat.interop.qiskit.runtime.QiskitRuntimeQPU", "qat.interop.qiskit.qlm_to_qiskit", "qat.interop.qiskit.QPUToBackend", "qat.pylinalg", "qat.pylinalg.simulator", "qat.pylinalg.simulator.mat2nparray", "qat.pylinalg.simulator.measure", "qat.pylinalg.simulator.project", "qat.pylinalg.simulator.raise_break", "qat.pylinalg.simulator.reset", "qat.pylinalg.simulator.simulate", "qat.comm", "qat.comm.datamodel", "qat.comm.datamodel.ttypes.GateDefinition", "qat.comm.datamodel.ttypes.Op", "qat.comm.exceptions", "qat.comm.exceptions.ttypes.ErrorType", "qat.comm.exceptions.ttypes.GeneratorException", "qat.comm.exceptions.ttypes.PluginException", "qat.comm.exceptions.ttypes.QPUException", "qat.comm.resource", "qat.comm.resource.ttypes.AllocationModel", "qat.comm.resource.ttypes.Device", "qat.comm.resource.ttypes.NodeType", "qat.comm.resource.ttypes.ResourceModel", "qat.comm.shared", "qat.comm.shared.ttypes.IntermediateMeasurement", "qat.comm.shared.ttypes.ProcessingType", "qat.core", "qat.core.wrappers.result.aggregate_data", "qat.core.assertion.assert_plugin", "qat.core.assertion.assert_qpu", "qat.core.Batch", "qat.core.BatchResult", "qat.core.Circuit", "qat.core.console.display", "qat.core.formula_eval.evaluate", "qat.core.HardwareSpecs", "qat.core.Job", "qat.core.util.load_state_vector_from_bin", "qat.core.application", "qat.core.application.Application", "qat.core.application.RemoteApplication", "qat.core.circuit_builder", "qat.core.circuit_builder.matrix_util.default_gate_set", "qat.core.circuit_builder.matrix_util.get_param_generator", "qat.core.circuit_builder.matrix_util.get_predef_generator", "qat.core.circuit_builder.builder.VariableNameNotAvailable", "qat.core.exceptions_utils", "qat.core.exceptions_utils.exception_only", "qat.core.exceptions_utils.generator_exception_only", "qat.core.exceptions_utils.plugin_exception_only", "qat.core.exceptions_utils.qpu_exception_only", "qat.core.gate_set", "qat.core.gate_set.GateSet", "qat.core.gate_set.GateSignature", "qat.core.gate_set.GateSyntaxRedefinition", "qat.core.qpu", "qat.core.qpu.CommonQPU", "qat.core.spins", "qat.core.spins.integer_to_spins", "qat.core.spins.spins_to_integer", "qat.core.variables", "qat.core.variables.abso", "qat.core.variables.angle", "qat.core.variables.ArithExpression", "qat.core.variables.atan2", "qat.core.variables.cos", "qat.core.variables.exp", "qat.core.variables.get_item", "qat.core.variables.heaviside", "qat.core.variables.imag", "qat.core.variables.ln", "qat.core.variables.real", "qat.core.variables.sin", "qat.core.variables.sqrt", "qat.core.variables.Symbol", "qat.core.variables.vmax", "qat.core.Observable", "qat.core.Parameter", "qat.core.printer.plot_in_notebook", "qat.core.Result", "qat.core.Sample", "qat.core.Schedule", "qat.core.wrappers.result.State", "qat.core.Term", "qat.core.Topology", "qat.core.TopologyType", "qat.core.Variable", "qat.core.simutil.wavefunction", "qat.devices", "qat.devices.AllToAll", "qat.devices.GOOGLE_SYCAMORE", "qat.devices.GridDevice", "qat.devices.IBM_BURLINGTON", "qat.devices.IBM_JOHANNESBURG", "qat.devices.IBM_MELBOURNE", "qat.devices.IBM_RUESCHLIKON", "qat.devices.IBM_SINGAPORE", "qat.devices.IBM_TOKYO", "qat.devices.IBM_YORKTOWN", "qat.devices.LineDevice", "qat.devices.RIGETTI_AGAVE", "qat.devices.RIGETTI_ASPEN", "qat.devices.SquareGridDevice", "qat.devices.ZUCHONGZHI", "qat.fermion", "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion", "qat.fermion.chemistry.ucc.compute_active_space_integrals", "qat.fermion.chemistry.ucc.construct_ucc_ansatz", "qat.fermion.chemistry.ucc.convert_to_h_integrals", "qat.fermion.hamiltonians.ElectronicStructureHamiltonian", "qat.fermion.hamiltonians.FermionHamiltonian", "qat.fermion.chemistry.ucc.get_cluster_ops", "qat.fermion.chemistry.ucc.get_hf_ket", "qat.fermion.chemistry.ucc.guess_init_params", "qat.fermion.hamiltonians.make_anderson_model", "qat.fermion.circuits.make_compressed_ldca_circ", "qat.fermion.hamiltonians.make_embedded_model", "qat.fermion.circuits.make_general_hwe_circ", "qat.fermion.hamiltonians.make_hubbard_model", "qat.fermion.circuits.make_ldca_circ", "qat.fermion.circuits.make_mr_circ", "qat.fermion.circuits.make_mrep_circ", "qat.fermion.circuits.make_shallow_circ", "qat.fermion.trotterisation.make_trotterisation_routine", "qat.fermion.chemistry.wrapper.MolecularHamiltonian", "qat.fermion.chemistry.wrapper.MoleculeInfo", "qat.fermion.phase_estimation.perform_phase_estimation", "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation", "qat.fermion.chemistry.ucc.select_active_orbitals", "qat.fermion.hamiltonians.SpinHamiltonian", "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis", "qat.fermion.transforms.transform_to_bk_basis", "qat.fermion.transforms.transform_to_jw_basis", "qat.fermion.transforms.transform_to_parity_basis", "qat.fusion", "qat.fusion.strategies.AdjacentStrategy", "qat.fusion.strategies.EagerStrategy", "qat.fusion.strategies.NaiveStrategy", "qat.generators", "qat.generators.AbstractGenerator", "qat.generators.CombinatorialOptimizerGenerator", "qat.generators.GraphColouringGenerator", "qat.generators.GraphPartitioningGenerator", "qat.generators.KCliqueGenerator", "qat.generators.MaxCutGenerator", "qat.generators.RemoteBatchGenerator", "qat.generators.VertexCoverGenerator", "qat.hardware", "qat.hardware.DefaultGatesSpecification", "qat.hardware.DefaultHardwareModel", "qat.hardware.GatesSpecification", "qat.hardware.HardwareModel", "qat.hardware.make_depolarizing_hardware_model", "qat.lang", "qat.lang.AbstractGate", "qat.lang.algorithms.amplification_step", "qat.lang.AQASM.bits.BoolFormula", "qat.lang.build_gate", "qat.lang.AQASM.bits.Cbit", "qat.lang.AQASM.bits.CRegister", "qat.lang.AQASM.gates.Gate", "qat.lang.AQASM.misc.generate_gate_set", "qat.lang.algorithms.amplification.grover_diffusion", "qat.lang.algorithms.amplification.householder", "qat.lang.models.KPTree", "qat.lang.linking.Linker", "qat.lang.AQASM.arithmetic", "qat.lang.AQASM.arithmetic.add_const_mod", "qat.lang.AQASM.arithmetic.add_mod", "qat.lang.AQASM.arithmetic.modular_exp", "qat.lang.AQASM.arithmetic.mult_const", "qat.lang.AQASM.arithmetic.mult_const_mod", "qat.lang.AQASM.classarith", "qat.lang.AQASM.classarith.add", "qat.lang.AQASM.classarith.add_const", "qat.lang.AQASM.classarith.cuccaro_add", "qat.lang.AQASM.qftarith", "qat.lang.AQASM.qftarith.add", "qat.lang.AQASM.qftarith.add_const", "qat.lang.AQASM.qftarith.mult", "qat.lang.AQASM.qftarith.mult_const", "qat.lang.AQASM.qftarith.QFT", "qat.lang.AQASM.gates.ParamGate", "qat.lang.algorithms.phase_estimation", "qat.lang.Program", "qat.lang.AQASM.qint.QArithExp", "qat.lang.AQASM.bits.Qbit", "qat.lang.AQASM.qbool.QBool", "qat.lang.AQASM.qbool.QBoolArray", "qat.lang.AQASM.qbool.QClause", "qat.lang.AQASM.qint.QCompExp", "qat.lang.qfunc", "qat.lang.AQASM.qint.QInt", "qat.lang.AQASM.bits.QRegister", "qat.lang.qrout", "qat.lang.QRoutine", "qat.lang.algorithms.quantum_counting", "qat.lang.algorithms.amplification.uniform_distribution", "qat.nnize", "qat.nnize.metric.DurationMetric", "qat.nnize.metric.QuantumCostMetric", "qat.opt", "qat.vsolve.ansatz.AnsatzFactory", "qat.opt.BILP", "qat.opt.circuit_generator.CircuitGenerator", "qat.opt.boolexpr.Clause", "qat.opt.CombinatorialProblem", "qat.opt.GraphColouring", "qat.opt.GraphPartitioning", "qat.opt.Ising", "qat.opt.KClique", "qat.opt.MaxCut", "qat.opt.MixingFactory", "qat.opt.mixing_factory", "qat.opt.mixing_factory.IndependentAQO", "qat.opt.mixing_factory.InitialStateBuilder", "qat.opt.mixing_factory.SimpleInitialState", "qat.opt.results", "qat.opt.results.CombinatorialResult", "qat.opt.results.GraphPartitioningResult", "qat.opt.results.KCliqueResult", "qat.opt.results.VertexCoverResult", "qat.opt.MWIS", "qat.opt.NumberPartitioning", "qat.opt.QUBO", "qat.opt.schedule_generator.ScheduleGenerator", "qat.opt.boolexpr.Var", "qat.opt.VertexCover", "qat.pbo", "qat.pbo.AbstractRegister", "qat.pbo.GateName", "qat.pbo.GraphCircuit", "qat.pbo.kak.list_decompositions", "qat.pbo.collections", "qat.pbo.collections.collection_from_target", "qat.pbo.decompositions", "qat.pbo.decompositions.decompositions.get_euler_angles", "qat.pbo.decompositions.ions_decomposition", "qat.pbo.decompositions.u3_decomposition", "qat.pbo.decompositions.xzx_decomposition", "qat.pbo.decompositions.zxz_decomposition", "qat.pbo.decompositions.zyz_decomposition", "qat.pbo.PatternGroup", "qat.pbo.VAR", "qat.plugins", "qat.plugins.AbstractPlugin", "qat.plugins.AdaptVQEPlugin", "qat.plugins.CircuitInliner", "qat.plugins.CostFunctionPlugin", "qat.plugins.Display", "qat.plugins.FusionPlugin", "qat.plugins.GateRewriter", "qat.plugins.GradientDescentOptimizer", "qat.plugins.InitialMapping", "qat.plugins.Junction", "qat.plugins.KAKCompression", "qat.plugins.LazySynthesis", "qat.plugins.MultipleLaunchesAnalyzer", "qat.plugins.NISQCompiler", "qat.plugins.Nnizer", "qat.plugins.ObservableSplitter", "qat.plugins.Optimizer", "qat.plugins.PatternManager", "qat.plugins.PSOMinimizePlugin", "qat.plugins.QuameleonPlugin", "qat.plugins.Remap", "qat.plugins.RemotePlugin", "qat.plugins.ScipyMinimizePlugin", "qat.plugins.SeqOptim", "qat.plugins.SPSAMinimizePlugin", "qat.plugins.TransformObservable", "qat.plugins.ZeroNoiseExtrapolator", "qat.qiskit", "qat.qiskit.Estimator", "qat.qiskit.QaptivaService", "qat.qiskit.converters.qiskit_to_qlm", "qat.qiskit.Sampler", "qat.qpus", "qat.qpus.CLinalg", "qat.qpus.PyLinalg", "qat.qpus.SimulatedAnnealing", "qat.qpus.ClassicalQPU", "qat.qpus.get_current_qpu", "qat.qpus.get_default_qpu", "qat.qpus.get_noisy_qpu", "qat.qpus.QPUHandler", "qat.qpus.QutipQPU", "qat.qpus.RemoteQPU", "qat.quops", "qat.quops.math_util.are_equal_up_to_phase", "qat.quops.ChannelRepresentations", "qat.quops.math_util.convert_density_mat_to_pauli_vec", "qat.quops.math_util.convert_pauli_vec_to_density_mat", "qat.quops.metrics.get_average_process_fidelity", "qat.quops.metrics.get_diamond_norm", "qat.quops.metrics.get_entanglement_process_fidelity", "qat.quops.metrics.get_process_distance", "qat.quops.metrics.get_state_fidelity", "qat.quops.metrics.get_trace_distance", "qat.quops.is_completely_positive", "qat.quops.is_trace_preserving", "qat.quops.is_trace_reducing", "qat.quops.is_unital", "qat.quops.make_avg_fid_equiv_depol_channel", "qat.quops.make_depolarizing_channel", "qat.quops.make_generalized_amplitude_damping", "qat.quops.math_util.make_pauli_matrix_basis", "qat.quops.math_util.make_standard_matrix_basis", "qat.quops.math_util.make_standard_vector_basis", "qat.quops.math_util.multikron", "qat.quops.ParametricAmplitudeDamping", "qat.quops.ParametricGateNoise", "qat.quops.ParametricPureDephasing", "qat.quops.ParametricQuantumChannel", "qat.quops.math_util.partial_trace", "qat.quops.QuantumChannel", "qat.quops.QuantumChannelChi", "qat.quops.QuantumChannelChoi", "qat.quops.QuantumChannelKraus", "qat.quops.QuantumChannelPTM", "qat.synthopline", "qat.synthopline.clifford_normalizer.CliffordNormalizer", "qat.synthopline.co_diagonalization.codiagonalize_with_architecture", "qat.synthopline.util.conjugate_observable_tableau", "qat.synthopline.linear_synthesis.extract_linear_operator", "qat.synthopline.util.extract_pauli_rotations", "qat.synthopline.phase_polynomials.extract_phase_polynomial", "qat.synthopline.initial_mapping.frequency_mapping", "qat.synthopline.pauli_synth.generate_random_observable", "qat.synthopline.generate_trotter_ansatz", "qat.synthopline.initial_mapping.greedy_mapping", "qat.synthopline.linear_operator_synthesis", "qat.synthopline.interface.OperatorTableau", "qat.synthopline.phase_polynomial_synthesis", "qat.synthopline.linear_synthesis.random_linear_operator", "qat.synthopline.phase_polynomials.random_phase_polynomial", "qat.synthopline.co_diagonalization.synthesize_stabilizer_state", "qat.synthopline.interface.WeylOperator", "Demos", "Release notes", "Contributing to myQLM", "Interoperability with gate-based framework", "Qiskit interoperability", "PyQuil interoperability", "Cirq interoperability", "ProjectQ interoperability", "OpenQASM Compiler", "Combinatorial optimization", "NP-hard problems", "Graph Partitioning", "KClique", "Max Cut", "Number Partitioning", "Vertex Cover", "Quantum Approximate Optimization Algorithm (QAOA)", "Adiabatic Quantum Optimization (AQO)", "Crossing lattice", "Problem generators", "Max Cut Generator", "Graph Partitioning Generator", "K-Clique Generator", "Vertex Cover Generator", "Graph Colouring Generator", "Spin and fermionic systems", "Creating and manipulating Hamiltonians", "Quantum application (including Ans\u00e4tze and state preparation)", "Plugins", "Migrating code based on deprecated library qat.dqs", "myQLM \u2013 Quantum Python Package", "Interoperability with annealing framework", "Qiskit 2.0 interoperability with qat-qiskit"], "titleterms": {"": 423, "0": [423, 454], "1": 423, "10": 423, "11": 423, "12": 423, "2": [423, 454], "3": 423, "4": 423, "5": 423, "6": 423, "7": 423, "9": 423, "A": [47, 48, 423], "Ising": [23, 285, 293], "The": [1, 17, 53, 188, 448], "abso": 145, "abstract": [19, 361, 404], "abstractg": [10, 238], "abstractgener": 223, "abstractplugin": 329, "abstractregist": 313, "access": 423, "ad": [10, 422], "adaptvqeplugin": 330, "add": [257, 261], "add_const": [258, 262], "add_const_mod": 251, "add_mod": 252, "addit": 53, "adiabat": 439, "adjacentstrategi": 219, "advanc": [12, 57, 58], "aggregate_data": 111, "algebra": [43, 44, 45], "algorithm": [1, 3, 50, 53, 237, 239, 246, 247, 267, 280, 281, 422, 438], "all": 52, "alloc": [12, 16], "allocationmodel": 103, "alltoal": 173, "amplif": [246, 247, 281], "amplification_step": 239, "an": [26, 58], "analog": [18, 21, 34, 361, 422, 423], "ancilla": 15, "angl": 146, "anneal": [22, 297, 361, 432, 453], "ansatz": [188, 286, 449], "ansatzfactori": 286, "ans\u00e4tz": [285, 449], "api": 62, "appli": 12, "applic": [122, 123, 124, 449], "apply_quantum_subspace_expans": 189, "approxim": 438, "aqasm": [17, 240, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277], "aqasmengin": 71, "aqasmprint": 72, "aqo": 439, "are_equal_up_to_phas": 373, "arithexpress": 147, "arithmet": [16, 237, 250, 251, 252, 253, 254, 255], "ariti": 10, "assembl": 17, "assert": [112, 113], "assert_plugin": 112, "assert_qpu": 113, "asyncbackendtoqpu": 78, "atan2": 148, "ato": 17, "atom": [188, 423], "autom": [15, 31, 312], "avail": 425, "backend": 426, "backendtoqpu": 79, "background": 18, "base": [9, 43, 44, 45, 53, 361, 425, 451], "basi": 372, "basic": [237, 422], "batch": [28, 31, 114, 423], "batchresult": 115, "begin": 57, "behavior": 58, "benchmark": 432, "bibliographi": [23, 438], "bidirect": 53, "bilp": 287, "binari": [24, 440], "bind": 11, "binder": 425, "bit": [240, 242, 243, 270, 277], "bodi": 188, "boolean": [16, 237], "boolexpr": [289, 310], "boolformula": 240, "boson": 39, "build": [16, 19], "build_gat": 241, "builder": 129, "built": 7, "c": [43, 44, 362], "cbit": [116, 242], "channel": 372, "channelrepresent": 374, "chemistri": [189, 190, 191, 192, 195, 196, 197, 208, 209, 211, 212, 214, 449], "circuit": [10, 11, 12, 14, 51, 53, 56, 57, 58, 116, 188, 199, 201, 203, 204, 205, 206, 237, 328, 422, 423, 426, 427, 428, 429, 430, 449], "circuit_build": [125, 126, 127, 128, 129], "circuit_gener": 288, "circuitgener": 288, "circuitinlin": 331, "cirq": [65, 66, 67, 428], "cirq_to_qlm": 66, "class": [285, 361], "classarith": [256, 257, 258, 259], "classic": [12, 16], "classicalqpu": 365, "claus": 289, "clifford": 53, "clifford_norm": 405, "cliffordnorm": 405, "clinalg": [43, 44, 362], "cliqu": 444, "cluster": 188, "co": 149, "co_diagon": [406, 420], "code": 451, "codiagonalize_with_architectur": 406, "coeffici": 19, "collect": [61, 317, 318], "collection_from_target": 318, "color": 16, "colour": 446, "combinatori": [25, 222, 285, 301, 422, 423, 431], "combinatorialoptimizergener": 224, "combinatorialproblem": 290, "combinatorialresult": 302, "comm": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "common": 188, "commonqpu": 140, "commut": 61, "compat": 4, "compil": [17, 47, 51, 52, 53, 423, 430], "compress": 59, "comput": [15, 34, 41, 43, 422, 423], "compute_active_space_integr": 190, "concret": [47, 48], "condit": 16, "conjugate_observable_tableau": 407, "connect": [426, 427], "consol": 117, "constrain": 432, "construct": 28, "construct_ucc_ansatz": 191, "constructor": [188, 448], "content": [448, 449], "contribut": 424, "control": 10, "convert": 359, "convert_density_mat_to_pauli_vec": 375, "convert_pauli_vec_to_density_mat": 376, "convert_to_h_integr": 192, "core": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "costfunctionplugin": 332, "coupl": 188, "cover": [437, 445], "creat": [10, 11, 18, 26, 49, 297, 448], "cregist": 243, "cross": 440, "cuccaro_add": 259, "custom": [10, 49, 59, 297], "cut": [435, 442], "dagger": 10, "datamodel": [94, 95, 96], "declar": 59, "decomposit": [319, 320, 321, 322, 323, 324, 325], "default_gate_set": 126, "defaultgatesspecif": 232, "defaulthardwaremodel": 233, "defin": [10, 312, 423, 448], "definit": 10, "demo": [422, 447], "depend": 423, "deprec": [10, 423, 451], "design": 422, "devic": [104, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 423], "differenti": 50, "diffus": 1, "digit": 422, "displai": [117, 333], "dq": 451, "durationmetr": 283, "eagerstrategi": 220, "eigensolv": 449, "electron": 448, "electronicstructurehamiltonian": 193, "emul": [43, 423], "end": 57, "entangl": 61, "errortyp": 98, "estim": [188, 357, 449], "evalu": [16, 118], "exampl": [1, 16, 47, 48, 52, 54, 58, 61, 334, 448], "except": [97, 98, 99, 100, 101], "exception_onli": 131, "exceptions_util": [130, 131, 132, 133, 134], "execut": [2, 27, 58], "exp": 150, "expans": [61, 188, 449], "export": 12, "express": [16, 237], "extend": [46, 50], "extract": [14, 404], "extract_linear_oper": 408, "extract_pauli_rot": 409, "extract_phase_polynomi": 410, "featur": [53, 423], "fermion": [40, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 328, 422, 423, 447, 448, 449], "fermionhamiltonian": 194, "file": 17, "final": 52, "first": 422, "fix": 423, "flag": 58, "format": 17, "formula_ev": 118, "framework": [425, 453], "frequency_map": 411, "from": 49, "function": [14, 188, 423], "fusion": [218, 219, 220, 221], "fusionplugin": 334, "gate": [9, 10, 12, 14, 17, 43, 52, 53, 59, 60, 61, 231, 237, 244, 266, 342, 361, 425], "gate_set": [135, 136, 137, 138], "gatedefinit": 95, "gatenam": 314, "gaterewrit": 335, "gateset": 136, "gatesignatur": 137, "gatesspecif": 234, "gatesyntaxredefinit": 138, "gener": [10, 12, 25, 31, 172, 222, 223, 224, 225, 226, 227, 228, 229, 230, 285, 301, 404, 423, 441, 442, 443, 444, 445, 446], "generate_gate_set": 245, "generate_random_observ": 412, "generate_trotter_ansatz": 413, "generator_exception_onli": 132, "generatorexcept": 99, "get": [0, 49], "get_average_process_fidel": 377, "get_cluster_op": 195, "get_current_qpu": 366, "get_default_qpu": 367, "get_diamond_norm": 378, "get_entanglement_process_fidel": 379, "get_euler_angl": 320, "get_hf_ket": 196, "get_item": 151, "get_matrix": 448, "get_noisy_qpu": 368, "get_param_gener": 127, "get_predef_gener": 128, "get_process_dist": 380, "get_spec": 42, "get_state_fidel": 381, "get_trace_dist": 382, "google_sycamor": 174, "gradientdescentoptim": 336, "graph": [16, 432, 433, 443, 446], "graphcircuit": 315, "graphcolour": 291, "graphcolouringgener": 225, "graphpartit": 292, "graphpartitioninggener": 226, "graphpartitioningresult": 303, "greedy_map": 414, "griddevic": 175, "grover": [1, 16], "grover_diffus": 246, "guess_init_param": 197, "guid": 7, "hamiltonian": [19, 23, 188, 193, 194, 198, 200, 202, 213, 448], "hard": [285, 432, 441], "hardwar": [110, 231, 232, 233, 234, 235, 236], "hardwaremodel": 235, "hardwarespec": 119, "header": 17, "heavisid": 152, "high": [58, 362], "household": 247, "ibm_burlington": 176, "ibm_johannesburg": 177, "ibm_melbourn": 178, "ibm_rueschlikon": 179, "ibm_singapor": 180, "ibm_tokyo": 181, "ibm_yorktown": 182, "imag": 153, "implement": 58, "includ": 449, "independ": 440, "independentaqo": 298, "index": 57, "inform": 49, "initi": [50, 52, 53], "initial_map": [411, 414], "initialmap": [54, 337], "initialstatebuild": 299, "inner": 41, "insert": 55, "instal": [4, 6], "instruct": 17, "integ": [16, 237], "integer_to_spin": 142, "integr": 448, "interfac": [362, 416, 421], "intermediatemeasur": 108, "interop": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "interoper": [4, 422, 425, 426, 427, 428, 429, 453, 454], "introduct": [57, 58, 422], "involut": 61, "ions_decomposit": 321, "is_completely_posit": 383, "is_trace_preserv": 384, "is_trace_reduc": 385, "is_unit": 386, "iter": 116, "job": [11, 18, 21, 28, 29, 30, 50, 52, 110, 120, 285, 297, 423], "jump": 37, "junction": [48, 338], "k": 444, "kak": 316, "kakcompress": 339, "kcliqu": [294, 434], "kcliquegener": 227, "kcliqueresult": 304, "known": 423, "kptree": 248, "labrari": 237, "lang": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 422], "lattic": 440, "lazysynthesi": [53, 340], "level": [57, 58, 237, 362], "librari": [7, 451], "licens": 5, "lift": 14, "linear": [43, 44, 45], "linear_operator_synthesi": 415, "linear_synthesi": [408, 418], "linedevic": 183, "link": [14, 17, 249], "linker": [237, 249], "list": [17, 19], "list_decomposit": 316, "ln": 154, "load_state_vector_from_bin": 121, "logic": 16, "low": [57, 237, 362], "maco": 6, "main": 423, "make": [42, 47, 48], "make_anderson_model": 198, "make_avg_fid_equiv_depol_channel": 387, "make_compressed_ldca_circ": 199, "make_depolarizing_channel": 388, "make_depolarizing_hardware_model": 236, "make_embedded_model": 200, "make_general_hwe_circ": 201, "make_generalized_amplitude_damp": 389, "make_hubbard_model": 202, "make_ldca_circ": 203, "make_mr_circ": 204, "make_mrep_circ": 205, "make_pauli_matrix_basi": 390, "make_shallow_circ": 206, "make_standard_matrix_basi": 391, "make_standard_vector_basi": 392, "make_trotterisation_routin": 207, "manag": [15, 237], "mani": 188, "manipul": [20, 237, 312, 448], "map": [54, 404], "mat2nparrai": 87, "match": 57, "math_util": [373, 375, 376, 390, 391, 392, 393, 398], "mathemat": 372, "matrix": [4, 10], "matrix_util": [126, 127, 128], "max": [435, 442], "maxcut": 295, "maxcutgener": 228, "maximum": 440, "measur": 88, "merg": 61, "method": [42, 47, 116, 404, 448], "metric": [283, 284, 372, 377, 378, 379, 380, 381, 382], "migrat": 451, "misc": [110, 245], "mixing_factori": [297, 298, 299, 300], "mixingfactori": 296, "mode": 34, "model": [231, 248], "modul": 62, "modular_exp": 253, "molecular": 188, "molecularhamiltonian": [208, 449], "moleculeinfo": [209, 449], "most": 116, "mult": 263, "mult_const": [254, 264], "mult_const_mod": 255, "multikron": 393, "multipl": 28, "multiplelaunchesanalyz": 341, "mwi": [306, 440], "myqlm": [4, 5, 6, 422, 423, 424, 452], "naivestrategi": 221, "name": [14, 60], "nativ": 10, "new": 423, "nisqcompil": 342, "nnize": [282, 283, 284], "nnizer": [55, 343], "nodetyp": 105, "nois": 38, "noiseless": 35, "noisi": 36, "normal": 53, "note": 423, "np": [285, 432, 441], "number": 436, "numberpartit": 307, "object": 110, "observ": [19, 23, 26, 30, 110, 160], "observablesplitt": 344, "one": [19, 28, 52, 448], "op": 96, "open": 5, "openqasm": [68, 69, 430], "oper": [12, 26, 37, 372, 404, 448], "operatortableau": 416, "opt": [285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "optim": [24, 53, 54, 57, 58, 222, 285, 301, 328, 345, 422, 431, 438, 439, 440], "oqasmpars": 69, "oracl": [1, 13, 16], "other": [52, 423, 432], "overview": 422, "own": [42, 47, 48], "packag": [4, 423, 452], "paramet": [50, 60, 110, 161], "parametr": 10, "parametricamplitudedamp": 394, "parametricgatenois": 395, "parametricpuredephas": 396, "parametricquantumchannel": 397, "paramg": 266, "pars": 110, "part": 5, "partial_trac": 398, "partit": [433, 436, 443], "pattern": [57, 58, 59, 60, 61, 312], "patterngroup": 326, "patternmanag": [61, 346], "pauli_synth": 412, "pbo": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "perform": 432, "perform_phase_estim": 210, "perform_pyscf_comput": 211, "phase": [16, 188, 449], "phase_estim": [210, 267], "phase_polynomi": [410, 419], "phase_polynomial_synthesi": 417, "placement": 54, "plot_in_notebook": 162, "plugin": [46, 47, 52, 53, 54, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 404, 422, 423, 450], "plugin_exception_onli": 133, "pluginexcept": 100, "possibl": 52, "post_process": 47, "power": 423, "predefin": [59, 172, 231, 372], "prepar": 449, "preparat": 237, "prerequisit": 4, "printer": 162, "problem": [25, 285, 422, 423, 432, 441], "process": [33, 362, 363], "processingtyp": 109, "program": [1, 2, 8, 9, 12, 18, 22, 27, 32, 237, 268, 422], "project": 89, "projectq": [70, 71, 72, 429], "proprietari": 5, "psominimizeplugin": 347, "pybind": 362, "pylinalg": [43, 45, 85, 86, 87, 88, 89, 90, 91, 92, 363], "pyquil": [73, 74, 75, 76, 427], "pyquil_to_qlm": 74, "pyquilqpu": 75, "pyscf_tool": 211, "python": [14, 43, 45, 62, 423, 452], "qa": 285, "qaoa": [285, 438], "qaptiva": [3, 7], "qaptivaservic": 358, "qarithexp": 269, "qat": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 451, 454], "qbit": 270, "qbool": [271, 272, 273], "qboolarrai": 272, "qclaus": 273, "qcompexp": 274, "qft": 265, "qftarith": [260, 261, 262, 263, 264, 265], "qfunc": 275, "qint": [269, 274, 276], "qiskit": [77, 78, 79, 80, 81, 82, 83, 84, 356, 357, 358, 359, 360, 426, 454], "qiskit_to_qlm": [80, 359], "qiskitjob": 81, "qiskitruntimeqpu": 82, "qlm": 422, "qlm_to_cirq": 67, "qlm_to_pyquil": 76, "qlm_to_qiskit": 83, "qpu": [33, 34, 42, 43, 46, 49, 50, 139, 140, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 423, 426, 427], "qpu_exception_onli": 134, "qpuexcept": 101, "qpuhandl": 369, "qputobackend": 84, "qram": 237, "qregist": 277, "qrout": 278, "qroutin": 279, "qse": 189, "quadrat": [24, 285, 440], "quameleonplugin": 348, "quantum": [1, 2, 8, 10, 12, 13, 14, 16, 17, 27, 32, 33, 51, 52, 53, 56, 188, 237, 297, 361, 362, 363, 372, 422, 423, 426, 427, 428, 429, 430, 432, 438, 439, 449, 452], "quantum_count": 280, "quantumchannel": 399, "quantumchannelchi": 400, "quantumchannelchoi": 401, "quantumchannelkrau": 402, "quantumchannelptm": 403, "quantumcostmetr": 284, "qubit": [12, 54, 59, 60, 116], "qubo": [24, 285, 308, 440], "quop": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "qutipqpu": 370, "raise_break": 90, "random": 404, "random_linear_oper": 418, "random_phase_polynomi": 419, "re": 53, "real": 155, "refer": [51, 55, 62, 248, 250, 256, 260, 296], "regist": [12, 237], "relat": 110, "releas": 423, "remap": 349, "remoteappl": 124, "remotebatchgener": 229, "remoteplugin": 350, "remoteqpu": 371, "remov": 58, "represent": 448, "reset": 91, "resourc": [102, 103, 104, 105, 106], "resourcemodel": 106, "result": [32, 110, 111, 163, 166, 301, 302, 303, 304, 305], "rewrit": [51, 56, 61, 312, 328], "rigetti_agav": 184, "rigetti_aspen": 185, "rotat": 61, "routin": [13, 14, 237], "run": [50, 422], "runtim": 82, "rydberg": 423, "sampl": [29, 164], "sampler": 360, "schedul": [19, 20, 165], "schedule_gener": 309, "schedulegener": 309, "scipyminimizeplugin": 351, "scope": 15, "select_active_orbit": 212, "seqoptim": 352, "set": [16, 52, 237, 342, 440], "sever": 50, "share": [107, 108, 109], "simpleinitialst": 300, "simplif": 61, "simul": [27, 34, 35, 36, 39, 40, 43, 44, 45, 86, 87, 88, 89, 90, 91, 92, 361, 422, 423, 432], "simulatedann": 364, "simutil": 171, "sin": 156, "singl": [26, 59], "solv": 423, "solver": 55, "some": 448, "sourc": 5, "specif": [49, 57, 110, 231], "specifi": 342, "spin": [141, 142, 143, 188, 422, 447, 448], "spinhamiltonian": 213, "spins_to_integ": 143, "spsaminimizeplugin": 353, "sqa": 41, "sqrt": 157, "squaregriddevic": 186, "stack": 422, "start": 0, "state": [166, 237, 449], "statement": 16, "statevector": 362, "step": 422, "stochast": 38, "strategi": [219, 220, 221], "structur": 237, "studi": 188, "subcircuit": 10, "submit_job": 42, "subspac": [188, 449], "support": [50, 285], "swap": 55, "symbol": 158, "synthesi": [328, 404], "synthesize_stabilizer_st": 420, "synthoplin": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "system": [328, 422, 447], "tabl": [448, 449], "target": [52, 57], "term": [26, 167], "test": 50, "text": 17, "through": 57, "time": [17, 58], "tool": [237, 423, 449], "topologi": 168, "topologytyp": 169, "transform": [188, 215, 216, 217], "transform_integrals_to_new_basi": 214, "transform_to_bk_basi": 215, "transform_to_jw_basi": 216, "transform_to_parity_basi": 217, "transformobserv": 354, "translat": [426, 427, 428, 429, 430], "transpil": 52, "trivial": 61, "trotter": 449, "trotteris": 207, "ttype": [95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109], "tutori": 422, "two": 448, "type": [16, 237], "u3_decomposit": 322, "ucc": [188, 190, 191, 192, 195, 196, 197, 212, 214], "uncomput": 15, "unconstrain": [24, 432, 440], "uniform_distribut": 281, "unit": [33, 362, 363], "unitari": 188, "updat": 423, "upon": 7, "us": [19, 26, 28, 46, 52, 61, 116, 423, 448], "user": [7, 10], "util": [110, 121, 188, 222, 328, 361, 372, 404, 407, 409], "valu": 16, "var": [310, 327], "variabl": [11, 19, 110, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170], "variablenamenotavail": 129, "variat": [3, 11, 50, 328, 422, 449], "vertex": [437, 445], "vertexcov": 311, "vertexcovergener": 230, "vertexcoverresult": 305, "vmax": 159, "vqe": 449, "vsolv": 286, "warn": 423, "wavefunct": 171, "weight": 440, "weyloper": 421, "what": 423, "work": 41, "wrapper": [111, 166, 208, 209], "write": [1, 8, 60, 110], "xzx_decomposit": 323, "you": 48, "your": [42, 47, 422], "zeronoiseextrapol": 355, "zuchongzhi": 187, "zxz_decomposit": 324, "zyz_decomposit": 325}})