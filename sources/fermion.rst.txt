.. _qat-fermion:

.. button-link:: https://github.com/myQLM/myqlm-fermion
    :color: primary
    :outline:
    :align: right
    
    :octicon:`logo-github`

Spin and fermionic systems
==========================


Qaptiva provides tools to describe and solve spin and fermionic problems. These tools
are packages in the :mod:`qat.fermion` module. This module is open source and part of both
myQLM and the Qaptiva appliance. The source code can be found
`on GitHub <https://github.com/myQLM/myqlm-fermion>`_.

This :mod:`qat.fermion` module includes, among others:

    * objects to help you define **fermionic and spin Hamiltonians**,
    * spin-to-fermion transformations, such as Jordan-Wigner, Bravyi-Kitaev or parity basis transformations,
    * **variational quantum eigensolver** (VQE) tools, including a module to construct a **UCC ansatz**,
    * tools aimed at atomic and molecule studies (active space selection, basis transformations,...etc),
    * a **trotterization** module,
    * a **quantum phase estimation** module,
    * an adaptative ansatz VQE plugin (ADAPT-VQE),
    * a natural gradient-based optimizer,
    * a sequential hybrid classical-quantum optimizer,
    * a zero noise extrapolator plugin for multiqubit noise mitigation,
    * ...

.. autocard::

Demos
-----
We also provide the following Jupyter notebooks:

    * :notebook:`(Spin-fermions transforms)[qat_fermion_spin_fermion_transforms.ipynb]`
    * :notebook:`(Variational Quantum Eigensolver for fermions)[qat_fermion_vqe_hubbard.ipynb]`
    * :notebook:`(VQE for a H2 molecule using the UCC ansatz)[qat_fermion_vqe_ucc_example_1_h2.ipynb]`
    * :notebook:`(VQE for a LiH molecule using the UCC ansatz)[qat_fermion_vqe_ucc_example_2_lih.ipynb]`
    * :notebook:`(Quantum Phase Estimation on the Hubbard molecule)[qat_fermion_qpe_hubbard_molecule.ipynb]`
    * :notebook:`(Advanced VQE: Quantum Subspace Expansion)[qat_fermion_quantum_subspace_expansion_h2.ipynb]`
    * :notebook:`(Natural gradient-based optimizer)[qat_fermion_natural_gradient_vqe.ipynb]`
    * :notebook:`(Optimizing circuits with the sequential optimization plugin)[qat_fermion_sequential_optimization_plugin.ipynb]`
    * :notebook:`(Running several optimizations and keeping the best one with MultipleLaunchesPlugin)[qat_fermion_multiple_launches_analyzer_plugin.ipynb]`
    * :notebook:`(Mitigating multiqubit noise (QLM users only))[qat_fermion_zero_noise_extrapolation_plugin.ipynb]`
